DEBUG 2017-07-13 19:29:29 NAME: get_factoryDelivery_data_xml {"":""}
DEBUG 2017-07-13 19:29:29 NAME: get_factoryDelivery_data_xml {"START":"---------------------------------------[get_factoryDelivery_data_xml]---------------------------------------------------"}
DEBUG 2017-07-13 19:29:29 NAME: get_factoryDelivery_data_xml [["SELECT teafactorydelivery.oid AS tOid, ticketNbr, vehicleOid, registration, consecNbr1, entryDateTm, firstWght, consecNbr2, exitDateTm, secondWght, nbrOfTrips, factoryWeight, delNo FROM teafactorydelivery INNER JOIN vehicle ON vehicle.oid = teafactorydelivery.vehicleOid WHERE MONTH(entryDateTm) = MONTH('2017-01-01 20:29') ",0.0010778903961182,"MysqliDb->query() >>  file \"C:\\xampp\\htdocs\\lwopsDEV\\functions\\get_factoryDelivery_data_xml.php\" line #32 "]]
DEBUG 2017-07-13 19:29:29 NAME: getVehicleRegList() ["SELECT oid, registration FROM vehicle ORDER BY registration"]
DEBUG 2017-07-13 19:29:29 NAME: get_factoryDelivery_data_xml {"END":"---------------------------------------[get_factoryDelivery_data_xml]---------------------------------------------------"}
DEBUG 2017-07-13 19:30:41 NAME: get_factoryDelivery_data_xml {"":""}
DEBUG 2017-07-13 19:30:41 NAME: get_factoryDelivery_data_xml {"START":"---------------------------------------[get_factoryDelivery_data_xml]---------------------------------------------------"}
DEBUG 2017-07-13 19:30:41 NAME: get_factoryDelivery_data_xml [["SELECT teafactorydelivery.oid AS tOid, ticketNbr, vehicleOid, registration, consecNbr1, entryDateTm, firstWght, consecNbr2, exitDateTm, secondWght, nbrOfTrips, factoryWeight, delNo FROM teafactorydelivery INNER JOIN vehicle ON vehicle.oid = teafactorydelivery.vehicleOid WHERE MONTH(entryDateTm) = MONTH('2017-01-07 20:29') ",0.0012631416320801,"MysqliDb->query() >>  file \"C:\\xampp\\htdocs\\lwopsDEV\\functions\\get_factoryDelivery_data_xml.php\" line #32 "]]
DEBUG 2017-07-13 19:30:41 NAME: getVehicleRegList() ["SELECT oid, registration FROM vehicle ORDER BY registration"]
DEBUG 2017-07-13 19:30:41 NAME: get_factoryDelivery_data_xml {"END":"---------------------------------------[get_factoryDelivery_data_xml]---------------------------------------------------"}
DEBUG 2017-07-13 19:31:03 NAME: get_emp_data_xml {"":""}
DEBUG 2017-07-13 19:31:03 NAME: get_emp_data_xml {"START":"---------------------------------------[get_emp_data_xml]---------------------------------------------------"}
DEBUG 2017-07-13 19:31:03 NAME: loadEmployeeMasterRollGrid() ["SELECT employee.oid, firstName, middleInitial, lastName, role, nationalID, mobileNbr, resident, elecDeduction, ePayment, active, startDt, `terminated`, gender, salary.employeetype AS empType FROM employee INNER JOIN employeerole ON employeerole.employeeOid = employee.oid INNER JOIN employeeroletype ON employeeroletype.oid = employeerole.employeeRoleTypeOid INNER JOIN salary on salary.employeeOid = employee.oid ORDER BY firstName, lastName, nationalID "]
DEBUG 2017-07-13 19:31:03 NAME: get_emp_data_xml {"END":"---------------------------------------[get_emp_data_xml]---------------------------------------------------"}
DEBUG 2017-07-13 19:31:04 NAME: get_factoryDelivery_data_xml {"":""}
DEBUG 2017-07-13 19:31:04 NAME: get_factoryDelivery_data_xml {"START":"---------------------------------------[get_factoryDelivery_data_xml]---------------------------------------------------"}
DEBUG 2017-07-13 19:31:04 NAME: get_factoryDelivery_data_xml [["SELECT teafactorydelivery.oid AS tOid, ticketNbr, vehicleOid, registration, consecNbr1, entryDateTm, firstWght, consecNbr2, exitDateTm, secondWght, nbrOfTrips, factoryWeight, delNo FROM teafactorydelivery INNER JOIN vehicle ON vehicle.oid = teafactorydelivery.vehicleOid WHERE MONTH(entryDateTm) = MONTH(CURRENT_DATE) ",0.0058000087738037,"MysqliDb->query() >>  file \"C:\\xampp\\htdocs\\lwopsDEV\\functions\\get_factoryDelivery_data_xml.php\" line #32 "]]
DEBUG 2017-07-13 19:31:04 NAME: getVehicleRegList() ["SELECT oid, registration FROM vehicle ORDER BY registration"]
DEBUG 2017-07-13 19:31:04 NAME: get_factoryDelivery_data_xml {"END":"---------------------------------------[get_factoryDelivery_data_xml]---------------------------------------------------"}
DEBUG 2017-07-13 19:31:09 NAME: get_factoryDelivery_data_xml {"":""}
DEBUG 2017-07-13 19:31:09 NAME: get_factoryDelivery_data_xml {"START":"---------------------------------------[get_factoryDelivery_data_xml]---------------------------------------------------"}
DEBUG 2017-07-13 19:31:09 NAME: get_factoryDelivery_data_xml [["SELECT teafactorydelivery.oid AS tOid, ticketNbr, vehicleOid, registration, consecNbr1, entryDateTm, firstWght, consecNbr2, exitDateTm, secondWght, nbrOfTrips, factoryWeight, delNo FROM teafactorydelivery INNER JOIN vehicle ON vehicle.oid = teafactorydelivery.vehicleOid WHERE MONTH(entryDateTm) = MONTH('2017-01-01 20:31') ",0.0014419555664062,"MysqliDb->query() >>  file \"C:\\xampp\\htdocs\\lwopsDEV\\functions\\get_factoryDelivery_data_xml.php\" line #32 "]]
DEBUG 2017-07-13 19:31:09 NAME: getVehicleRegList() ["SELECT oid, registration FROM vehicle ORDER BY registration"]
DEBUG 2017-07-13 19:31:09 NAME: get_factoryDelivery_data_xml {"END":"---------------------------------------[get_factoryDelivery_data_xml]---------------------------------------------------"}
DEBUG 2017-07-13 19:31:41 NAME: update_factoryDelivery_data {"editing":"true","gr_id":"1","c0":"11111","c1":"KAN 249F","c2":"11111","c3":"2017-01-03 18:31","c4":"2500.00","c5":"11111","c6":"2017-01-03 19:31","c7":"1500.00","c8":"1","c9":"1000.00","c10":"11111","!nativeeditor_status":"updated","dhxr1499967101484":"1"}
DEBUG 2017-07-13 19:31:41 NAME: update_teaFactoryDelivery()  {"editing":"true","gr_id":"1","c0":"11111","c1":"KAN 249F","c2":"11111","c3":"2017-01-03 18:31","c4":"2500.00","c5":"11111","c6":"2017-01-03 19:31","c7":"1500.00","c8":"1","c9":"1000.00","c10":"11111","!nativeeditor_status":"updated","dhxr1499967101484":"1"}
DEBUG 2017-07-13 19:31:41 NAME: update_teaFactoryDelivery()  ["UPDATE teafactorydelivery SET `ticketNbr` = '11111', `consecNbr1` = '11111', `entryDateTm` = '2017-01-03 06:31', `firstWght` = '2500.00', `consecNbr2` = '11111', `exitDateTm` = '2017-01-03 07:31', `secondWght` = '1500.00', `delNo` = '11111', `nbrOfTrips` = '1' WHERE  oid = '1' "]
DEBUG 2017-07-13 19:31:41 NAME: get_factoryDelivery_data_xml {"":""}
DEBUG 2017-07-13 19:31:41 NAME: get_factoryDelivery_data_xml {"START":"---------------------------------------[get_factoryDelivery_data_xml]---------------------------------------------------"}
DEBUG 2017-07-13 19:31:41 NAME: get_factoryDelivery_data_xml [["SELECT teafactorydelivery.oid AS tOid, ticketNbr, vehicleOid, registration, consecNbr1, entryDateTm, firstWght, consecNbr2, exitDateTm, secondWght, nbrOfTrips, factoryWeight, delNo FROM teafactorydelivery INNER JOIN vehicle ON vehicle.oid = teafactorydelivery.vehicleOid WHERE MONTH(entryDateTm) = MONTH(CURRENT_DATE) ",0.0061829090118408,"MysqliDb->query() >>  file \"C:\\xampp\\htdocs\\lwopsDEV\\functions\\get_factoryDelivery_data_xml.php\" line #32 "]]
DEBUG 2017-07-13 19:31:41 NAME: getVehicleRegList() ["SELECT oid, registration FROM vehicle ORDER BY registration"]
DEBUG 2017-07-13 19:31:41 NAME: get_factoryDelivery_data_xml {"END":"---------------------------------------[get_factoryDelivery_data_xml]---------------------------------------------------"}
DEBUG 2017-07-13 19:31:48 NAME: get_factoryDelivery_data_xml {"":""}
DEBUG 2017-07-13 19:31:48 NAME: get_factoryDelivery_data_xml {"START":"---------------------------------------[get_factoryDelivery_data_xml]---------------------------------------------------"}
DEBUG 2017-07-13 19:31:48 NAME: get_factoryDelivery_data_xml [["SELECT teafactorydelivery.oid AS tOid, ticketNbr, vehicleOid, registration, consecNbr1, entryDateTm, firstWght, consecNbr2, exitDateTm, secondWght, nbrOfTrips, factoryWeight, delNo FROM teafactorydelivery INNER JOIN vehicle ON vehicle.oid = teafactorydelivery.vehicleOid WHERE MONTH(entryDateTm) = MONTH('2017-01-01 20:31') ",0.00088286399841309,"MysqliDb->query() >>  file \"C:\\xampp\\htdocs\\lwopsDEV\\functions\\get_factoryDelivery_data_xml.php\" line #32 "]]
DEBUG 2017-07-13 19:31:48 NAME: getVehicleRegList() ["SELECT oid, registration FROM vehicle ORDER BY registration"]
DEBUG 2017-07-13 19:31:48 NAME: get_factoryDelivery_data_xml {"END":"---------------------------------------[get_factoryDelivery_data_xml]---------------------------------------------------"}
DEBUG 2017-07-13 19:33:47 NAME: get_factoryDelivery_data_xml {"":""}
DEBUG 2017-07-13 19:33:47 NAME: get_factoryDelivery_data_xml {"START":"---------------------------------------[get_factoryDelivery_data_xml]---------------------------------------------------"}
DEBUG 2017-07-13 19:33:47 NAME: get_factoryDelivery_data_xml [["SELECT teafactorydelivery.oid AS tOid, ticketNbr, vehicleOid, registration, consecNbr1, entryDateTm, firstWght, consecNbr2, exitDateTm, secondWght, nbrOfTrips, factoryWeight, delNo FROM teafactorydelivery INNER JOIN vehicle ON vehicle.oid = teafactorydelivery.vehicleOid WHERE MONTH(entryDateTm) = MONTH(CURRENT_DATE) ",0.0085139274597168,"MysqliDb->query() >>  file \"C:\\xampp\\htdocs\\lwopsDEV\\functions\\get_factoryDelivery_data_xml.php\" line #32 "]]
DEBUG 2017-07-13 19:33:47 NAME: getVehicleRegList() ["SELECT oid, registration FROM vehicle ORDER BY registration"]
DEBUG 2017-07-13 19:33:47 NAME: get_factoryDelivery_data_xml {"END":"---------------------------------------[get_factoryDelivery_data_xml]---------------------------------------------------"}
DEBUG 2017-07-13 19:34:21 NAME: get_emp_data_xml {"":""}
DEBUG 2017-07-13 19:34:21 NAME: get_emp_data_xml {"START":"---------------------------------------[get_emp_data_xml]---------------------------------------------------"}
DEBUG 2017-07-13 19:34:21 NAME: loadEmployeeMasterRollGrid() ["SELECT employee.oid, firstName, middleInitial, lastName, role, nationalID, mobileNbr, resident, elecDeduction, ePayment, active, startDt, `terminated`, gender, salary.employeetype AS empType FROM employee INNER JOIN employeerole ON employeerole.employeeOid = employee.oid INNER JOIN employeeroletype ON employeeroletype.oid = employeerole.employeeRoleTypeOid INNER JOIN salary on salary.employeeOid = employee.oid ORDER BY firstName, lastName, nationalID "]
DEBUG 2017-07-13 19:34:21 NAME: get_emp_data_xml {"END":"---------------------------------------[get_emp_data_xml]---------------------------------------------------"}
DEBUG 2017-07-13 19:34:24 NAME: get_factoryDelivery_data_xml {"":""}
DEBUG 2017-07-13 19:34:24 NAME: get_factoryDelivery_data_xml {"START":"---------------------------------------[get_factoryDelivery_data_xml]---------------------------------------------------"}
DEBUG 2017-07-13 19:34:24 NAME: get_factoryDelivery_data_xml [["SELECT teafactorydelivery.oid AS tOid, ticketNbr, vehicleOid, registration, consecNbr1, entryDateTm, firstWght, consecNbr2, exitDateTm, secondWght, nbrOfTrips, factoryWeight, delNo FROM teafactorydelivery INNER JOIN vehicle ON vehicle.oid = teafactorydelivery.vehicleOid WHERE MONTH(entryDateTm) = MONTH(CURRENT_DATE) ",0.0058550834655762,"MysqliDb->query() >>  file \"C:\\xampp\\htdocs\\lwopsDEV\\functions\\get_factoryDelivery_data_xml.php\" line #32 "]]
DEBUG 2017-07-13 19:34:24 NAME: getVehicleRegList() ["SELECT oid, registration FROM vehicle ORDER BY registration"]
DEBUG 2017-07-13 19:34:24 NAME: get_factoryDelivery_data_xml {"END":"---------------------------------------[get_factoryDelivery_data_xml]---------------------------------------------------"}
DEBUG 2017-07-13 19:34:29 NAME: get_factoryDelivery_data_xml {"":""}
DEBUG 2017-07-13 19:34:29 NAME: get_factoryDelivery_data_xml {"START":"---------------------------------------[get_factoryDelivery_data_xml]---------------------------------------------------"}
DEBUG 2017-07-13 19:34:29 NAME: get_factoryDelivery_data_xml [["SELECT teafactorydelivery.oid AS tOid, ticketNbr, vehicleOid, registration, consecNbr1, entryDateTm, firstWght, consecNbr2, exitDateTm, secondWght, nbrOfTrips, factoryWeight, delNo FROM teafactorydelivery INNER JOIN vehicle ON vehicle.oid = teafactorydelivery.vehicleOid WHERE MONTH(entryDateTm) = MONTH('2017-01-01 20:34') ",0.0015010833740234,"MysqliDb->query() >>  file \"C:\\xampp\\htdocs\\lwopsDEV\\functions\\get_factoryDelivery_data_xml.php\" line #32 "]]
DEBUG 2017-07-13 19:34:29 NAME: getVehicleRegList() ["SELECT oid, registration FROM vehicle ORDER BY registration"]
DEBUG 2017-07-13 19:34:29 NAME: get_factoryDelivery_data_xml {"END":"---------------------------------------[get_factoryDelivery_data_xml]---------------------------------------------------"}
DEBUG 2017-07-13 19:35:45 NAME: get_emp_data_xml {"":""}
DEBUG 2017-07-13 19:35:45 NAME: get_emp_data_xml {"START":"---------------------------------------[get_emp_data_xml]---------------------------------------------------"}
DEBUG 2017-07-13 19:35:45 NAME: loadEmployeeMasterRollGrid() ["SELECT employee.oid, firstName, middleInitial, lastName, role, nationalID, mobileNbr, resident, elecDeduction, ePayment, active, startDt, `terminated`, gender, salary.employeetype AS empType FROM employee INNER JOIN employeerole ON employeerole.employeeOid = employee.oid INNER JOIN employeeroletype ON employeeroletype.oid = employeerole.employeeRoleTypeOid INNER JOIN salary on salary.employeeOid = employee.oid ORDER BY firstName, lastName, nationalID "]
DEBUG 2017-07-13 19:35:45 NAME: get_emp_data_xml {"END":"---------------------------------------[get_emp_data_xml]---------------------------------------------------"}
DEBUG 2017-07-13 19:35:49 NAME: get_factoryDelivery_data_xml {"":""}
DEBUG 2017-07-13 19:35:49 NAME: get_factoryDelivery_data_xml {"START":"---------------------------------------[get_factoryDelivery_data_xml]---------------------------------------------------"}
DEBUG 2017-07-13 19:35:49 NAME: get_factoryDelivery_data_xml [["SELECT teafactorydelivery.oid AS tOid, ticketNbr, vehicleOid, registration, consecNbr1, entryDateTm, firstWght, consecNbr2, exitDateTm, secondWght, nbrOfTrips, factoryWeight, delNo FROM teafactorydelivery INNER JOIN vehicle ON vehicle.oid = teafactorydelivery.vehicleOid WHERE MONTH(entryDateTm) = MONTH(CURRENT_DATE) ",0.0060582160949707,"MysqliDb->query() >>  file \"C:\\xampp\\htdocs\\lwopsDEV\\functions\\get_factoryDelivery_data_xml.php\" line #32 "]]
DEBUG 2017-07-13 19:35:49 NAME: getVehicleRegList() ["SELECT oid, registration FROM vehicle ORDER BY registration"]
DEBUG 2017-07-13 19:35:49 NAME: get_factoryDelivery_data_xml {"END":"---------------------------------------[get_factoryDelivery_data_xml]---------------------------------------------------"}
DEBUG 2017-07-13 19:36:14 NAME: get_factoryDelivery_data_xml {"":""}
DEBUG 2017-07-13 19:36:14 NAME: get_factoryDelivery_data_xml {"START":"---------------------------------------[get_factoryDelivery_data_xml]---------------------------------------------------"}
DEBUG 2017-07-13 19:36:14 NAME: get_factoryDelivery_data_xml [["SELECT teafactorydelivery.oid AS tOid, ticketNbr, vehicleOid, registration, consecNbr1, entryDateTm, firstWght, consecNbr2, exitDateTm, secondWght, nbrOfTrips, factoryWeight, delNo FROM teafactorydelivery INNER JOIN vehicle ON vehicle.oid = teafactorydelivery.vehicleOid WHERE MONTH(entryDateTm) = MONTH(CURRENT_DATE) ",0.010557889938354,"MysqliDb->query() >>  file \"C:\\xampp\\htdocs\\lwopsDEV\\functions\\get_factoryDelivery_data_xml.php\" line #32 "]]
DEBUG 2017-07-13 19:36:14 NAME: getVehicleRegList() ["SELECT oid, registration FROM vehicle ORDER BY registration"]
DEBUG 2017-07-13 19:36:14 NAME: get_factoryDelivery_data_xml {"END":"---------------------------------------[get_factoryDelivery_data_xml]---------------------------------------------------"}
DEBUG 2017-07-13 19:36:30 NAME: get_factoryDelivery_data_xml {"":""}
DEBUG 2017-07-13 19:36:30 NAME: get_factoryDelivery_data_xml {"START":"---------------------------------------[get_factoryDelivery_data_xml]---------------------------------------------------"}
DEBUG 2017-07-13 19:36:30 NAME: get_factoryDelivery_data_xml [["SELECT teafactorydelivery.oid AS tOid, ticketNbr, vehicleOid, registration, consecNbr1, entryDateTm, firstWght, consecNbr2, exitDateTm, secondWght, nbrOfTrips, factoryWeight, delNo FROM teafactorydelivery INNER JOIN vehicle ON vehicle.oid = teafactorydelivery.vehicleOid WHERE MONTH(entryDateTm) = MONTH('2017-01-01 20:36') ",0.0015420913696289,"MysqliDb->query() >>  file \"C:\\xampp\\htdocs\\lwopsDEV\\functions\\get_factoryDelivery_data_xml.php\" line #32 "]]
DEBUG 2017-07-13 19:36:30 NAME: getVehicleRegList() ["SELECT oid, registration FROM vehicle ORDER BY registration"]
DEBUG 2017-07-13 19:36:30 NAME: get_factoryDelivery_data_xml {"END":"---------------------------------------[get_factoryDelivery_data_xml]---------------------------------------------------"}
DEBUG 2017-07-13 19:37:04 NAME: get_factoryDelivery_data_xml {"":""}
DEBUG 2017-07-13 19:37:04 NAME: get_factoryDelivery_data_xml {"START":"---------------------------------------[get_factoryDelivery_data_xml]---------------------------------------------------"}
DEBUG 2017-07-13 19:37:04 NAME: get_factoryDelivery_data_xml [["SELECT teafactorydelivery.oid AS tOid, ticketNbr, vehicleOid, registration, consecNbr1, entryDateTm, firstWght, consecNbr2, exitDateTm, secondWght, nbrOfTrips, factoryWeight, delNo FROM teafactorydelivery INNER JOIN vehicle ON vehicle.oid = teafactorydelivery.vehicleOid WHERE MONTH(entryDateTm) = MONTH(CURRENT_DATE) ",0.008613109588623,"MysqliDb->query() >>  file \"C:\\xampp\\htdocs\\lwopsDEV\\functions\\get_factoryDelivery_data_xml.php\" line #32 "]]
DEBUG 2017-07-13 19:37:04 NAME: getVehicleRegList() ["SELECT oid, registration FROM vehicle ORDER BY registration"]
DEBUG 2017-07-13 19:37:04 NAME: get_factoryDelivery_data_xml {"END":"---------------------------------------[get_factoryDelivery_data_xml]---------------------------------------------------"}
DEBUG 2017-07-13 19:37:09 NAME: get_factoryDelivery_data_xml {"":""}
DEBUG 2017-07-13 19:37:09 NAME: get_factoryDelivery_data_xml {"START":"---------------------------------------[get_factoryDelivery_data_xml]---------------------------------------------------"}
DEBUG 2017-07-13 19:37:09 NAME: get_factoryDelivery_data_xml [["SELECT teafactorydelivery.oid AS tOid, ticketNbr, vehicleOid, registration, consecNbr1, entryDateTm, firstWght, consecNbr2, exitDateTm, secondWght, nbrOfTrips, factoryWeight, delNo FROM teafactorydelivery INNER JOIN vehicle ON vehicle.oid = teafactorydelivery.vehicleOid WHERE MONTH(entryDateTm) = MONTH('2017-01-01 20:37') ",0.0017321109771729,"MysqliDb->query() >>  file \"C:\\xampp\\htdocs\\lwopsDEV\\functions\\get_factoryDelivery_data_xml.php\" line #32 "]]
DEBUG 2017-07-13 19:37:09 NAME: getVehicleRegList() ["SELECT oid, registration FROM vehicle ORDER BY registration"]
DEBUG 2017-07-13 19:37:09 NAME: get_factoryDelivery_data_xml {"END":"---------------------------------------[get_factoryDelivery_data_xml]---------------------------------------------------"}
DEBUG 2017-07-13 19:45:03 NAME: get_factoryDelivery_data_xml {"":""}
DEBUG 2017-07-13 19:45:03 NAME: get_factoryDelivery_data_xml {"START":"---------------------------------------[get_factoryDelivery_data_xml]---------------------------------------------------"}
DEBUG 2017-07-13 19:45:03 NAME: get_factoryDelivery_data_xml [["SELECT teafactorydelivery.oid AS tOid, ticketNbr, vehicleOid, registration, consecNbr1, entryDateTm, firstWght, consecNbr2, exitDateTm, secondWght, nbrOfTrips, factoryWeight, delNo FROM teafactorydelivery INNER JOIN vehicle ON vehicle.oid = teafactorydelivery.vehicleOid WHERE MONTH(entryDateTm) = MONTH(CURRENT_DATE) ",0.0061550140380859,"MysqliDb->query() >>  file \"C:\\xampp\\htdocs\\lwopsDEV\\functions\\get_factoryDelivery_data_xml.php\" line #32 "]]
DEBUG 2017-07-13 19:45:03 NAME: getVehicleRegList() ["SELECT oid, registration FROM vehicle ORDER BY registration"]
DEBUG 2017-07-13 19:45:03 NAME: get_factoryDelivery_data_xml {"END":"---------------------------------------[get_factoryDelivery_data_xml]---------------------------------------------------"}
DEBUG 2017-07-13 19:45:08 NAME: get_emp_data_xml {"":""}
DEBUG 2017-07-13 19:45:08 NAME: get_emp_data_xml {"START":"---------------------------------------[get_emp_data_xml]---------------------------------------------------"}
DEBUG 2017-07-13 19:45:08 NAME: loadEmployeeMasterRollGrid() ["SELECT employee.oid, firstName, middleInitial, lastName, role, nationalID, mobileNbr, resident, elecDeduction, ePayment, active, startDt, `terminated`, gender, salary.employeetype AS empType FROM employee INNER JOIN employeerole ON employeerole.employeeOid = employee.oid INNER JOIN employeeroletype ON employeeroletype.oid = employeerole.employeeRoleTypeOid INNER JOIN salary on salary.employeeOid = employee.oid ORDER BY firstName, lastName, nationalID "]
DEBUG 2017-07-13 19:45:08 NAME: get_emp_data_xml {"END":"---------------------------------------[get_emp_data_xml]---------------------------------------------------"}
DEBUG 2017-07-13 19:45:10 NAME: get_factoryDelivery_data_xml {"":""}
DEBUG 2017-07-13 19:45:10 NAME: get_factoryDelivery_data_xml {"START":"---------------------------------------[get_factoryDelivery_data_xml]---------------------------------------------------"}
DEBUG 2017-07-13 19:45:10 NAME: get_factoryDelivery_data_xml [["SELECT teafactorydelivery.oid AS tOid, ticketNbr, vehicleOid, registration, consecNbr1, entryDateTm, firstWght, consecNbr2, exitDateTm, secondWght, nbrOfTrips, factoryWeight, delNo FROM teafactorydelivery INNER JOIN vehicle ON vehicle.oid = teafactorydelivery.vehicleOid WHERE MONTH(entryDateTm) = MONTH(CURRENT_DATE) ",0.0062909126281738,"MysqliDb->query() >>  file \"C:\\xampp\\htdocs\\lwopsDEV\\functions\\get_factoryDelivery_data_xml.php\" line #32 "]]
DEBUG 2017-07-13 19:45:10 NAME: getVehicleRegList() ["SELECT oid, registration FROM vehicle ORDER BY registration"]
DEBUG 2017-07-13 19:45:10 NAME: get_factoryDelivery_data_xml {"END":"---------------------------------------[get_factoryDelivery_data_xml]---------------------------------------------------"}
DEBUG 2017-07-13 19:45:19 NAME: get_factoryDelivery_data_xml {"":""}
DEBUG 2017-07-13 19:45:19 NAME: get_factoryDelivery_data_xml {"START":"---------------------------------------[get_factoryDelivery_data_xml]---------------------------------------------------"}
DEBUG 2017-07-13 19:45:19 NAME: get_factoryDelivery_data_xml [["SELECT teafactorydelivery.oid AS tOid, ticketNbr, vehicleOid, registration, consecNbr1, entryDateTm, firstWght, consecNbr2, exitDateTm, secondWght, nbrOfTrips, factoryWeight, delNo FROM teafactorydelivery INNER JOIN vehicle ON vehicle.oid = teafactorydelivery.vehicleOid WHERE MONTH(entryDateTm) = MONTH('2017-07-01') ",0.0039520263671875,"MysqliDb->query() >>  file \"C:\\xampp\\htdocs\\lwopsDEV\\functions\\get_factoryDelivery_data_xml.php\" line #32 "]]
DEBUG 2017-07-13 19:45:19 NAME: getVehicleRegList() ["SELECT oid, registration FROM vehicle ORDER BY registration"]
DEBUG 2017-07-13 19:45:19 NAME: get_factoryDelivery_data_xml {"END":"---------------------------------------[get_factoryDelivery_data_xml]---------------------------------------------------"}
DEBUG 2017-07-13 19:45:24 NAME: get_factoryDelivery_data_xml {"":""}
DEBUG 2017-07-13 19:45:24 NAME: get_factoryDelivery_data_xml {"START":"---------------------------------------[get_factoryDelivery_data_xml]---------------------------------------------------"}
DEBUG 2017-07-13 19:45:24 NAME: get_factoryDelivery_data_xml [["SELECT teafactorydelivery.oid AS tOid, ticketNbr, vehicleOid, registration, consecNbr1, entryDateTm, firstWght, consecNbr2, exitDateTm, secondWght, nbrOfTrips, factoryWeight, delNo FROM teafactorydelivery INNER JOIN vehicle ON vehicle.oid = teafactorydelivery.vehicleOid WHERE MONTH(entryDateTm) = MONTH('2017-01-01') ",0.0017740726470947,"MysqliDb->query() >>  file \"C:\\xampp\\htdocs\\lwopsDEV\\functions\\get_factoryDelivery_data_xml.php\" line #32 "]]
DEBUG 2017-07-13 19:45:24 NAME: getVehicleRegList() ["SELECT oid, registration FROM vehicle ORDER BY registration"]
DEBUG 2017-07-13 19:45:24 NAME: get_factoryDelivery_data_xml {"END":"---------------------------------------[get_factoryDelivery_data_xml]---------------------------------------------------"}
DEBUG 2017-07-13 19:54:23 NAME: get_emp_data_xml {"":""}
DEBUG 2017-07-13 19:54:23 NAME: get_emp_data_xml {"START":"---------------------------------------[get_emp_data_xml]---------------------------------------------------"}
DEBUG 2017-07-13 19:54:23 NAME: loadEmployeeMasterRollGrid() ["SELECT employee.oid, firstName, middleInitial, lastName, role, nationalID, mobileNbr, resident, elecDeduction, ePayment, active, startDt, `terminated`, gender, salary.employeetype AS empType FROM employee INNER JOIN employeerole ON employeerole.employeeOid = employee.oid INNER JOIN employeeroletype ON employeeroletype.oid = employeerole.employeeRoleTypeOid INNER JOIN salary on salary.employeeOid = employee.oid ORDER BY firstName, lastName, nationalID "]
DEBUG 2017-07-13 19:54:23 NAME: get_emp_data_xml {"END":"---------------------------------------[get_emp_data_xml]---------------------------------------------------"}
DEBUG 2017-07-13 19:54:27 NAME: get_OpsMonthlyCalendar_data_xml {"":""}
DEBUG 2017-07-13 19:54:27 NAME: get_OpsMonthlyCalendar_data_xml {"START":"---------------------------------------[get_OpsMonthlyCalendar_data_xml]---------------------------------------------------"}
DEBUG 2017-07-13 19:54:27 NAME: [GET] {"fteAdvance":null,"chkBox":null}
DEBUG 2017-07-13 19:54:27 NAME: loadMonthsCalendarGrid() ["SELECT oid, month, year, 0 AS flag FROM opsmonthlycalendar WHERE year = YEAR(CURRENT_DATE)"]
DEBUG 2017-07-13 19:54:27 NAME: get_OpsMonthlyCalendar_data_xml {"END":"---------------------------------------[get_OpsMonthlyCalendar_data_xml]---------------------------------------------------"}
DEBUG 2017-07-13 19:54:32 NAME: get_tea_factory_delivery_report_data_xml {"":""}
DEBUG 2017-07-13 19:54:32 NAME: get_tea_factory_delivery_report_data_xml {"START":"---------------------------------------[get_tea_factory_delivery_report_data_xml]---------------------------------------------------"}
DEBUG 2017-07-13 19:54:32 NAME: GET {"selectedRowID":"1","dhxr1499968471983":"1"}
DEBUG 2017-07-13 19:54:32 NAME: get_tea_factory_delivery_report_data_xml {"ERROR THROWN: ":"You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '' at line 1 query: select oid, monthNbr, month, year FROM opsmonthlycalendar WHERE oid = "}
DEBUG 2017-07-13 19:54:32 NAME: loadErrorGrid() {"ERROR THROWN 3: ":"<b>You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '' at line 1 query: select oid, monthNbr, month, year FROM opsmonthlycalendar WHERE oid =  [1839]<\/b>"}
DEBUG 2017-07-13 19:55:17 NAME: get_tea_factory_delivery_report_data_xml {"":""}
DEBUG 2017-07-13 19:55:17 NAME: get_tea_factory_delivery_report_data_xml {"START":"---------------------------------------[get_tea_factory_delivery_report_data_xml]---------------------------------------------------"}
DEBUG 2017-07-13 19:55:17 NAME: GET {"selectedRowID":"1","dhxr1499968517884":"1"}
DEBUG 2017-07-13 19:55:17 NAME: get_tea_factory_delivery_report_data_xml {"ERROR THROWN: ":"You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '' at line 1 query: select oid, monthNbr, month, year FROM opsmonthlycalendar WHERE oid = "}
DEBUG 2017-07-13 19:55:17 NAME: loadErrorGrid() {"ERROR THROWN 3: ":"<b>You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '' at line 1 query: select oid, monthNbr, month, year FROM opsmonthlycalendar WHERE oid =  [1839]<\/b>"}
DEBUG 2017-07-13 19:55:48 NAME: get_tea_factory_delivery_report_data_xml {"":""}
DEBUG 2017-07-13 19:55:48 NAME: get_tea_factory_delivery_report_data_xml {"START":"---------------------------------------[get_tea_factory_delivery_report_data_xml]---------------------------------------------------"}
DEBUG 2017-07-13 19:55:48 NAME: GET {"selectedRowID":"1","dhxr1499968548519":"1"}
DEBUG 2017-07-13 19:55:48 NAME: getMonthlyCalendarStartAsDate() ["select oid, monthNbr, month, year FROM opsmonthlycalendar WHERE oid = 1"]
DEBUG 2017-07-13 19:55:48 NAME: getMonthlyCalendarEndAsDateStr() ["select oid, monthNbr, month, year FROM opsmonthlycalendar WHERE oid = 1"]
DEBUG 2017-07-13 19:55:48 NAME: loadTeaFcatoryStatementGrid() ["SELECT oid, entryDateTm, firstWght, secondWght, SUM((firstWght-secondWght)) AS netWeight  FROM teafactorydelivery WHERE entryDateTm BETWEEN '2017-01-01'  AND '2017-01-31' GROUP BY entryDateTm"]
DEBUG 2017-07-13 19:55:48 NAME: get_tea_factory_delivery_report_data_xml {"END":"---------------------------------------[get_tea_factory_delivery_report_data_xml]---------------------------------------------------"}
DEBUG 2017-07-13 19:56:29 NAME: get_tea_factory_delivery_report_data_xml {"":""}
DEBUG 2017-07-13 19:56:29 NAME: get_tea_factory_delivery_report_data_xml {"START":"---------------------------------------[get_tea_factory_delivery_report_data_xml]---------------------------------------------------"}
DEBUG 2017-07-13 19:56:29 NAME: GET {"selectedRowID":"1","dhxr1499968589642":"1"}
DEBUG 2017-07-13 19:56:29 NAME: getMonthlyCalendarStartAsDate() ["select oid, monthNbr, month, year FROM opsmonthlycalendar WHERE oid = 1"]
DEBUG 2017-07-13 19:56:29 NAME: getMonthlyCalendarEndAsDateStr() ["select oid, monthNbr, month, year FROM opsmonthlycalendar WHERE oid = 1"]
DEBUG 2017-07-13 19:56:29 NAME: loadTeaFcatoryStatementGrid() ["SELECT oid, entryDateTm, firstWght, secondWght, (firstWght-secondWght) AS netWeight  FROM teafactorydelivery WHERE entryDateTm BETWEEN '2017-01-01'  AND '2017-01-31' GROUP BY entryDateTm"]
DEBUG 2017-07-13 19:56:29 NAME: get_tea_factory_delivery_report_data_xml {"END":"---------------------------------------[get_tea_factory_delivery_report_data_xml]---------------------------------------------------"}
DEBUG 2017-07-13 19:56:45 NAME: get_tea_factory_delivery_report_data_xml {"":""}
DEBUG 2017-07-13 19:56:45 NAME: get_tea_factory_delivery_report_data_xml {"START":"---------------------------------------[get_tea_factory_delivery_report_data_xml]---------------------------------------------------"}
DEBUG 2017-07-13 19:56:45 NAME: GET {"selectedRowID":"1","dhxr1499968604982":"1"}
DEBUG 2017-07-13 19:56:45 NAME: getMonthlyCalendarStartAsDate() ["select oid, monthNbr, month, year FROM opsmonthlycalendar WHERE oid = 1"]
DEBUG 2017-07-13 19:56:45 NAME: getMonthlyCalendarEndAsDateStr() ["select oid, monthNbr, month, year FROM opsmonthlycalendar WHERE oid = 1"]
DEBUG 2017-07-13 19:56:45 NAME: loadTeaFcatoryStatementGrid() ["SELECT oid, entryDateTm, firstWght, secondWght, (firstWght-secondWght) AS netWeight  FROM teafactorydelivery WHERE entryDateTm BETWEEN '2017-01-01'  AND '2017-01-31' "]
DEBUG 2017-07-13 19:56:45 NAME: get_tea_factory_delivery_report_data_xml {"END":"---------------------------------------[get_tea_factory_delivery_report_data_xml]---------------------------------------------------"}
DEBUG 2017-07-13 20:00:12 NAME: get_tea_factory_delivery_report_data_xml {"":""}
DEBUG 2017-07-13 20:00:12 NAME: get_tea_factory_delivery_report_data_xml {"START":"---------------------------------------[get_tea_factory_delivery_report_data_xml]---------------------------------------------------"}
DEBUG 2017-07-13 20:00:12 NAME: GET {"selectedRowID":"1","dhxr1499968812352":"1"}
DEBUG 2017-07-13 20:00:12 NAME: getMonthlyCalendarStartAsDate() ["select oid, monthNbr, month, year FROM opsmonthlycalendar WHERE oid = 1"]
DEBUG 2017-07-13 20:00:12 NAME: getMonthlyCalendarEndAsDateStr() ["select oid, monthNbr, month, year FROM opsmonthlycalendar WHERE oid = 1"]
DEBUG 2017-07-13 20:00:12 NAME: loadTeaFcatoryStatementGrid() ["SELECT oid, entryDateTm, firstWght, secondWght, (firstWght-secondWght) AS netWeight  FROM teafactorydelivery WHERE entryDateTm BETWEEN '2017-01-01'  AND '2017-01-31' "]
DEBUG 2017-07-13 20:00:12 NAME: get_tea_factory_delivery_report_data_xml {"END":"---------------------------------------[get_tea_factory_delivery_report_data_xml]---------------------------------------------------"}
DEBUG 2017-07-13 20:01:24 NAME: get_tea_factory_delivery_report_data_xml {"":""}
DEBUG 2017-07-13 20:01:24 NAME: get_tea_factory_delivery_report_data_xml {"START":"---------------------------------------[get_tea_factory_delivery_report_data_xml]---------------------------------------------------"}
DEBUG 2017-07-13 20:01:24 NAME: GET {"selectedRowID":"1","dhxr1499968884156":"1"}
DEBUG 2017-07-13 20:01:24 NAME: getMonthlyCalendarStartAsDate() ["select oid, monthNbr, month, year FROM opsmonthlycalendar WHERE oid = 1"]
DEBUG 2017-07-13 20:01:24 NAME: getMonthlyCalendarEndAsDateStr() ["select oid, monthNbr, month, year FROM opsmonthlycalendar WHERE oid = 1"]
DEBUG 2017-07-13 20:01:24 NAME: loadTeaFcatoryStatementGrid() ["SELECT oid, entryDateTm, firstWght, secondWght, (firstWght-secondWght) AS netWeight  FROM teafactorydelivery WHERE entryDateTm BETWEEN '2017-01-01'  AND '2017-01-31' "]
DEBUG 2017-07-13 20:01:24 NAME: get_tea_factory_delivery_report_data_xml {"END":"---------------------------------------[get_tea_factory_delivery_report_data_xml]---------------------------------------------------"}
DEBUG 2017-07-13 20:02:39 NAME: get_tea_factory_delivery_report_data_xml {"":""}
DEBUG 2017-07-13 20:02:39 NAME: get_tea_factory_delivery_report_data_xml {"START":"---------------------------------------[get_tea_factory_delivery_report_data_xml]---------------------------------------------------"}
DEBUG 2017-07-13 20:02:39 NAME: GET {"selectedRowID":"1","dhxr1499968959972":"1"}
DEBUG 2017-07-13 20:02:40 NAME: getMonthlyCalendarStartAsDate() ["select oid, monthNbr, month, year FROM opsmonthlycalendar WHERE oid = 1"]
DEBUG 2017-07-13 20:02:40 NAME: getMonthlyCalendarEndAsDateStr() ["select oid, monthNbr, month, year FROM opsmonthlycalendar WHERE oid = 1"]
DEBUG 2017-07-13 20:02:40 NAME: loadTeaFcatoryStatementGrid() ["SELECT oid, entryDateTm, firstWght, secondWght, (firstWght-secondWght) AS netWeight  FROM teafactorydelivery WHERE entryDateTm BETWEEN '2017-01-01'  AND '2017-01-31' "]
DEBUG 2017-07-13 20:02:40 NAME: get_tea_factory_delivery_report_data_xml {"END":"---------------------------------------[get_tea_factory_delivery_report_data_xml]---------------------------------------------------"}
DEBUG 2017-07-13 20:03:02 NAME: get_tea_factory_delivery_report_data_xml {"":""}
DEBUG 2017-07-13 20:03:02 NAME: get_tea_factory_delivery_report_data_xml {"START":"---------------------------------------[get_tea_factory_delivery_report_data_xml]---------------------------------------------------"}
DEBUG 2017-07-13 20:03:02 NAME: GET {"selectedRowID":"1","dhxr1499968982596":"1"}
DEBUG 2017-07-13 20:03:02 NAME: getMonthlyCalendarStartAsDate() ["select oid, monthNbr, month, year FROM opsmonthlycalendar WHERE oid = 1"]
DEBUG 2017-07-13 20:03:02 NAME: getMonthlyCalendarEndAsDateStr() ["select oid, monthNbr, month, year FROM opsmonthlycalendar WHERE oid = 1"]
DEBUG 2017-07-13 20:03:02 NAME: loadTeaFcatoryStatementGrid() ["SELECT oid, entryDateTm, firstWght, secondWght, (firstWght-secondWght) AS netWeight  FROM teafactorydelivery WHERE entryDateTm BETWEEN '2017-01-01'  AND '2017-01-31' "]
DEBUG 2017-07-13 20:03:02 NAME: get_tea_factory_delivery_report_data_xml {"END":"---------------------------------------[get_tea_factory_delivery_report_data_xml]---------------------------------------------------"}
DEBUG 2017-07-13 20:03:21 NAME: get_tea_factory_delivery_report_data_xml {"":""}
DEBUG 2017-07-13 20:03:21 NAME: get_tea_factory_delivery_report_data_xml {"START":"---------------------------------------[get_tea_factory_delivery_report_data_xml]---------------------------------------------------"}
DEBUG 2017-07-13 20:03:21 NAME: GET {"selectedRowID":"1","dhxr1499969001342":"1"}
DEBUG 2017-07-13 20:03:21 NAME: getMonthlyCalendarStartAsDate() ["select oid, monthNbr, month, year FROM opsmonthlycalendar WHERE oid = 1"]
DEBUG 2017-07-13 20:03:21 NAME: getMonthlyCalendarEndAsDateStr() ["select oid, monthNbr, month, year FROM opsmonthlycalendar WHERE oid = 1"]
DEBUG 2017-07-13 20:03:21 NAME: loadTeaFcatoryStatementGrid() ["SELECT oid, entryDateTm, firstWght, secondWght, (firstWght-secondWght) AS netWeight  FROM teafactorydelivery WHERE entryDateTm BETWEEN '2017-01-01'  AND '2017-01-31' "]
DEBUG 2017-07-13 20:03:21 NAME: get_tea_factory_delivery_report_data_xml {"END":"---------------------------------------[get_tea_factory_delivery_report_data_xml]---------------------------------------------------"}
DEBUG 2017-07-13 20:04:16 NAME: get_tea_factory_delivery_report_data_xml {"":""}
DEBUG 2017-07-13 20:04:16 NAME: get_tea_factory_delivery_report_data_xml {"START":"---------------------------------------[get_tea_factory_delivery_report_data_xml]---------------------------------------------------"}
DEBUG 2017-07-13 20:04:16 NAME: GET {"selectedRowID":"1","dhxr1499969056772":"1"}
DEBUG 2017-07-13 20:04:16 NAME: getMonthlyCalendarStartAsDate() ["select oid, monthNbr, month, year FROM opsmonthlycalendar WHERE oid = 1"]
DEBUG 2017-07-13 20:04:16 NAME: getMonthlyCalendarEndAsDateStr() ["select oid, monthNbr, month, year FROM opsmonthlycalendar WHERE oid = 1"]
DEBUG 2017-07-13 20:04:16 NAME: loadTeaFcatoryStatementGrid() ["SELECT oid, entryDateTm, firstWght, secondWght, (firstWght-secondWght) AS netWeight  FROM teafactorydelivery WHERE entryDateTm BETWEEN '2017-01-01'  AND '2017-01-31' "]
DEBUG 2017-07-13 20:04:16 NAME: get_tea_factory_delivery_report_data_xml {"END":"---------------------------------------[get_tea_factory_delivery_report_data_xml]---------------------------------------------------"}
DEBUG 2017-07-13 20:06:52 NAME: get_tea_factory_delivery_report_data_xml {"":""}
DEBUG 2017-07-13 20:06:52 NAME: get_tea_factory_delivery_report_data_xml {"START":"---------------------------------------[get_tea_factory_delivery_report_data_xml]---------------------------------------------------"}
DEBUG 2017-07-13 20:06:52 NAME: GET {"selectedRowID":"1","dhxr1499969212804":"1"}
DEBUG 2017-07-13 20:06:52 NAME: getMonthlyCalendarStartAsDate() ["select oid, monthNbr, month, year FROM opsmonthlycalendar WHERE oid = 1"]
DEBUG 2017-07-13 20:06:52 NAME: getMonthlyCalendarEndAsDateStr() ["select oid, monthNbr, month, year FROM opsmonthlycalendar WHERE oid = 1"]
DEBUG 2017-07-13 20:06:52 NAME: loadTeaFcatoryStatementGrid() ["SELECT oid, entryDateTm, firstWght, secondWght, (firstWght-secondWght) AS netWeight  FROM teafactorydelivery WHERE entryDateTm BETWEEN '2017-01-01'  AND '2017-01-31' "]
DEBUG 2017-07-13 20:06:52 NAME: get_tea_factory_delivery_report_data_xml {"END":"---------------------------------------[get_tea_factory_delivery_report_data_xml]---------------------------------------------------"}
DEBUG 2017-07-13 20:07:27 NAME: get_tea_factory_delivery_report_data_xml {"":""}
DEBUG 2017-07-13 20:07:27 NAME: get_tea_factory_delivery_report_data_xml {"START":"---------------------------------------[get_tea_factory_delivery_report_data_xml]---------------------------------------------------"}
DEBUG 2017-07-13 20:07:27 NAME: GET {"selectedRowID":"1","dhxr1499969247426":"1"}
DEBUG 2017-07-13 20:07:27 NAME: getMonthlyCalendarStartAsDate() ["select oid, monthNbr, month, year FROM opsmonthlycalendar WHERE oid = 1"]
DEBUG 2017-07-13 20:07:27 NAME: getMonthlyCalendarEndAsDateStr() ["select oid, monthNbr, month, year FROM opsmonthlycalendar WHERE oid = 1"]
DEBUG 2017-07-13 20:07:27 NAME: loadTeaFcatoryStatementGrid() ["SELECT oid, entryDateTm, firstWght, secondWght, (firstWght-secondWght) AS netWeight  FROM teafactorydelivery WHERE entryDateTm BETWEEN '2017-01-01'  AND '2017-01-31' "]
DEBUG 2017-07-13 20:07:27 NAME: get_tea_factory_delivery_report_data_xml {"END":"---------------------------------------[get_tea_factory_delivery_report_data_xml]---------------------------------------------------"}
DEBUG 2017-07-13 20:07:49 NAME: get_tea_factory_delivery_report_data_xml {"":""}
DEBUG 2017-07-13 20:07:49 NAME: get_tea_factory_delivery_report_data_xml {"START":"---------------------------------------[get_tea_factory_delivery_report_data_xml]---------------------------------------------------"}
DEBUG 2017-07-13 20:07:49 NAME: GET {"selectedRowID":"1","dhxr1499969269280":"1"}
DEBUG 2017-07-13 20:07:49 NAME: getMonthlyCalendarStartAsDate() ["select oid, monthNbr, month, year FROM opsmonthlycalendar WHERE oid = 1"]
DEBUG 2017-07-13 20:07:49 NAME: getMonthlyCalendarEndAsDateStr() ["select oid, monthNbr, month, year FROM opsmonthlycalendar WHERE oid = 1"]
DEBUG 2017-07-13 20:07:49 NAME: loadTeaFcatoryStatementGrid() ["SELECT oid, entryDateTm, firstWght, secondWght, (firstWght-secondWght) AS netWeight  FROM teafactorydelivery WHERE entryDateTm BETWEEN '2017-01-01'  AND '2017-01-31' "]
DEBUG 2017-07-13 20:07:49 NAME: get_tea_factory_delivery_report_data_xml {"END":"---------------------------------------[get_tea_factory_delivery_report_data_xml]---------------------------------------------------"}
DEBUG 2017-07-13 20:08:11 NAME: get_tea_factory_delivery_report_data_xml {"":""}
DEBUG 2017-07-13 20:08:11 NAME: get_tea_factory_delivery_report_data_xml {"START":"---------------------------------------[get_tea_factory_delivery_report_data_xml]---------------------------------------------------"}
DEBUG 2017-07-13 20:08:11 NAME: GET {"selectedRowID":"1","dhxr1499969291423":"1"}
DEBUG 2017-07-13 20:08:11 NAME: getMonthlyCalendarStartAsDate() ["select oid, monthNbr, month, year FROM opsmonthlycalendar WHERE oid = 1"]
DEBUG 2017-07-13 20:08:11 NAME: getMonthlyCalendarEndAsDateStr() ["select oid, monthNbr, month, year FROM opsmonthlycalendar WHERE oid = 1"]
DEBUG 2017-07-13 20:08:11 NAME: loadTeaFcatoryStatementGrid() ["SELECT oid, entryDateTm, firstWght, secondWght, (firstWght-secondWght) AS netWeight  FROM teafactorydelivery WHERE entryDateTm BETWEEN '2017-01-01'  AND '2017-01-31' "]
DEBUG 2017-07-13 20:08:11 NAME: get_tea_factory_delivery_report_data_xml {"END":"---------------------------------------[get_tea_factory_delivery_report_data_xml]---------------------------------------------------"}
DEBUG 2017-07-13 20:08:15 NAME: get_tea_factory_delivery_report_data_xml {"":""}
DEBUG 2017-07-13 20:08:15 NAME: get_tea_factory_delivery_report_data_xml {"START":"---------------------------------------[get_tea_factory_delivery_report_data_xml]---------------------------------------------------"}
DEBUG 2017-07-13 20:08:15 NAME: GET {"selectedRowID":"7","dhxr1499969295472":"1"}
DEBUG 2017-07-13 20:08:15 NAME: getMonthlyCalendarStartAsDate() ["select oid, monthNbr, month, year FROM opsmonthlycalendar WHERE oid = 7"]
DEBUG 2017-07-13 20:08:15 NAME: getMonthlyCalendarEndAsDateStr() ["select oid, monthNbr, month, year FROM opsmonthlycalendar WHERE oid = 7"]
DEBUG 2017-07-13 20:08:15 NAME: loadTeaFcatoryStatementGrid() ["SELECT oid, entryDateTm, firstWght, secondWght, (firstWght-secondWght) AS netWeight  FROM teafactorydelivery WHERE entryDateTm BETWEEN '2017-07-01'  AND '2017-07-31' "]
DEBUG 2017-07-13 20:08:15 NAME: get_tea_factory_delivery_report_data_xml {"END":"---------------------------------------[get_tea_factory_delivery_report_data_xml]---------------------------------------------------"}
DEBUG 2017-07-13 20:08:49 NAME: get_tea_factory_delivery_report_data_xml {"":""}
DEBUG 2017-07-13 20:08:49 NAME: get_tea_factory_delivery_report_data_xml {"START":"---------------------------------------[get_tea_factory_delivery_report_data_xml]---------------------------------------------------"}
DEBUG 2017-07-13 20:08:49 NAME: GET {"selectedRowID":"1","dhxr1499969329181":"1"}
DEBUG 2017-07-13 20:08:49 NAME: getMonthlyCalendarStartAsDate() ["select oid, monthNbr, month, year FROM opsmonthlycalendar WHERE oid = 1"]
DEBUG 2017-07-13 20:08:49 NAME: getMonthlyCalendarEndAsDateStr() ["select oid, monthNbr, month, year FROM opsmonthlycalendar WHERE oid = 1"]
DEBUG 2017-07-13 20:08:49 NAME: loadTeaFcatoryStatementGrid() ["SELECT oid, entryDateTm, firstWght, secondWght, (firstWght-secondWght) AS netWeight  FROM teafactorydelivery WHERE entryDateTm BETWEEN '2017-01-01'  AND '2017-01-31' "]
DEBUG 2017-07-13 20:08:49 NAME: get_tea_factory_delivery_report_data_xml {"END":"---------------------------------------[get_tea_factory_delivery_report_data_xml]---------------------------------------------------"}
DEBUG 2017-07-13 20:10:52 NAME: get_emp_data_xml {"":""}
DEBUG 2017-07-13 20:10:52 NAME: get_emp_data_xml {"START":"---------------------------------------[get_emp_data_xml]---------------------------------------------------"}
DEBUG 2017-07-13 20:10:52 NAME: loadEmployeeMasterRollGrid() ["SELECT employee.oid, firstName, middleInitial, lastName, role, nationalID, mobileNbr, resident, elecDeduction, ePayment, active, startDt, `terminated`, gender, salary.employeetype AS empType FROM employee INNER JOIN employeerole ON employeerole.employeeOid = employee.oid INNER JOIN employeeroletype ON employeeroletype.oid = employeerole.employeeRoleTypeOid INNER JOIN salary on salary.employeeOid = employee.oid ORDER BY firstName, lastName, nationalID "]
DEBUG 2017-07-13 20:10:52 NAME: get_emp_data_xml {"END":"---------------------------------------[get_emp_data_xml]---------------------------------------------------"}
DEBUG 2017-07-13 20:11:00 NAME: get_OpsMonthlyCalendar_data_xml {"":""}
DEBUG 2017-07-13 20:11:00 NAME: get_OpsMonthlyCalendar_data_xml {"START":"---------------------------------------[get_OpsMonthlyCalendar_data_xml]---------------------------------------------------"}
DEBUG 2017-07-13 20:11:00 NAME: [GET] {"fteAdvance":null,"chkBox":null}
DEBUG 2017-07-13 20:11:00 NAME: loadMonthsCalendarGrid() ["SELECT oid, month, year, 0 AS flag FROM opsmonthlycalendar WHERE year = YEAR(CURRENT_DATE)"]
DEBUG 2017-07-13 20:11:00 NAME: get_OpsMonthlyCalendar_data_xml {"END":"---------------------------------------[get_OpsMonthlyCalendar_data_xml]---------------------------------------------------"}
DEBUG 2017-07-13 20:11:09 NAME: get_tea_factory_delivery_report_data_xml {"":""}
DEBUG 2017-07-13 20:11:09 NAME: get_tea_factory_delivery_report_data_xml {"START":"---------------------------------------[get_tea_factory_delivery_report_data_xml]---------------------------------------------------"}
DEBUG 2017-07-13 20:11:09 NAME: GET {"selectedRowID":"1","dhxr1499969469347":"1"}
DEBUG 2017-07-13 20:11:09 NAME: getMonthlyCalendarStartAsDate() ["select oid, monthNbr, month, year FROM opsmonthlycalendar WHERE oid = 1"]
DEBUG 2017-07-13 20:11:09 NAME: getMonthlyCalendarEndAsDateStr() ["select oid, monthNbr, month, year FROM opsmonthlycalendar WHERE oid = 1"]
DEBUG 2017-07-13 20:11:09 NAME: loadTeaFcatoryStatementGrid() ["SELECT oid, entryDateTm, firstWght, secondWght, (firstWght-secondWght) AS netWeight  FROM teafactorydelivery WHERE entryDateTm BETWEEN '2017-01-01'  AND '2017-01-31' "]
DEBUG 2017-07-13 20:11:09 NAME: get_tea_factory_delivery_report_data_xml {"END":"---------------------------------------[get_tea_factory_delivery_report_data_xml]---------------------------------------------------"}
DEBUG 2017-07-13 20:11:12 NAME: get_tea_factory_delivery_report_data_xml {"":""}
DEBUG 2017-07-13 20:11:12 NAME: get_tea_factory_delivery_report_data_xml {"START":"---------------------------------------[get_tea_factory_delivery_report_data_xml]---------------------------------------------------"}
DEBUG 2017-07-13 20:11:12 NAME: GET {"selectedRowID":"2","dhxr1499969472409":"1"}
DEBUG 2017-07-13 20:11:12 NAME: getMonthlyCalendarStartAsDate() ["select oid, monthNbr, month, year FROM opsmonthlycalendar WHERE oid = 2"]
DEBUG 2017-07-13 20:11:12 NAME: getMonthlyCalendarEndAsDateStr() ["select oid, monthNbr, month, year FROM opsmonthlycalendar WHERE oid = 2"]
DEBUG 2017-07-13 20:11:12 NAME: loadTeaFcatoryStatementGrid() ["SELECT oid, entryDateTm, firstWght, secondWght, (firstWght-secondWght) AS netWeight  FROM teafactorydelivery WHERE entryDateTm BETWEEN '2017-02-01'  AND '2017-02-28' "]
DEBUG 2017-07-13 20:11:12 NAME: get_tea_factory_delivery_report_data_xml {"END":"---------------------------------------[get_tea_factory_delivery_report_data_xml]---------------------------------------------------"}
DEBUG 2017-07-13 20:11:23 NAME: get_tea_factory_delivery_report_data_xml {"":""}
DEBUG 2017-07-13 20:11:23 NAME: get_tea_factory_delivery_report_data_xml {"START":"---------------------------------------[get_tea_factory_delivery_report_data_xml]---------------------------------------------------"}
DEBUG 2017-07-13 20:11:23 NAME: GET {"selectedRowID":"1","dhxr1499969483752":"1"}
DEBUG 2017-07-13 20:11:23 NAME: getMonthlyCalendarStartAsDate() ["select oid, monthNbr, month, year FROM opsmonthlycalendar WHERE oid = 1"]
DEBUG 2017-07-13 20:11:23 NAME: getMonthlyCalendarEndAsDateStr() ["select oid, monthNbr, month, year FROM opsmonthlycalendar WHERE oid = 1"]
DEBUG 2017-07-13 20:11:23 NAME: loadTeaFcatoryStatementGrid() ["SELECT oid, entryDateTm, firstWght, secondWght, (firstWght-secondWght) AS netWeight  FROM teafactorydelivery WHERE entryDateTm BETWEEN '2017-01-01'  AND '2017-01-31' "]
DEBUG 2017-07-13 20:11:23 NAME: get_tea_factory_delivery_report_data_xml {"END":"---------------------------------------[get_tea_factory_delivery_report_data_xml]---------------------------------------------------"}
DEBUG 2017-07-13 20:11:36 NAME: get_OpsBiWeeklyCalendar_data_xml [["SELECT oid, `periodStartDate`, `periodEndDt`, `payDate`, 0 AS flag FROM `opsbiweeklycalendar` WHERE periodEndDt < '2017-07-13' ORDER BY payDate",0.001298189163208,"MysqliDb->query() >>  file \"C:\\xampp\\htdocs\\lwopsDEV\\functions\\get_OpsBiWeeklyCalendar_data_xml.php\" line #14 "]]
DEBUG 2017-07-13 20:11:40 NAME: get_tea_picking_report_data_xml {"":""}
DEBUG 2017-07-13 20:11:40 NAME: get_tea_picking_report_data_xml {"START":"---------------------------------------[get_tea_picking_report_data_xml]---------------------------------------------------"}
DEBUG 2017-07-13 20:11:40 NAME: loadTeaPickData() {"":""}
DEBUG 2017-07-13 20:11:40 NAME: loadTeaPickData() {"START":"---------------------------------------[loadTeaPickData()]---------------------------------------------------"}
DEBUG 2017-07-13 20:11:40 NAME: loadTeaPickData() {"selectedRowID":"9144","dhxr1499969500774":"1"}
DEBUG 2017-07-13 20:11:40 NAME: loadTeaPickData() ["SELECT periodStartDate, periodEndDt, payDate FROM opsbiweeklycalendar WHERE oid = 9144"]
DEBUG 2017-07-13 20:11:40 NAME: loadTeaPickData() [{"periodStartDate":"2017-01-06 00:00:00","periodEndDt":"2017-01-19 00:00:00","payDate":"2017-01-21 00:00:00"}]
DEBUG 2017-07-13 20:11:41 NAME: loadTeaPickData() ["SELECT rate, startDt, endDt FROM teapickingrate WHERE startDt >= '2017-01-06' AND endDt <= '2017-01-19' OR (endDt IS NULL) ORDER BY startDt LIMIT 1 "]
DEBUG 2017-07-13 20:11:41 NAME: loadTeaPickData() ["SELECT GROUP_CONCAT(DISTINCT CONCAT('SUM(IF(attendanceDt = ''', attendanceDt,''', weight, 0)) AS ', aDay) ORDER BY attendanceDt ASC) as aRow\n        FROM empTeaPickingDetail_vw \n        WHERE attendanceDt BETWEEN '2017-01-06' AND '2017-01-19' \n        ORDER BY attendanceDt ASC"]
DEBUG 2017-07-13 20:11:41 NAME: loadTeaPickData() [concatrows row] {"aRow":"SUM(IF(attendanceDt = '2017-01-06 00:00:00', weight, 0)) AS Fri06,SUM(IF(attendanceDt = '2017-01-07 00:00:00', weight, 0)) AS Sat07,SUM(IF(attendanceDt = '2017-01-08 00:00:00', weight, 0)) AS Sun08,SUM(IF(attendanceDt = '2017-01-09 00:00:00', weight, 0)) AS Mon09,SUM(IF(attendanceDt = '2017-01-10 00:00:00', weight, 0)) AS Tue10,SUM(IF(attendanceDt = '2017-01-11 00:00:00', weight, 0)) AS Wed11,SUM(IF(attendanceDt = '2017-01-12 00:00:00', weight, 0)) AS Thu12,SUM(IF(attendanceDt = '2017-01-13 00:00:00', weight, 0)) AS Fri13,SUM(IF(attendanceDt = '2017-01-14 00:00:00', weight, 0)) AS Sat14,SUM(IF(attendanceDt = '2017-01-15 00:00:00', weight, 0)) AS Sun15,SUM(IF(attendanceDt = '2017-01-16 00:00:00', weight, 0)) AS Mon16,SUM(IF(attendanceDt = '2017-01-17 00:00:00', weight, 0)) AS Tue17,SUM(IF(attendanceDt = '2017-01-18 00:00:00', weight, 0)) AS Wed18,SUM(IF(attendanceDt = '2017-01-19 00:00:00', weight, 0)) AS Thu19"}
DEBUG 2017-07-13 20:11:42 NAME: loadTeaPickData() ["CREATE TABLE ctable AS SELECT eOid, CONCAT(firstName, ' ', middleinitial, ' ', lastName) AS employeeNm, SUM(IF(attendanceDt = '2017-01-06 00:00:00', weight, 0)) AS Fri06,SUM(IF(attendanceDt = '2017-01-07 00:00:00', weight, 0)) AS Sat07,SUM(IF(attendanceDt = '2017-01-08 00:00:00', weight, 0)) AS Sun08,SUM(IF(attendanceDt = '2017-01-09 00:00:00', weight, 0)) AS Mon09,SUM(IF(attendanceDt = '2017-01-10 00:00:00', weight, 0)) AS Tue10,SUM(IF(attendanceDt = '2017-01-11 00:00:00', weight, 0)) AS Wed11,SUM(IF(attendanceDt = '2017-01-12 00:00:00', weight, 0)) AS Thu12,SUM(IF(attendanceDt = '2017-01-13 00:00:00', weight, 0)) AS Fri13,SUM(IF(attendanceDt = '2017-01-14 00:00:00', weight, 0)) AS Sat14,SUM(IF(attendanceDt = '2017-01-15 00:00:00', weight, 0)) AS Sun15,SUM(IF(attendanceDt = '2017-01-16 00:00:00', weight, 0)) AS Mon16,SUM(IF(attendanceDt = '2017-01-17 00:00:00', weight, 0)) AS Tue17,SUM(IF(attendanceDt = '2017-01-18 00:00:00', weight, 0)) AS Wed18,SUM(IF(attendanceDt = '2017-01-19 00:00:00', weight, 0)) AS Thu19 FROM empTeaPickingDetail_vw GROUP BY eOid ORDER BY attendanceDt ASC"]
DEBUG 2017-07-13 20:11:42 NAME: loadTeaPickData() ["SELECT * FROM ctable ORDER BY employeeNm"]
DEBUG 2017-07-13 20:11:42 NAME: getColumnTotals() ["eOid","employeeNm","Fri06","Sat07","Sun08","Mon09","Tue10","Wed11","Thu12","Fri13","Sat14","Sun15","Mon16","Tue17","Wed18","Thu19"]
DEBUG 2017-07-13 20:11:42 NAME: loadTeaPickData() ["DROP TABLE ctable"]
DEBUG 2017-07-13 20:11:42 NAME: loadTeaPickData() {"":""}
DEBUG 2017-07-13 20:11:42 NAME: loadTeaPickData() {"START":"---------------------------------------[loadTeaPickData()]---------------------------------------------------"}
DEBUG 2017-07-13 20:11:42 NAME: get_tea_picking_report_data_xml {"END":"---------------------------------------[get_tea_picking_report_data_xml]---------------------------------------------------"}
DEBUG 2017-07-14 09:32:49 NAME: get_PandL_income_data_xml {"":""}
DEBUG 2017-07-14 09:32:49 NAME: get_PandL_income_data_xml {"START":"---------------------------------------[get_PandL_income_data_xml]---------------------------------------------------"}
DEBUG 2017-07-14 09:32:49 NAME: GET {"selectedPandLgrid":"FISH","dhxr1500017568693":"1"}
DEBUG 2017-07-14 09:32:49 NAME: [GET] {"LOB":"FISH","months":null}
DEBUG 2017-07-14 09:32:49 NAME: getCalendarOidsArray() ["SELECT oid FROM opsmonthlycalendar WHERE year = YEAR(CURRENT_DATE)"]
DEBUG 2017-07-14 09:32:49 NAME: getCalendarOidsArray() [{"oid":1},{"oid":2},{"oid":3},{"oid":4},{"oid":5},{"oid":6},{"oid":7},{"oid":8},{"oid":9},{"oid":10},{"oid":11},{"oid":12}]
DEBUG 2017-07-14 09:32:49 NAME: deleteAllFromPandLpivotTale() ["DELETE FROM pandlpivot"]
DEBUG 2017-07-14 09:32:49 NAME: setLineOfBusinessOid() ["SELECT oid FROM LineOfBusiness WHERE department = 'FISH'"]
DEBUG 2017-07-14 09:32:49 NAME: setLineOfBusinessOid() [{"oid":1}]
DEBUG 2017-07-14 09:32:49 NAME: getPandLOids() ["SELECT oid FROM fishpandl WHERE opsMonthlyCalendarOid  = 1"]
DEBUG 2017-07-14 09:32:49 NAME: getPandLOids() [{"oid":73}]
DEBUG 2017-07-14 09:32:49 NAME: deletePandLexpenseRecords(PandLoidArray) [{"oid":73}]
DEBUG 2017-07-14 09:32:49 NAME: deletePandLexpenseRecords() ["DELETE FROM FishPandLlabourExpenseDetail WHERE  fishPandLOid  = '73' "]
DEBUG 2017-07-14 09:32:49 NAME: deletePandLexistingrecord() ["DELETE FROM FishPandL WHERE  opsMonthlyCalendarOid = '1' "]
DEBUG 2017-07-14 09:32:49 NAME: getSelectedMonth() ["SELECT year from opsmonthlycalendar WHERE oid = 1"]
DEBUG 2017-07-14 09:32:49 NAME: getRegularSalesIncome() for FISH ["SELECT IF(SUM(weight*pricePerKg)IS NULL,0, SUM(weight*pricePerKg))  AS totSalesIncome FROM fishsales WHERE YEAR(salesDt) = 2017 AND MONTH(salesDt) = 1 "]
DEBUG 2017-07-14 09:32:49 NAME: getRegularSalesIncome() for FISH (2017,1) [{"totSalesIncome":22750}]
DEBUG 2017-07-14 09:32:49 NAME: getEmployeePurchases() for FISH ["SELECT IF(SUM(`quantity`*`unitPrice`)IS NULL,0, SUM(`quantity`*`unitPrice`)) AS emloyeePurchaseIncome FROM employeepurchases WHERE YEAR(purchaseDt) = 2017 AND MONTH(purchaseDt) = 1 AND lineOfBusinessOid = 1"]
DEBUG 2017-07-14 09:32:49 NAME: getEmployeePurchases() for FISH (2017,1) [{"emloyeePurchaseIncome":90}]
DEBUG 2017-07-14 09:32:49 NAME: getTotSalesIncome() {"lineOfBusinessOid":1,"opsMonthlyCalendarOid":1,"salesIncome":22840}
DEBUG 2017-07-14 09:32:49 NAME: getOtherIncome() ["SELECT IF(SUM(incomeAmt)IS NULL,0, SUM(incomeAmt)) AS incomeAmt FROM OtherDeptIncome WHERE lineOfBusinessOid = 1 AND YEAR(date) = 2017 AND MONTH(date) = 1 "]
DEBUG 2017-07-14 09:32:49 NAME: getPurchases() ["SELECT ROUND(IF(SUM(amount)IS NULL,0, SUM(amount)),2) AS purchases FROM Expenses WHERE lineOfBusinessOid = 1 AND categoryOid = 4 AND YEAR(expenseDate) = 2017 AND MONTH(expenseDate) = 1 "]
DEBUG 2017-07-14 09:32:49 NAME: getGeneralExpenses() ["SELECT IF(SUM(amount) IS NULL, 0, SUM(amount)) AS totGeneralExpense FROM expenses WHERE YEAR(expenseDate) = 2017 and MONTH(expenseDate) = 1 AND lineOfBusinessOid = 1 "]
DEBUG 2017-07-14 09:32:49 NAME: getGeneralExpenses() [{"totGeneralExpense":13760}]
DEBUG 2017-07-14 09:32:49 NAME: getElecExpenses() ["SELECT lineOfBusinessOid, electricityAccountOid, electricityaccount.accountNbr, allocation, electricityexpense.amount, (allocation\/100)*electricityexpense.amount AS elecExpense, startOpsMonthlyCalendarOid FROM electricityallocation INNER JOIN electricityaccount ON electricityaccount.oid = electricityallocation.electricityAccountOid INNER JOIN electricityexpense ON electricityexpense.electricityAccounOid = electricityallocation.electricityAccountOid WHERE lineOfBusinessOid = 1 AND startOpsMonthlyCalendarOid = 1 "]
DEBUG 2017-07-14 09:32:49 NAME: getElecExpenses() []
DEBUG 2017-07-14 09:32:49 NAME: getFishPandL() {"lineOfBusinessOid":1,"opsMonthlyCalendarOid":1,"salesIncome":22840,"otherIncome":0,"purchases":11160,"otherPurchases":0,"generalExpenses":13760,"elecExpenses":0}
DEBUG 2017-07-14 09:32:49 NAME: getOtherWorkExpensesByRole() ["SELECT empotherworkhrs_vw.eOid ,employeerole.employeeRoleTypeOid AS roleOid, SUM(hours) AS totHrs, salaryAmount, salarytype FROM empotherworkhrs_vw INNER JOIN( employee, employeerole, employeeroletype ) ON ( empotherworkhrs_vw.eOid = employee.oid AND employee.oid = employeerole.employeeOid AND employeerole.employeeRoleTypeOid = employeeroletype.oid ) WHERE ( attendanceDt BETWEEN '2017-01-01' AND '2017-01-31' ) AND lobOid = 1 GROUP BY empotherworkhrs_vw.eOid ,salaryAmount,salarytype, employeerole.employeeRoleTypeOid"]
DEBUG 2017-07-14 09:32:49 NAME: getOtherWorkExpensesByRole() []
DEBUG 2017-07-14 09:32:49 NAME: getOtherWorkExpensesByRole() []
DEBUG 2017-07-14 09:32:49 NAME: getEmployeeRoleTypes() ["SELECT oid, role FROM employeeroletype"]
DEBUG 2017-07-14 09:32:49 NAME: getEmployeeRoleTypes() [{"oid":1,"role":"TEA PICKER"},{"oid":2,"role":"SUPERVISOR"},{"oid":3,"role":"OPS MANAGER"},{"oid":4,"role":"DIRECTOR"},{"oid":5,"role":"HOUSEHELP"},{"oid":6,"role":"GARDENER"},{"oid":7,"role":"SECURITY"},{"oid":8,"role":"FARM HAND"},{"oid":9,"role":"DRIVER"},{"oid":10,"role":"MILK MAN"}]
DEBUG 2017-07-14 09:32:49 NAME: fillEmptyRoleTypes() {"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0}
DEBUG 2017-07-14 09:32:49 NAME: getParttimeExpensesByRole() ["SELECT empparttimehrs_vw.eOid ,employeerole.employeeRoleTypeOid AS roleOid, SUM(hours) AS totHrs, salaryAmount, salarytype FROM empparttimehrs_vw INNER JOIN( employee, employeerole, employeeroletype ) ON ( empparttimehrs_vw.eOid = employee.oid AND employee.oid = employeerole.employeeOid AND employeerole.employeeRoleTypeOid = employeeroletype.oid ) WHERE ( attendanceDt BETWEEN '2017-01-01' AND '2017-01-31' ) AND lobOid = 1 GROUP BY empparttimehrs_vw.eOid ,salaryAmount,salarytype, employeerole.employeeRoleTypeOid"]
DEBUG 2017-07-14 09:32:49 NAME: getParttimeExpensesByRole() [{"eOid":25,"roleOid":7,"totHrs":6,"salaryAmount":280,"salarytype":"D"},{"eOid":48,"roleOid":2,"totHrs":9,"salaryAmount":14000,"salarytype":"M"}]
DEBUG 2017-07-14 09:32:49 NAME: getParttimeExpensesByRole() {"7":210,"2":508.06451612903}
DEBUG 2017-07-14 09:32:49 NAME: getEmployeeRoleTypes() ["SELECT oid, role FROM employeeroletype"]
DEBUG 2017-07-14 09:32:49 NAME: getEmployeeRoleTypes() [{"oid":1,"role":"TEA PICKER"},{"oid":2,"role":"SUPERVISOR"},{"oid":3,"role":"OPS MANAGER"},{"oid":4,"role":"DIRECTOR"},{"oid":5,"role":"HOUSEHELP"},{"oid":6,"role":"GARDENER"},{"oid":7,"role":"SECURITY"},{"oid":8,"role":"FARM HAND"},{"oid":9,"role":"DRIVER"},{"oid":10,"role":"MILK MAN"}]
DEBUG 2017-07-14 09:32:49 NAME: fillEmptyRoleTypes() {"7":210,"2":508.06451612903,"1":0,"3":0,"4":0,"5":0,"6":0,"8":0,"9":0,"10":0}
DEBUG 2017-07-14 09:32:49 NAME: getEmployeeRoleTypes() ["SELECT oid, role FROM employeeroletype"]
DEBUG 2017-07-14 09:32:49 NAME: getEmployeeRoleTypes() [{"oid":1,"role":"TEA PICKER"},{"oid":2,"role":"SUPERVISOR"},{"oid":3,"role":"OPS MANAGER"},{"oid":4,"role":"DIRECTOR"},{"oid":5,"role":"HOUSEHELP"},{"oid":6,"role":"GARDENER"},{"oid":7,"role":"SECURITY"},{"oid":8,"role":"FARM HAND"},{"oid":9,"role":"DRIVER"},{"oid":10,"role":"MILK MAN"}]
DEBUG 2017-07-14 09:32:49 NAME: combineExpensesByRole() {"1":0,"2":508.06451612903,"3":0,"4":0,"5":0,"6":0,"7":210,"8":0,"9":0,"10":0}
DEBUG 2017-07-14 09:32:49 NAME: savePandLexpenseDetails() ["INSERT  INTO FishPandLlabourExpenseDetail (`FishPandLOid`, `employeeRoleOid`, `expenseAmount`)  VALUES ('85', '1', '0')"]
DEBUG 2017-07-14 09:32:49 NAME: savePandLexpenseDetails() ["INSERT  INTO FishPandLlabourExpenseDetail (`FishPandLOid`, `employeeRoleOid`, `expenseAmount`)  VALUES ('85', '2', '508.06451612903')"]
DEBUG 2017-07-14 09:32:49 NAME: savePandLexpenseDetails() ["INSERT  INTO FishPandLlabourExpenseDetail (`FishPandLOid`, `employeeRoleOid`, `expenseAmount`)  VALUES ('85', '3', '0')"]
DEBUG 2017-07-14 09:32:49 NAME: savePandLexpenseDetails() ["INSERT  INTO FishPandLlabourExpenseDetail (`FishPandLOid`, `employeeRoleOid`, `expenseAmount`)  VALUES ('85', '4', '0')"]
DEBUG 2017-07-14 09:32:49 NAME: savePandLexpenseDetails() ["INSERT  INTO FishPandLlabourExpenseDetail (`FishPandLOid`, `employeeRoleOid`, `expenseAmount`)  VALUES ('85', '5', '0')"]
DEBUG 2017-07-14 09:32:49 NAME: savePandLexpenseDetails() ["INSERT  INTO FishPandLlabourExpenseDetail (`FishPandLOid`, `employeeRoleOid`, `expenseAmount`)  VALUES ('85', '6', '0')"]
DEBUG 2017-07-14 09:32:49 NAME: savePandLexpenseDetails() ["INSERT  INTO FishPandLlabourExpenseDetail (`FishPandLOid`, `employeeRoleOid`, `expenseAmount`)  VALUES ('85', '7', '210')"]
DEBUG 2017-07-14 09:32:49 NAME: savePandLexpenseDetails() ["INSERT  INTO FishPandLlabourExpenseDetail (`FishPandLOid`, `employeeRoleOid`, `expenseAmount`)  VALUES ('85', '8', '0')"]
DEBUG 2017-07-14 09:32:49 NAME: savePandLexpenseDetails() ["INSERT  INTO FishPandLlabourExpenseDetail (`FishPandLOid`, `employeeRoleOid`, `expenseAmount`)  VALUES ('85', '9', '0')"]
DEBUG 2017-07-14 09:32:49 NAME: savePandLexpenseDetails() ["INSERT  INTO FishPandLlabourExpenseDetail (`FishPandLOid`, `employeeRoleOid`, `expenseAmount`)  VALUES ('85', '10', '0')"]
DEBUG 2017-07-14 09:32:49 NAME: getPandLOids() ["SELECT oid FROM fishpandl WHERE opsMonthlyCalendarOid  = 2"]
DEBUG 2017-07-14 09:32:49 NAME: getPandLOids() [{"oid":74}]
DEBUG 2017-07-14 09:32:49 NAME: deletePandLexpenseRecords(PandLoidArray) [{"oid":74}]
DEBUG 2017-07-14 09:32:49 NAME: deletePandLexpenseRecords() ["DELETE FROM FishPandLlabourExpenseDetail WHERE  fishPandLOid  = '74' "]
DEBUG 2017-07-14 09:32:49 NAME: deletePandLexistingrecord() ["DELETE FROM FishPandL WHERE  opsMonthlyCalendarOid = '2' "]
DEBUG 2017-07-14 09:32:49 NAME: getSelectedMonth() ["SELECT year from opsmonthlycalendar WHERE oid = 2"]
DEBUG 2017-07-14 09:32:49 NAME: getRegularSalesIncome() for FISH ["SELECT IF(SUM(weight*pricePerKg)IS NULL,0, SUM(weight*pricePerKg))  AS totSalesIncome FROM fishsales WHERE YEAR(salesDt) = 2017 AND MONTH(salesDt) = 2 "]
DEBUG 2017-07-14 09:32:49 NAME: getRegularSalesIncome() for FISH (2017,2) [{"totSalesIncome":14000}]
DEBUG 2017-07-14 09:32:49 NAME: getEmployeePurchases() for FISH ["SELECT IF(SUM(`quantity`*`unitPrice`)IS NULL,0, SUM(`quantity`*`unitPrice`)) AS emloyeePurchaseIncome FROM employeepurchases WHERE YEAR(purchaseDt) = 2017 AND MONTH(purchaseDt) = 2 AND lineOfBusinessOid = 1"]
DEBUG 2017-07-14 09:32:49 NAME: getEmployeePurchases() for FISH (2017,2) [{"emloyeePurchaseIncome":0}]
DEBUG 2017-07-14 09:32:49 NAME: getTotSalesIncome() {"lineOfBusinessOid":1,"opsMonthlyCalendarOid":2,"salesIncome":14000,"otherIncome":0,"purchases":11160,"otherPurchases":0,"generalExpenses":13760,"elecExpenses":0}
DEBUG 2017-07-14 09:32:49 NAME: getOtherIncome() ["SELECT IF(SUM(incomeAmt)IS NULL,0, SUM(incomeAmt)) AS incomeAmt FROM OtherDeptIncome WHERE lineOfBusinessOid = 1 AND YEAR(date) = 2017 AND MONTH(date) = 2 "]
DEBUG 2017-07-14 09:32:49 NAME: getPurchases() ["SELECT ROUND(IF(SUM(amount)IS NULL,0, SUM(amount)),2) AS purchases FROM Expenses WHERE lineOfBusinessOid = 1 AND categoryOid = 4 AND YEAR(expenseDate) = 2017 AND MONTH(expenseDate) = 2 "]
DEBUG 2017-07-14 09:32:49 NAME: getGeneralExpenses() ["SELECT IF(SUM(amount) IS NULL, 0, SUM(amount)) AS totGeneralExpense FROM expenses WHERE YEAR(expenseDate) = 2017 and MONTH(expenseDate) = 2 AND lineOfBusinessOid = 1 "]
DEBUG 2017-07-14 09:32:49 NAME: getGeneralExpenses() [{"totGeneralExpense":51776.030029297}]
DEBUG 2017-07-14 09:32:49 NAME: getElecExpenses() ["SELECT lineOfBusinessOid, electricityAccountOid, electricityaccount.accountNbr, allocation, electricityexpense.amount, (allocation\/100)*electricityexpense.amount AS elecExpense, startOpsMonthlyCalendarOid FROM electricityallocation INNER JOIN electricityaccount ON electricityaccount.oid = electricityallocation.electricityAccountOid INNER JOIN electricityexpense ON electricityexpense.electricityAccounOid = electricityallocation.electricityAccountOid WHERE lineOfBusinessOid = 1 AND startOpsMonthlyCalendarOid = 2 "]
DEBUG 2017-07-14 09:32:49 NAME: getElecExpenses() []
DEBUG 2017-07-14 09:32:49 NAME: getFishPandL() {"lineOfBusinessOid":1,"opsMonthlyCalendarOid":2,"salesIncome":14000,"otherIncome":0,"purchases":0,"otherPurchases":0,"generalExpenses":51776.030029297,"elecExpenses":0}
DEBUG 2017-07-14 09:32:50 NAME: getOtherWorkExpensesByRole() ["SELECT empotherworkhrs_vw.eOid ,employeerole.employeeRoleTypeOid AS roleOid, SUM(hours) AS totHrs, salaryAmount, salarytype FROM empotherworkhrs_vw INNER JOIN( employee, employeerole, employeeroletype ) ON ( empotherworkhrs_vw.eOid = employee.oid AND employee.oid = employeerole.employeeOid AND employeerole.employeeRoleTypeOid = employeeroletype.oid ) WHERE ( attendanceDt BETWEEN '2017-02-01' AND '2017-02-28' ) AND lobOid = 1 GROUP BY empotherworkhrs_vw.eOid ,salaryAmount,salarytype, employeerole.employeeRoleTypeOid"]
DEBUG 2017-07-14 09:32:50 NAME: getOtherWorkExpensesByRole() []
DEBUG 2017-07-14 09:32:50 NAME: getOtherWorkExpensesByRole() []
DEBUG 2017-07-14 09:32:50 NAME: getEmployeeRoleTypes() ["SELECT oid, role FROM employeeroletype"]
DEBUG 2017-07-14 09:32:50 NAME: getEmployeeRoleTypes() [{"oid":1,"role":"TEA PICKER"},{"oid":2,"role":"SUPERVISOR"},{"oid":3,"role":"OPS MANAGER"},{"oid":4,"role":"DIRECTOR"},{"oid":5,"role":"HOUSEHELP"},{"oid":6,"role":"GARDENER"},{"oid":7,"role":"SECURITY"},{"oid":8,"role":"FARM HAND"},{"oid":9,"role":"DRIVER"},{"oid":10,"role":"MILK MAN"}]
DEBUG 2017-07-14 09:32:50 NAME: fillEmptyRoleTypes() {"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0}
DEBUG 2017-07-14 09:32:50 NAME: getParttimeExpensesByRole() ["SELECT empparttimehrs_vw.eOid ,employeerole.employeeRoleTypeOid AS roleOid, SUM(hours) AS totHrs, salaryAmount, salarytype FROM empparttimehrs_vw INNER JOIN( employee, employeerole, employeeroletype ) ON ( empparttimehrs_vw.eOid = employee.oid AND employee.oid = employeerole.employeeOid AND employeerole.employeeRoleTypeOid = employeeroletype.oid ) WHERE ( attendanceDt BETWEEN '2017-02-01' AND '2017-02-28' ) AND lobOid = 1 GROUP BY empparttimehrs_vw.eOid ,salaryAmount,salarytype, employeerole.employeeRoleTypeOid"]
DEBUG 2017-07-14 09:32:50 NAME: getParttimeExpensesByRole() [{"eOid":14,"roleOid":8,"totHrs":3,"salaryAmount":280,"salarytype":"D"},{"eOid":25,"roleOid":7,"totHrs":4,"salaryAmount":280,"salarytype":"D"},{"eOid":26,"roleOid":8,"totHrs":1,"salaryAmount":280,"salarytype":"D"},{"eOid":48,"roleOid":2,"totHrs":6,"salaryAmount":14000,"salarytype":"M"}]
DEBUG 2017-07-14 09:32:50 NAME: getParttimeExpensesByRole() {"8":140,"7":140,"2":338.70967741935}
DEBUG 2017-07-14 09:32:50 NAME: getEmployeeRoleTypes() ["SELECT oid, role FROM employeeroletype"]
DEBUG 2017-07-14 09:32:50 NAME: getEmployeeRoleTypes() [{"oid":1,"role":"TEA PICKER"},{"oid":2,"role":"SUPERVISOR"},{"oid":3,"role":"OPS MANAGER"},{"oid":4,"role":"DIRECTOR"},{"oid":5,"role":"HOUSEHELP"},{"oid":6,"role":"GARDENER"},{"oid":7,"role":"SECURITY"},{"oid":8,"role":"FARM HAND"},{"oid":9,"role":"DRIVER"},{"oid":10,"role":"MILK MAN"}]
DEBUG 2017-07-14 09:32:50 NAME: fillEmptyRoleTypes() {"8":140,"7":140,"2":338.70967741935,"1":0,"3":0,"4":0,"5":0,"6":0,"9":0,"10":0}
DEBUG 2017-07-14 09:32:50 NAME: getEmployeeRoleTypes() ["SELECT oid, role FROM employeeroletype"]
DEBUG 2017-07-14 09:32:50 NAME: getEmployeeRoleTypes() [{"oid":1,"role":"TEA PICKER"},{"oid":2,"role":"SUPERVISOR"},{"oid":3,"role":"OPS MANAGER"},{"oid":4,"role":"DIRECTOR"},{"oid":5,"role":"HOUSEHELP"},{"oid":6,"role":"GARDENER"},{"oid":7,"role":"SECURITY"},{"oid":8,"role":"FARM HAND"},{"oid":9,"role":"DRIVER"},{"oid":10,"role":"MILK MAN"}]
DEBUG 2017-07-14 09:32:50 NAME: combineExpensesByRole() {"1":0,"2":338.70967741935,"3":0,"4":0,"5":0,"6":0,"7":140,"8":140,"9":0,"10":0}
DEBUG 2017-07-14 09:32:50 NAME: savePandLexpenseDetails() ["INSERT  INTO FishPandLlabourExpenseDetail (`FishPandLOid`, `employeeRoleOid`, `expenseAmount`)  VALUES ('86', '1', '0')"]
DEBUG 2017-07-14 09:32:50 NAME: savePandLexpenseDetails() ["INSERT  INTO FishPandLlabourExpenseDetail (`FishPandLOid`, `employeeRoleOid`, `expenseAmount`)  VALUES ('86', '2', '338.70967741935')"]
DEBUG 2017-07-14 09:32:50 NAME: savePandLexpenseDetails() ["INSERT  INTO FishPandLlabourExpenseDetail (`FishPandLOid`, `employeeRoleOid`, `expenseAmount`)  VALUES ('86', '3', '0')"]
DEBUG 2017-07-14 09:32:50 NAME: savePandLexpenseDetails() ["INSERT  INTO FishPandLlabourExpenseDetail (`FishPandLOid`, `employeeRoleOid`, `expenseAmount`)  VALUES ('86', '4', '0')"]
DEBUG 2017-07-14 09:32:50 NAME: savePandLexpenseDetails() ["INSERT  INTO FishPandLlabourExpenseDetail (`FishPandLOid`, `employeeRoleOid`, `expenseAmount`)  VALUES ('86', '5', '0')"]
DEBUG 2017-07-14 09:32:50 NAME: savePandLexpenseDetails() ["INSERT  INTO FishPandLlabourExpenseDetail (`FishPandLOid`, `employeeRoleOid`, `expenseAmount`)  VALUES ('86', '6', '0')"]
DEBUG 2017-07-14 09:32:50 NAME: savePandLexpenseDetails() ["INSERT  INTO FishPandLlabourExpenseDetail (`FishPandLOid`, `employeeRoleOid`, `expenseAmount`)  VALUES ('86', '7', '140')"]
DEBUG 2017-07-14 09:32:50 NAME: savePandLexpenseDetails() ["INSERT  INTO FishPandLlabourExpenseDetail (`FishPandLOid`, `employeeRoleOid`, `expenseAmount`)  VALUES ('86', '8', '140')"]
DEBUG 2017-07-14 09:32:50 NAME: savePandLexpenseDetails() ["INSERT  INTO FishPandLlabourExpenseDetail (`FishPandLOid`, `employeeRoleOid`, `expenseAmount`)  VALUES ('86', '9', '0')"]
DEBUG 2017-07-14 09:32:50 NAME: savePandLexpenseDetails() ["INSERT  INTO FishPandLlabourExpenseDetail (`FishPandLOid`, `employeeRoleOid`, `expenseAmount`)  VALUES ('86', '10', '0')"]
DEBUG 2017-07-14 09:32:50 NAME: getPandLOids() ["SELECT oid FROM fishpandl WHERE opsMonthlyCalendarOid  = 3"]
DEBUG 2017-07-14 09:32:50 NAME: getPandLOids() [{"oid":75}]
DEBUG 2017-07-14 09:32:50 NAME: deletePandLexpenseRecords(PandLoidArray) [{"oid":75}]
DEBUG 2017-07-14 09:32:50 NAME: deletePandLexpenseRecords() ["DELETE FROM FishPandLlabourExpenseDetail WHERE  fishPandLOid  = '75' "]
DEBUG 2017-07-14 09:32:50 NAME: deletePandLexistingrecord() ["DELETE FROM FishPandL WHERE  opsMonthlyCalendarOid = '3' "]
DEBUG 2017-07-14 09:32:50 NAME: getSelectedMonth() ["SELECT year from opsmonthlycalendar WHERE oid = 3"]
DEBUG 2017-07-14 09:32:50 NAME: getRegularSalesIncome() for FISH ["SELECT IF(SUM(weight*pricePerKg)IS NULL,0, SUM(weight*pricePerKg))  AS totSalesIncome FROM fishsales WHERE YEAR(salesDt) = 2017 AND MONTH(salesDt) = 3 "]
DEBUG 2017-07-14 09:32:50 NAME: getRegularSalesIncome() for FISH (2017,3) [{"totSalesIncome":42500}]
DEBUG 2017-07-14 09:32:50 NAME: getEmployeePurchases() for FISH ["SELECT IF(SUM(`quantity`*`unitPrice`)IS NULL,0, SUM(`quantity`*`unitPrice`)) AS emloyeePurchaseIncome FROM employeepurchases WHERE YEAR(purchaseDt) = 2017 AND MONTH(purchaseDt) = 3 AND lineOfBusinessOid = 1"]
DEBUG 2017-07-14 09:32:50 NAME: getEmployeePurchases() for FISH (2017,3) [{"emloyeePurchaseIncome":0}]
DEBUG 2017-07-14 09:32:50 NAME: getTotSalesIncome() {"lineOfBusinessOid":1,"opsMonthlyCalendarOid":3,"salesIncome":42500,"otherIncome":0,"purchases":0,"otherPurchases":0,"generalExpenses":51776.030029297,"elecExpenses":0}
DEBUG 2017-07-14 09:32:50 NAME: getOtherIncome() ["SELECT IF(SUM(incomeAmt)IS NULL,0, SUM(incomeAmt)) AS incomeAmt FROM OtherDeptIncome WHERE lineOfBusinessOid = 1 AND YEAR(date) = 2017 AND MONTH(date) = 3 "]
DEBUG 2017-07-14 09:32:50 NAME: getPurchases() ["SELECT ROUND(IF(SUM(amount)IS NULL,0, SUM(amount)),2) AS purchases FROM Expenses WHERE lineOfBusinessOid = 1 AND categoryOid = 4 AND YEAR(expenseDate) = 2017 AND MONTH(expenseDate) = 3 "]
DEBUG 2017-07-14 09:32:50 NAME: getGeneralExpenses() ["SELECT IF(SUM(amount) IS NULL, 0, SUM(amount)) AS totGeneralExpense FROM expenses WHERE YEAR(expenseDate) = 2017 and MONTH(expenseDate) = 3 AND lineOfBusinessOid = 1 "]
DEBUG 2017-07-14 09:32:50 NAME: getGeneralExpenses() [{"totGeneralExpense":13710}]
DEBUG 2017-07-14 09:32:50 NAME: getElecExpenses() ["SELECT lineOfBusinessOid, electricityAccountOid, electricityaccount.accountNbr, allocation, electricityexpense.amount, (allocation\/100)*electricityexpense.amount AS elecExpense, startOpsMonthlyCalendarOid FROM electricityallocation INNER JOIN electricityaccount ON electricityaccount.oid = electricityallocation.electricityAccountOid INNER JOIN electricityexpense ON electricityexpense.electricityAccounOid = electricityallocation.electricityAccountOid WHERE lineOfBusinessOid = 1 AND startOpsMonthlyCalendarOid = 3 "]
DEBUG 2017-07-14 09:32:50 NAME: getElecExpenses() []
DEBUG 2017-07-14 09:32:50 NAME: getFishPandL() {"lineOfBusinessOid":1,"opsMonthlyCalendarOid":3,"salesIncome":42500,"otherIncome":0,"purchases":0,"otherPurchases":0,"generalExpenses":13710,"elecExpenses":0}
DEBUG 2017-07-14 09:32:50 NAME: getOtherWorkExpensesByRole() ["SELECT empotherworkhrs_vw.eOid ,employeerole.employeeRoleTypeOid AS roleOid, SUM(hours) AS totHrs, salaryAmount, salarytype FROM empotherworkhrs_vw INNER JOIN( employee, employeerole, employeeroletype ) ON ( empotherworkhrs_vw.eOid = employee.oid AND employee.oid = employeerole.employeeOid AND employeerole.employeeRoleTypeOid = employeeroletype.oid ) WHERE ( attendanceDt BETWEEN '2017-03-01' AND '2017-03-31' ) AND lobOid = 1 GROUP BY empotherworkhrs_vw.eOid ,salaryAmount,salarytype, employeerole.employeeRoleTypeOid"]
DEBUG 2017-07-14 09:32:50 NAME: getOtherWorkExpensesByRole() []
DEBUG 2017-07-14 09:32:50 NAME: getOtherWorkExpensesByRole() []
DEBUG 2017-07-14 09:32:50 NAME: getEmployeeRoleTypes() ["SELECT oid, role FROM employeeroletype"]
DEBUG 2017-07-14 09:32:50 NAME: getEmployeeRoleTypes() [{"oid":1,"role":"TEA PICKER"},{"oid":2,"role":"SUPERVISOR"},{"oid":3,"role":"OPS MANAGER"},{"oid":4,"role":"DIRECTOR"},{"oid":5,"role":"HOUSEHELP"},{"oid":6,"role":"GARDENER"},{"oid":7,"role":"SECURITY"},{"oid":8,"role":"FARM HAND"},{"oid":9,"role":"DRIVER"},{"oid":10,"role":"MILK MAN"}]
DEBUG 2017-07-14 09:32:50 NAME: fillEmptyRoleTypes() {"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0}
DEBUG 2017-07-14 09:32:50 NAME: getParttimeExpensesByRole() ["SELECT empparttimehrs_vw.eOid ,employeerole.employeeRoleTypeOid AS roleOid, SUM(hours) AS totHrs, salaryAmount, salarytype FROM empparttimehrs_vw INNER JOIN( employee, employeerole, employeeroletype ) ON ( empparttimehrs_vw.eOid = employee.oid AND employee.oid = employeerole.employeeOid AND employeerole.employeeRoleTypeOid = employeeroletype.oid ) WHERE ( attendanceDt BETWEEN '2017-03-01' AND '2017-03-31' ) AND lobOid = 1 GROUP BY empparttimehrs_vw.eOid ,salaryAmount,salarytype, employeerole.employeeRoleTypeOid"]
DEBUG 2017-07-14 09:32:50 NAME: getParttimeExpensesByRole() [{"eOid":23,"roleOid":7,"totHrs":4,"salaryAmount":280,"salarytype":"D"},{"eOid":25,"roleOid":7,"totHrs":7,"salaryAmount":280,"salarytype":"D"},{"eOid":48,"roleOid":2,"totHrs":9,"salaryAmount":14000,"salarytype":"M"}]
DEBUG 2017-07-14 09:32:50 NAME: getParttimeExpensesByRole() {"7":385,"2":508.06451612903}
DEBUG 2017-07-14 09:32:50 NAME: getEmployeeRoleTypes() ["SELECT oid, role FROM employeeroletype"]
DEBUG 2017-07-14 09:32:50 NAME: getEmployeeRoleTypes() [{"oid":1,"role":"TEA PICKER"},{"oid":2,"role":"SUPERVISOR"},{"oid":3,"role":"OPS MANAGER"},{"oid":4,"role":"DIRECTOR"},{"oid":5,"role":"HOUSEHELP"},{"oid":6,"role":"GARDENER"},{"oid":7,"role":"SECURITY"},{"oid":8,"role":"FARM HAND"},{"oid":9,"role":"DRIVER"},{"oid":10,"role":"MILK MAN"}]
DEBUG 2017-07-14 09:32:50 NAME: fillEmptyRoleTypes() {"7":385,"2":508.06451612903,"1":0,"3":0,"4":0,"5":0,"6":0,"8":0,"9":0,"10":0}
DEBUG 2017-07-14 09:32:50 NAME: getEmployeeRoleTypes() ["SELECT oid, role FROM employeeroletype"]
DEBUG 2017-07-14 09:32:50 NAME: getEmployeeRoleTypes() [{"oid":1,"role":"TEA PICKER"},{"oid":2,"role":"SUPERVISOR"},{"oid":3,"role":"OPS MANAGER"},{"oid":4,"role":"DIRECTOR"},{"oid":5,"role":"HOUSEHELP"},{"oid":6,"role":"GARDENER"},{"oid":7,"role":"SECURITY"},{"oid":8,"role":"FARM HAND"},{"oid":9,"role":"DRIVER"},{"oid":10,"role":"MILK MAN"}]
DEBUG 2017-07-14 09:32:50 NAME: combineExpensesByRole() {"1":0,"2":508.06451612903,"3":0,"4":0,"5":0,"6":0,"7":385,"8":0,"9":0,"10":0}
DEBUG 2017-07-14 09:32:50 NAME: savePandLexpenseDetails() ["INSERT  INTO FishPandLlabourExpenseDetail (`FishPandLOid`, `employeeRoleOid`, `expenseAmount`)  VALUES ('87', '1', '0')"]
DEBUG 2017-07-14 09:32:50 NAME: savePandLexpenseDetails() ["INSERT  INTO FishPandLlabourExpenseDetail (`FishPandLOid`, `employeeRoleOid`, `expenseAmount`)  VALUES ('87', '2', '508.06451612903')"]
DEBUG 2017-07-14 09:32:50 NAME: savePandLexpenseDetails() ["INSERT  INTO FishPandLlabourExpenseDetail (`FishPandLOid`, `employeeRoleOid`, `expenseAmount`)  VALUES ('87', '3', '0')"]
DEBUG 2017-07-14 09:32:50 NAME: savePandLexpenseDetails() ["INSERT  INTO FishPandLlabourExpenseDetail (`FishPandLOid`, `employeeRoleOid`, `expenseAmount`)  VALUES ('87', '4', '0')"]
DEBUG 2017-07-14 09:32:50 NAME: savePandLexpenseDetails() ["INSERT  INTO FishPandLlabourExpenseDetail (`FishPandLOid`, `employeeRoleOid`, `expenseAmount`)  VALUES ('87', '5', '0')"]
DEBUG 2017-07-14 09:32:50 NAME: savePandLexpenseDetails() ["INSERT  INTO FishPandLlabourExpenseDetail (`FishPandLOid`, `employeeRoleOid`, `expenseAmount`)  VALUES ('87', '6', '0')"]
DEBUG 2017-07-14 09:32:50 NAME: savePandLexpenseDetails() ["INSERT  INTO FishPandLlabourExpenseDetail (`FishPandLOid`, `employeeRoleOid`, `expenseAmount`)  VALUES ('87', '7', '385')"]
DEBUG 2017-07-14 09:32:50 NAME: savePandLexpenseDetails() ["INSERT  INTO FishPandLlabourExpenseDetail (`FishPandLOid`, `employeeRoleOid`, `expenseAmount`)  VALUES ('87', '8', '0')"]
DEBUG 2017-07-14 09:32:50 NAME: savePandLexpenseDetails() ["INSERT  INTO FishPandLlabourExpenseDetail (`FishPandLOid`, `employeeRoleOid`, `expenseAmount`)  VALUES ('87', '9', '0')"]
DEBUG 2017-07-14 09:32:50 NAME: savePandLexpenseDetails() ["INSERT  INTO FishPandLlabourExpenseDetail (`FishPandLOid`, `employeeRoleOid`, `expenseAmount`)  VALUES ('87', '10', '0')"]
DEBUG 2017-07-14 09:32:50 NAME: getPandLOids() ["SELECT oid FROM fishpandl WHERE opsMonthlyCalendarOid  = 4"]
DEBUG 2017-07-14 09:32:50 NAME: getPandLOids() [{"oid":76}]
DEBUG 2017-07-14 09:32:50 NAME: deletePandLexpenseRecords(PandLoidArray) [{"oid":76}]
DEBUG 2017-07-14 09:32:50 NAME: deletePandLexpenseRecords() ["DELETE FROM FishPandLlabourExpenseDetail WHERE  fishPandLOid  = '76' "]
DEBUG 2017-07-14 09:32:50 NAME: deletePandLexistingrecord() ["DELETE FROM FishPandL WHERE  opsMonthlyCalendarOid = '4' "]
DEBUG 2017-07-14 09:32:50 NAME: getSelectedMonth() ["SELECT year from opsmonthlycalendar WHERE oid = 4"]
DEBUG 2017-07-14 09:32:50 NAME: getRegularSalesIncome() for FISH ["SELECT IF(SUM(weight*pricePerKg)IS NULL,0, SUM(weight*pricePerKg))  AS totSalesIncome FROM fishsales WHERE YEAR(salesDt) = 2017 AND MONTH(salesDt) = 4 "]
DEBUG 2017-07-14 09:32:50 NAME: getRegularSalesIncome() for FISH (2017,4) [{"totSalesIncome":10000}]
DEBUG 2017-07-14 09:32:50 NAME: getEmployeePurchases() for FISH ["SELECT IF(SUM(`quantity`*`unitPrice`)IS NULL,0, SUM(`quantity`*`unitPrice`)) AS emloyeePurchaseIncome FROM employeepurchases WHERE YEAR(purchaseDt) = 2017 AND MONTH(purchaseDt) = 4 AND lineOfBusinessOid = 1"]
DEBUG 2017-07-14 09:32:50 NAME: getEmployeePurchases() for FISH (2017,4) [{"emloyeePurchaseIncome":0}]
DEBUG 2017-07-14 09:32:50 NAME: getTotSalesIncome() {"lineOfBusinessOid":1,"opsMonthlyCalendarOid":4,"salesIncome":10000,"otherIncome":0,"purchases":0,"otherPurchases":0,"generalExpenses":13710,"elecExpenses":0}
DEBUG 2017-07-14 09:32:50 NAME: getOtherIncome() ["SELECT IF(SUM(incomeAmt)IS NULL,0, SUM(incomeAmt)) AS incomeAmt FROM OtherDeptIncome WHERE lineOfBusinessOid = 1 AND YEAR(date) = 2017 AND MONTH(date) = 4 "]
DEBUG 2017-07-14 09:32:50 NAME: getPurchases() ["SELECT ROUND(IF(SUM(amount)IS NULL,0, SUM(amount)),2) AS purchases FROM Expenses WHERE lineOfBusinessOid = 1 AND categoryOid = 4 AND YEAR(expenseDate) = 2017 AND MONTH(expenseDate) = 4 "]
DEBUG 2017-07-14 09:32:50 NAME: getGeneralExpenses() ["SELECT IF(SUM(amount) IS NULL, 0, SUM(amount)) AS totGeneralExpense FROM expenses WHERE YEAR(expenseDate) = 2017 and MONTH(expenseDate) = 4 AND lineOfBusinessOid = 1 "]
DEBUG 2017-07-14 09:32:50 NAME: getGeneralExpenses() [{"totGeneralExpense":53195}]
DEBUG 2017-07-14 09:32:50 NAME: getElecExpenses() ["SELECT lineOfBusinessOid, electricityAccountOid, electricityaccount.accountNbr, allocation, electricityexpense.amount, (allocation\/100)*electricityexpense.amount AS elecExpense, startOpsMonthlyCalendarOid FROM electricityallocation INNER JOIN electricityaccount ON electricityaccount.oid = electricityallocation.electricityAccountOid INNER JOIN electricityexpense ON electricityexpense.electricityAccounOid = electricityallocation.electricityAccountOid WHERE lineOfBusinessOid = 1 AND startOpsMonthlyCalendarOid = 4 "]
DEBUG 2017-07-14 09:32:50 NAME: getElecExpenses() []
DEBUG 2017-07-14 09:32:50 NAME: getFishPandL() {"lineOfBusinessOid":1,"opsMonthlyCalendarOid":4,"salesIncome":10000,"otherIncome":0,"purchases":13695,"otherPurchases":0,"generalExpenses":53195,"elecExpenses":0}
DEBUG 2017-07-14 09:32:50 NAME: getOtherWorkExpensesByRole() ["SELECT empotherworkhrs_vw.eOid ,employeerole.employeeRoleTypeOid AS roleOid, SUM(hours) AS totHrs, salaryAmount, salarytype FROM empotherworkhrs_vw INNER JOIN( employee, employeerole, employeeroletype ) ON ( empotherworkhrs_vw.eOid = employee.oid AND employee.oid = employeerole.employeeOid AND employeerole.employeeRoleTypeOid = employeeroletype.oid ) WHERE ( attendanceDt BETWEEN '2017-04-01' AND '2017-04-30' ) AND lobOid = 1 GROUP BY empotherworkhrs_vw.eOid ,salaryAmount,salarytype, employeerole.employeeRoleTypeOid"]
DEBUG 2017-07-14 09:32:50 NAME: getOtherWorkExpensesByRole() []
DEBUG 2017-07-14 09:32:50 NAME: getOtherWorkExpensesByRole() []
DEBUG 2017-07-14 09:32:50 NAME: getEmployeeRoleTypes() ["SELECT oid, role FROM employeeroletype"]
DEBUG 2017-07-14 09:32:50 NAME: getEmployeeRoleTypes() [{"oid":1,"role":"TEA PICKER"},{"oid":2,"role":"SUPERVISOR"},{"oid":3,"role":"OPS MANAGER"},{"oid":4,"role":"DIRECTOR"},{"oid":5,"role":"HOUSEHELP"},{"oid":6,"role":"GARDENER"},{"oid":7,"role":"SECURITY"},{"oid":8,"role":"FARM HAND"},{"oid":9,"role":"DRIVER"},{"oid":10,"role":"MILK MAN"}]
DEBUG 2017-07-14 09:32:50 NAME: fillEmptyRoleTypes() {"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0}
DEBUG 2017-07-14 09:32:50 NAME: getParttimeExpensesByRole() ["SELECT empparttimehrs_vw.eOid ,employeerole.employeeRoleTypeOid AS roleOid, SUM(hours) AS totHrs, salaryAmount, salarytype FROM empparttimehrs_vw INNER JOIN( employee, employeerole, employeeroletype ) ON ( empparttimehrs_vw.eOid = employee.oid AND employee.oid = employeerole.employeeOid AND employeerole.employeeRoleTypeOid = employeeroletype.oid ) WHERE ( attendanceDt BETWEEN '2017-04-01' AND '2017-04-30' ) AND lobOid = 1 GROUP BY empparttimehrs_vw.eOid ,salaryAmount,salarytype, employeerole.employeeRoleTypeOid"]
DEBUG 2017-07-14 09:32:50 NAME: getParttimeExpensesByRole() [{"eOid":14,"roleOid":8,"totHrs":2,"salaryAmount":280,"salarytype":"D"},{"eOid":18,"roleOid":1,"totHrs":1,"salaryAmount":280,"salarytype":"D"},{"eOid":25,"roleOid":7,"totHrs":29,"salaryAmount":280,"salarytype":"D"},{"eOid":26,"roleOid":8,"totHrs":1,"salaryAmount":280,"salarytype":"D"},{"eOid":48,"roleOid":2,"totHrs":9,"salaryAmount":14000,"salarytype":"M"}]
DEBUG 2017-07-14 09:32:50 NAME: getParttimeExpensesByRole() {"8":105,"1":35,"7":1015,"2":508.06451612903}
DEBUG 2017-07-14 09:32:50 NAME: getEmployeeRoleTypes() ["SELECT oid, role FROM employeeroletype"]
DEBUG 2017-07-14 09:32:50 NAME: getEmployeeRoleTypes() [{"oid":1,"role":"TEA PICKER"},{"oid":2,"role":"SUPERVISOR"},{"oid":3,"role":"OPS MANAGER"},{"oid":4,"role":"DIRECTOR"},{"oid":5,"role":"HOUSEHELP"},{"oid":6,"role":"GARDENER"},{"oid":7,"role":"SECURITY"},{"oid":8,"role":"FARM HAND"},{"oid":9,"role":"DRIVER"},{"oid":10,"role":"MILK MAN"}]
DEBUG 2017-07-14 09:32:50 NAME: fillEmptyRoleTypes() {"8":105,"1":35,"7":1015,"2":508.06451612903,"3":0,"4":0,"5":0,"6":0,"9":0,"10":0}
DEBUG 2017-07-14 09:32:50 NAME: getEmployeeRoleTypes() ["SELECT oid, role FROM employeeroletype"]
DEBUG 2017-07-14 09:32:50 NAME: getEmployeeRoleTypes() [{"oid":1,"role":"TEA PICKER"},{"oid":2,"role":"SUPERVISOR"},{"oid":3,"role":"OPS MANAGER"},{"oid":4,"role":"DIRECTOR"},{"oid":5,"role":"HOUSEHELP"},{"oid":6,"role":"GARDENER"},{"oid":7,"role":"SECURITY"},{"oid":8,"role":"FARM HAND"},{"oid":9,"role":"DRIVER"},{"oid":10,"role":"MILK MAN"}]
DEBUG 2017-07-14 09:32:50 NAME: combineExpensesByRole() {"1":35,"2":508.06451612903,"3":0,"4":0,"5":0,"6":0,"7":1015,"8":105,"9":0,"10":0}
DEBUG 2017-07-14 09:32:50 NAME: savePandLexpenseDetails() ["INSERT  INTO FishPandLlabourExpenseDetail (`FishPandLOid`, `employeeRoleOid`, `expenseAmount`)  VALUES ('88', '1', '35')"]
DEBUG 2017-07-14 09:32:50 NAME: savePandLexpenseDetails() ["INSERT  INTO FishPandLlabourExpenseDetail (`FishPandLOid`, `employeeRoleOid`, `expenseAmount`)  VALUES ('88', '2', '508.06451612903')"]
DEBUG 2017-07-14 09:32:50 NAME: savePandLexpenseDetails() ["INSERT  INTO FishPandLlabourExpenseDetail (`FishPandLOid`, `employeeRoleOid`, `expenseAmount`)  VALUES ('88', '3', '0')"]
DEBUG 2017-07-14 09:32:50 NAME: savePandLexpenseDetails() ["INSERT  INTO FishPandLlabourExpenseDetail (`FishPandLOid`, `employeeRoleOid`, `expenseAmount`)  VALUES ('88', '4', '0')"]
DEBUG 2017-07-14 09:32:50 NAME: savePandLexpenseDetails() ["INSERT  INTO FishPandLlabourExpenseDetail (`FishPandLOid`, `employeeRoleOid`, `expenseAmount`)  VALUES ('88', '5', '0')"]
DEBUG 2017-07-14 09:32:50 NAME: savePandLexpenseDetails() ["INSERT  INTO FishPandLlabourExpenseDetail (`FishPandLOid`, `employeeRoleOid`, `expenseAmount`)  VALUES ('88', '6', '0')"]
DEBUG 2017-07-14 09:32:50 NAME: savePandLexpenseDetails() ["INSERT  INTO FishPandLlabourExpenseDetail (`FishPandLOid`, `employeeRoleOid`, `expenseAmount`)  VALUES ('88', '7', '1015')"]
DEBUG 2017-07-14 09:32:50 NAME: savePandLexpenseDetails() ["INSERT  INTO FishPandLlabourExpenseDetail (`FishPandLOid`, `employeeRoleOid`, `expenseAmount`)  VALUES ('88', '8', '105')"]
DEBUG 2017-07-14 09:32:50 NAME: savePandLexpenseDetails() ["INSERT  INTO FishPandLlabourExpenseDetail (`FishPandLOid`, `employeeRoleOid`, `expenseAmount`)  VALUES ('88', '9', '0')"]
DEBUG 2017-07-14 09:32:50 NAME: savePandLexpenseDetails() ["INSERT  INTO FishPandLlabourExpenseDetail (`FishPandLOid`, `employeeRoleOid`, `expenseAmount`)  VALUES ('88', '10', '0')"]
DEBUG 2017-07-14 09:32:50 NAME: getPandLOids() ["SELECT oid FROM fishpandl WHERE opsMonthlyCalendarOid  = 5"]
DEBUG 2017-07-14 09:32:50 NAME: getPandLOids() [{"oid":77}]
DEBUG 2017-07-14 09:32:50 NAME: deletePandLexpenseRecords(PandLoidArray) [{"oid":77}]
DEBUG 2017-07-14 09:32:50 NAME: deletePandLexpenseRecords() ["DELETE FROM FishPandLlabourExpenseDetail WHERE  fishPandLOid  = '77' "]
DEBUG 2017-07-14 09:32:50 NAME: deletePandLexistingrecord() ["DELETE FROM FishPandL WHERE  opsMonthlyCalendarOid = '5' "]
DEBUG 2017-07-14 09:32:50 NAME: getSelectedMonth() ["SELECT year from opsmonthlycalendar WHERE oid = 5"]
DEBUG 2017-07-14 09:32:50 NAME: getRegularSalesIncome() for FISH ["SELECT IF(SUM(weight*pricePerKg)IS NULL,0, SUM(weight*pricePerKg))  AS totSalesIncome FROM fishsales WHERE YEAR(salesDt) = 2017 AND MONTH(salesDt) = 5 "]
DEBUG 2017-07-14 09:32:50 NAME: getRegularSalesIncome() for FISH (2017,5) [{"totSalesIncome":0}]
DEBUG 2017-07-14 09:32:50 NAME: getEmployeePurchases() for FISH ["SELECT IF(SUM(`quantity`*`unitPrice`)IS NULL,0, SUM(`quantity`*`unitPrice`)) AS emloyeePurchaseIncome FROM employeepurchases WHERE YEAR(purchaseDt) = 2017 AND MONTH(purchaseDt) = 5 AND lineOfBusinessOid = 1"]
DEBUG 2017-07-14 09:32:50 NAME: getEmployeePurchases() for FISH (2017,5) [{"emloyeePurchaseIncome":700}]
DEBUG 2017-07-14 09:32:50 NAME: getTotSalesIncome() {"lineOfBusinessOid":1,"opsMonthlyCalendarOid":5,"salesIncome":700,"otherIncome":0,"purchases":13695,"otherPurchases":0,"generalExpenses":53195,"elecExpenses":0}
DEBUG 2017-07-14 09:32:50 NAME: getOtherIncome() ["SELECT IF(SUM(incomeAmt)IS NULL,0, SUM(incomeAmt)) AS incomeAmt FROM OtherDeptIncome WHERE lineOfBusinessOid = 1 AND YEAR(date) = 2017 AND MONTH(date) = 5 "]
DEBUG 2017-07-14 09:32:50 NAME: getPurchases() ["SELECT ROUND(IF(SUM(amount)IS NULL,0, SUM(amount)),2) AS purchases FROM Expenses WHERE lineOfBusinessOid = 1 AND categoryOid = 4 AND YEAR(expenseDate) = 2017 AND MONTH(expenseDate) = 5 "]
DEBUG 2017-07-14 09:32:50 NAME: getGeneralExpenses() ["SELECT IF(SUM(amount) IS NULL, 0, SUM(amount)) AS totGeneralExpense FROM expenses WHERE YEAR(expenseDate) = 2017 and MONTH(expenseDate) = 5 AND lineOfBusinessOid = 1 "]
DEBUG 2017-07-14 09:32:50 NAME: getGeneralExpenses() [{"totGeneralExpense":46195}]
DEBUG 2017-07-14 09:32:50 NAME: getElecExpenses() ["SELECT lineOfBusinessOid, electricityAccountOid, electricityaccount.accountNbr, allocation, electricityexpense.amount, (allocation\/100)*electricityexpense.amount AS elecExpense, startOpsMonthlyCalendarOid FROM electricityallocation INNER JOIN electricityaccount ON electricityaccount.oid = electricityallocation.electricityAccountOid INNER JOIN electricityexpense ON electricityexpense.electricityAccounOid = electricityallocation.electricityAccountOid WHERE lineOfBusinessOid = 1 AND startOpsMonthlyCalendarOid = 5 "]
DEBUG 2017-07-14 09:32:50 NAME: getElecExpenses() []
DEBUG 2017-07-14 09:32:50 NAME: getFishPandL() {"lineOfBusinessOid":1,"opsMonthlyCalendarOid":5,"salesIncome":700,"otherIncome":0,"purchases":38700,"otherPurchases":0,"generalExpenses":46195,"elecExpenses":0}
DEBUG 2017-07-14 09:32:50 NAME: getOtherWorkExpensesByRole() ["SELECT empotherworkhrs_vw.eOid ,employeerole.employeeRoleTypeOid AS roleOid, SUM(hours) AS totHrs, salaryAmount, salarytype FROM empotherworkhrs_vw INNER JOIN( employee, employeerole, employeeroletype ) ON ( empotherworkhrs_vw.eOid = employee.oid AND employee.oid = employeerole.employeeOid AND employeerole.employeeRoleTypeOid = employeeroletype.oid ) WHERE ( attendanceDt BETWEEN '2017-05-01' AND '2017-05-31' ) AND lobOid = 1 GROUP BY empotherworkhrs_vw.eOid ,salaryAmount,salarytype, employeerole.employeeRoleTypeOid"]
DEBUG 2017-07-14 09:32:50 NAME: getOtherWorkExpensesByRole() []
DEBUG 2017-07-14 09:32:50 NAME: getOtherWorkExpensesByRole() []
DEBUG 2017-07-14 09:32:50 NAME: getEmployeeRoleTypes() ["SELECT oid, role FROM employeeroletype"]
DEBUG 2017-07-14 09:32:50 NAME: getEmployeeRoleTypes() [{"oid":1,"role":"TEA PICKER"},{"oid":2,"role":"SUPERVISOR"},{"oid":3,"role":"OPS MANAGER"},{"oid":4,"role":"DIRECTOR"},{"oid":5,"role":"HOUSEHELP"},{"oid":6,"role":"GARDENER"},{"oid":7,"role":"SECURITY"},{"oid":8,"role":"FARM HAND"},{"oid":9,"role":"DRIVER"},{"oid":10,"role":"MILK MAN"}]
DEBUG 2017-07-14 09:32:50 NAME: fillEmptyRoleTypes() {"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0}
DEBUG 2017-07-14 09:32:50 NAME: getParttimeExpensesByRole() ["SELECT empparttimehrs_vw.eOid ,employeerole.employeeRoleTypeOid AS roleOid, SUM(hours) AS totHrs, salaryAmount, salarytype FROM empparttimehrs_vw INNER JOIN( employee, employeerole, employeeroletype ) ON ( empparttimehrs_vw.eOid = employee.oid AND employee.oid = employeerole.employeeOid AND employeerole.employeeRoleTypeOid = employeeroletype.oid ) WHERE ( attendanceDt BETWEEN '2017-05-01' AND '2017-05-31' ) AND lobOid = 1 GROUP BY empparttimehrs_vw.eOid ,salaryAmount,salarytype, employeerole.employeeRoleTypeOid"]
DEBUG 2017-07-14 09:32:50 NAME: getParttimeExpensesByRole() [{"eOid":14,"roleOid":8,"totHrs":8,"salaryAmount":280,"salarytype":"D"},{"eOid":25,"roleOid":7,"totHrs":15,"salaryAmount":280,"salarytype":"D"},{"eOid":26,"roleOid":8,"totHrs":3,"salaryAmount":280,"salarytype":"D"},{"eOid":48,"roleOid":2,"totHrs":6,"salaryAmount":14000,"salarytype":"M"}]
DEBUG 2017-07-14 09:32:50 NAME: getParttimeExpensesByRole() {"8":385,"7":525,"2":338.70967741935}
DEBUG 2017-07-14 09:32:50 NAME: getEmployeeRoleTypes() ["SELECT oid, role FROM employeeroletype"]
DEBUG 2017-07-14 09:32:50 NAME: getEmployeeRoleTypes() [{"oid":1,"role":"TEA PICKER"},{"oid":2,"role":"SUPERVISOR"},{"oid":3,"role":"OPS MANAGER"},{"oid":4,"role":"DIRECTOR"},{"oid":5,"role":"HOUSEHELP"},{"oid":6,"role":"GARDENER"},{"oid":7,"role":"SECURITY"},{"oid":8,"role":"FARM HAND"},{"oid":9,"role":"DRIVER"},{"oid":10,"role":"MILK MAN"}]
DEBUG 2017-07-14 09:32:50 NAME: fillEmptyRoleTypes() {"8":385,"7":525,"2":338.70967741935,"1":0,"3":0,"4":0,"5":0,"6":0,"9":0,"10":0}
DEBUG 2017-07-14 09:32:50 NAME: getEmployeeRoleTypes() ["SELECT oid, role FROM employeeroletype"]
DEBUG 2017-07-14 09:32:50 NAME: getEmployeeRoleTypes() [{"oid":1,"role":"TEA PICKER"},{"oid":2,"role":"SUPERVISOR"},{"oid":3,"role":"OPS MANAGER"},{"oid":4,"role":"DIRECTOR"},{"oid":5,"role":"HOUSEHELP"},{"oid":6,"role":"GARDENER"},{"oid":7,"role":"SECURITY"},{"oid":8,"role":"FARM HAND"},{"oid":9,"role":"DRIVER"},{"oid":10,"role":"MILK MAN"}]
DEBUG 2017-07-14 09:32:50 NAME: combineExpensesByRole() {"1":0,"2":338.70967741935,"3":0,"4":0,"5":0,"6":0,"7":525,"8":385,"9":0,"10":0}
DEBUG 2017-07-14 09:32:50 NAME: savePandLexpenseDetails() ["INSERT  INTO FishPandLlabourExpenseDetail (`FishPandLOid`, `employeeRoleOid`, `expenseAmount`)  VALUES ('89', '1', '0')"]
DEBUG 2017-07-14 09:32:50 NAME: savePandLexpenseDetails() ["INSERT  INTO FishPandLlabourExpenseDetail (`FishPandLOid`, `employeeRoleOid`, `expenseAmount`)  VALUES ('89', '2', '338.70967741935')"]
DEBUG 2017-07-14 09:32:50 NAME: savePandLexpenseDetails() ["INSERT  INTO FishPandLlabourExpenseDetail (`FishPandLOid`, `employeeRoleOid`, `expenseAmount`)  VALUES ('89', '3', '0')"]
DEBUG 2017-07-14 09:32:50 NAME: savePandLexpenseDetails() ["INSERT  INTO FishPandLlabourExpenseDetail (`FishPandLOid`, `employeeRoleOid`, `expenseAmount`)  VALUES ('89', '4', '0')"]
DEBUG 2017-07-14 09:32:50 NAME: savePandLexpenseDetails() ["INSERT  INTO FishPandLlabourExpenseDetail (`FishPandLOid`, `employeeRoleOid`, `expenseAmount`)  VALUES ('89', '5', '0')"]
DEBUG 2017-07-14 09:32:50 NAME: savePandLexpenseDetails() ["INSERT  INTO FishPandLlabourExpenseDetail (`FishPandLOid`, `employeeRoleOid`, `expenseAmount`)  VALUES ('89', '6', '0')"]
DEBUG 2017-07-14 09:32:50 NAME: savePandLexpenseDetails() ["INSERT  INTO FishPandLlabourExpenseDetail (`FishPandLOid`, `employeeRoleOid`, `expenseAmount`)  VALUES ('89', '7', '525')"]
DEBUG 2017-07-14 09:32:50 NAME: savePandLexpenseDetails() ["INSERT  INTO FishPandLlabourExpenseDetail (`FishPandLOid`, `employeeRoleOid`, `expenseAmount`)  VALUES ('89', '8', '385')"]
DEBUG 2017-07-14 09:32:50 NAME: savePandLexpenseDetails() ["INSERT  INTO FishPandLlabourExpenseDetail (`FishPandLOid`, `employeeRoleOid`, `expenseAmount`)  VALUES ('89', '9', '0')"]
DEBUG 2017-07-14 09:32:50 NAME: savePandLexpenseDetails() ["INSERT  INTO FishPandLlabourExpenseDetail (`FishPandLOid`, `employeeRoleOid`, `expenseAmount`)  VALUES ('89', '10', '0')"]
DEBUG 2017-07-14 09:32:50 NAME: getPandLOids() ["SELECT oid FROM fishpandl WHERE opsMonthlyCalendarOid  = 6"]
DEBUG 2017-07-14 09:32:50 NAME: getPandLOids() [{"oid":78}]
DEBUG 2017-07-14 09:32:50 NAME: deletePandLexpenseRecords(PandLoidArray) [{"oid":78}]
DEBUG 2017-07-14 09:32:50 NAME: deletePandLexpenseRecords() ["DELETE FROM FishPandLlabourExpenseDetail WHERE  fishPandLOid  = '78' "]
DEBUG 2017-07-14 09:32:50 NAME: deletePandLexistingrecord() ["DELETE FROM FishPandL WHERE  opsMonthlyCalendarOid = '6' "]
DEBUG 2017-07-14 09:32:50 NAME: getSelectedMonth() ["SELECT year from opsmonthlycalendar WHERE oid = 6"]
DEBUG 2017-07-14 09:32:50 NAME: getRegularSalesIncome() for FISH ["SELECT IF(SUM(weight*pricePerKg)IS NULL,0, SUM(weight*pricePerKg))  AS totSalesIncome FROM fishsales WHERE YEAR(salesDt) = 2017 AND MONTH(salesDt) = 6 "]
DEBUG 2017-07-14 09:32:50 NAME: getRegularSalesIncome() for FISH (2017,6) [{"totSalesIncome":500}]
DEBUG 2017-07-14 09:32:50 NAME: getEmployeePurchases() for FISH ["SELECT IF(SUM(`quantity`*`unitPrice`)IS NULL,0, SUM(`quantity`*`unitPrice`)) AS emloyeePurchaseIncome FROM employeepurchases WHERE YEAR(purchaseDt) = 2017 AND MONTH(purchaseDt) = 6 AND lineOfBusinessOid = 1"]
DEBUG 2017-07-14 09:32:50 NAME: getEmployeePurchases() for FISH (2017,6) [{"emloyeePurchaseIncome":380}]
DEBUG 2017-07-14 09:32:50 NAME: getTotSalesIncome() {"lineOfBusinessOid":1,"opsMonthlyCalendarOid":6,"salesIncome":880,"otherIncome":0,"purchases":38700,"otherPurchases":0,"generalExpenses":46195,"elecExpenses":0}
DEBUG 2017-07-14 09:32:50 NAME: getOtherIncome() ["SELECT IF(SUM(incomeAmt)IS NULL,0, SUM(incomeAmt)) AS incomeAmt FROM OtherDeptIncome WHERE lineOfBusinessOid = 1 AND YEAR(date) = 2017 AND MONTH(date) = 6 "]
DEBUG 2017-07-14 09:32:50 NAME: getPurchases() ["SELECT ROUND(IF(SUM(amount)IS NULL,0, SUM(amount)),2) AS purchases FROM Expenses WHERE lineOfBusinessOid = 1 AND categoryOid = 4 AND YEAR(expenseDate) = 2017 AND MONTH(expenseDate) = 6 "]
DEBUG 2017-07-14 09:32:50 NAME: getGeneralExpenses() ["SELECT IF(SUM(amount) IS NULL, 0, SUM(amount)) AS totGeneralExpense FROM expenses WHERE YEAR(expenseDate) = 2017 and MONTH(expenseDate) = 6 AND lineOfBusinessOid = 1 "]
DEBUG 2017-07-14 09:32:50 NAME: getGeneralExpenses() [{"totGeneralExpense":79300}]
DEBUG 2017-07-14 09:32:50 NAME: getElecExpenses() ["SELECT lineOfBusinessOid, electricityAccountOid, electricityaccount.accountNbr, allocation, electricityexpense.amount, (allocation\/100)*electricityexpense.amount AS elecExpense, startOpsMonthlyCalendarOid FROM electricityallocation INNER JOIN electricityaccount ON electricityaccount.oid = electricityallocation.electricityAccountOid INNER JOIN electricityexpense ON electricityexpense.electricityAccounOid = electricityallocation.electricityAccountOid WHERE lineOfBusinessOid = 1 AND startOpsMonthlyCalendarOid = 6 "]
DEBUG 2017-07-14 09:32:50 NAME: getElecExpenses() []
DEBUG 2017-07-14 09:32:50 NAME: getFishPandL() {"lineOfBusinessOid":1,"opsMonthlyCalendarOid":6,"salesIncome":880,"otherIncome":0,"purchases":65750,"otherPurchases":0,"generalExpenses":79300,"elecExpenses":0}
DEBUG 2017-07-14 09:32:50 NAME: getOtherWorkExpensesByRole() ["SELECT empotherworkhrs_vw.eOid ,employeerole.employeeRoleTypeOid AS roleOid, SUM(hours) AS totHrs, salaryAmount, salarytype FROM empotherworkhrs_vw INNER JOIN( employee, employeerole, employeeroletype ) ON ( empotherworkhrs_vw.eOid = employee.oid AND employee.oid = employeerole.employeeOid AND employeerole.employeeRoleTypeOid = employeeroletype.oid ) WHERE ( attendanceDt BETWEEN '2017-06-01' AND '2017-06-30' ) AND lobOid = 1 GROUP BY empotherworkhrs_vw.eOid ,salaryAmount,salarytype, employeerole.employeeRoleTypeOid"]
DEBUG 2017-07-14 09:32:50 NAME: getOtherWorkExpensesByRole() []
DEBUG 2017-07-14 09:32:50 NAME: getOtherWorkExpensesByRole() []
DEBUG 2017-07-14 09:32:50 NAME: getEmployeeRoleTypes() ["SELECT oid, role FROM employeeroletype"]
DEBUG 2017-07-14 09:32:50 NAME: getEmployeeRoleTypes() [{"oid":1,"role":"TEA PICKER"},{"oid":2,"role":"SUPERVISOR"},{"oid":3,"role":"OPS MANAGER"},{"oid":4,"role":"DIRECTOR"},{"oid":5,"role":"HOUSEHELP"},{"oid":6,"role":"GARDENER"},{"oid":7,"role":"SECURITY"},{"oid":8,"role":"FARM HAND"},{"oid":9,"role":"DRIVER"},{"oid":10,"role":"MILK MAN"}]
DEBUG 2017-07-14 09:32:50 NAME: fillEmptyRoleTypes() {"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0}
DEBUG 2017-07-14 09:32:50 NAME: getParttimeExpensesByRole() ["SELECT empparttimehrs_vw.eOid ,employeerole.employeeRoleTypeOid AS roleOid, SUM(hours) AS totHrs, salaryAmount, salarytype FROM empparttimehrs_vw INNER JOIN( employee, employeerole, employeeroletype ) ON ( empparttimehrs_vw.eOid = employee.oid AND employee.oid = employeerole.employeeOid AND employeerole.employeeRoleTypeOid = employeeroletype.oid ) WHERE ( attendanceDt BETWEEN '2017-06-01' AND '2017-06-30' ) AND lobOid = 1 GROUP BY empparttimehrs_vw.eOid ,salaryAmount,salarytype, employeerole.employeeRoleTypeOid"]
DEBUG 2017-07-14 09:32:50 NAME: getParttimeExpensesByRole() [{"eOid":14,"roleOid":8,"totHrs":1,"salaryAmount":280,"salarytype":"D"},{"eOid":25,"roleOid":7,"totHrs":3,"salaryAmount":280,"salarytype":"D"},{"eOid":36,"roleOid":8,"totHrs":1,"salaryAmount":280,"salarytype":"D"},{"eOid":48,"roleOid":2,"totHrs":7,"salaryAmount":14000,"salarytype":"M"},{"eOid":75,"roleOid":8,"totHrs":7,"salaryAmount":280,"salarytype":"D"},{"eOid":89,"roleOid":8,"totHrs":1,"salaryAmount":280,"salarytype":"D"}]
DEBUG 2017-07-14 09:32:50 NAME: getParttimeExpensesByRole() {"8":350,"7":105,"2":395.16129032258}
DEBUG 2017-07-14 09:32:50 NAME: getEmployeeRoleTypes() ["SELECT oid, role FROM employeeroletype"]
DEBUG 2017-07-14 09:32:50 NAME: getEmployeeRoleTypes() [{"oid":1,"role":"TEA PICKER"},{"oid":2,"role":"SUPERVISOR"},{"oid":3,"role":"OPS MANAGER"},{"oid":4,"role":"DIRECTOR"},{"oid":5,"role":"HOUSEHELP"},{"oid":6,"role":"GARDENER"},{"oid":7,"role":"SECURITY"},{"oid":8,"role":"FARM HAND"},{"oid":9,"role":"DRIVER"},{"oid":10,"role":"MILK MAN"}]
DEBUG 2017-07-14 09:32:50 NAME: fillEmptyRoleTypes() {"8":350,"7":105,"2":395.16129032258,"1":0,"3":0,"4":0,"5":0,"6":0,"9":0,"10":0}
DEBUG 2017-07-14 09:32:50 NAME: getEmployeeRoleTypes() ["SELECT oid, role FROM employeeroletype"]
DEBUG 2017-07-14 09:32:50 NAME: getEmployeeRoleTypes() [{"oid":1,"role":"TEA PICKER"},{"oid":2,"role":"SUPERVISOR"},{"oid":3,"role":"OPS MANAGER"},{"oid":4,"role":"DIRECTOR"},{"oid":5,"role":"HOUSEHELP"},{"oid":6,"role":"GARDENER"},{"oid":7,"role":"SECURITY"},{"oid":8,"role":"FARM HAND"},{"oid":9,"role":"DRIVER"},{"oid":10,"role":"MILK MAN"}]
DEBUG 2017-07-14 09:32:50 NAME: combineExpensesByRole() {"1":0,"2":395.16129032258,"3":0,"4":0,"5":0,"6":0,"7":105,"8":350,"9":0,"10":0}
DEBUG 2017-07-14 09:32:50 NAME: savePandLexpenseDetails() ["INSERT  INTO FishPandLlabourExpenseDetail (`FishPandLOid`, `employeeRoleOid`, `expenseAmount`)  VALUES ('90', '1', '0')"]
DEBUG 2017-07-14 09:32:50 NAME: savePandLexpenseDetails() ["INSERT  INTO FishPandLlabourExpenseDetail (`FishPandLOid`, `employeeRoleOid`, `expenseAmount`)  VALUES ('90', '2', '395.16129032258')"]
DEBUG 2017-07-14 09:32:50 NAME: savePandLexpenseDetails() ["INSERT  INTO FishPandLlabourExpenseDetail (`FishPandLOid`, `employeeRoleOid`, `expenseAmount`)  VALUES ('90', '3', '0')"]
DEBUG 2017-07-14 09:32:50 NAME: savePandLexpenseDetails() ["INSERT  INTO FishPandLlabourExpenseDetail (`FishPandLOid`, `employeeRoleOid`, `expenseAmount`)  VALUES ('90', '4', '0')"]
DEBUG 2017-07-14 09:32:50 NAME: savePandLexpenseDetails() ["INSERT  INTO FishPandLlabourExpenseDetail (`FishPandLOid`, `employeeRoleOid`, `expenseAmount`)  VALUES ('90', '5', '0')"]
DEBUG 2017-07-14 09:32:50 NAME: savePandLexpenseDetails() ["INSERT  INTO FishPandLlabourExpenseDetail (`FishPandLOid`, `employeeRoleOid`, `expenseAmount`)  VALUES ('90', '6', '0')"]
DEBUG 2017-07-14 09:32:50 NAME: savePandLexpenseDetails() ["INSERT  INTO FishPandLlabourExpenseDetail (`FishPandLOid`, `employeeRoleOid`, `expenseAmount`)  VALUES ('90', '7', '105')"]
DEBUG 2017-07-14 09:32:50 NAME: savePandLexpenseDetails() ["INSERT  INTO FishPandLlabourExpenseDetail (`FishPandLOid`, `employeeRoleOid`, `expenseAmount`)  VALUES ('90', '8', '350')"]
DEBUG 2017-07-14 09:32:50 NAME: savePandLexpenseDetails() ["INSERT  INTO FishPandLlabourExpenseDetail (`FishPandLOid`, `employeeRoleOid`, `expenseAmount`)  VALUES ('90', '9', '0')"]
DEBUG 2017-07-14 09:32:50 NAME: savePandLexpenseDetails() ["INSERT  INTO FishPandLlabourExpenseDetail (`FishPandLOid`, `employeeRoleOid`, `expenseAmount`)  VALUES ('90', '10', '0')"]
DEBUG 2017-07-14 09:32:50 NAME: getPandLOids() ["SELECT oid FROM fishpandl WHERE opsMonthlyCalendarOid  = 7"]
DEBUG 2017-07-14 09:32:50 NAME: getPandLOids() [{"oid":79}]
DEBUG 2017-07-14 09:32:50 NAME: deletePandLexpenseRecords(PandLoidArray) [{"oid":79}]
DEBUG 2017-07-14 09:32:50 NAME: deletePandLexpenseRecords() ["DELETE FROM FishPandLlabourExpenseDetail WHERE  fishPandLOid  = '79' "]
DEBUG 2017-07-14 09:32:50 NAME: deletePandLexistingrecord() ["DELETE FROM FishPandL WHERE  opsMonthlyCalendarOid = '7' "]
DEBUG 2017-07-14 09:32:50 NAME: getSelectedMonth() ["SELECT year from opsmonthlycalendar WHERE oid = 7"]
DEBUG 2017-07-14 09:32:50 NAME: getRegularSalesIncome() for FISH ["SELECT IF(SUM(weight*pricePerKg)IS NULL,0, SUM(weight*pricePerKg))  AS totSalesIncome FROM fishsales WHERE YEAR(salesDt) = 2017 AND MONTH(salesDt) = 7 "]
DEBUG 2017-07-14 09:32:50 NAME: getRegularSalesIncome() for FISH (2017,7) [{"totSalesIncome":0}]
DEBUG 2017-07-14 09:32:50 NAME: getEmployeePurchases() for FISH ["SELECT IF(SUM(`quantity`*`unitPrice`)IS NULL,0, SUM(`quantity`*`unitPrice`)) AS emloyeePurchaseIncome FROM employeepurchases WHERE YEAR(purchaseDt) = 2017 AND MONTH(purchaseDt) = 7 AND lineOfBusinessOid = 1"]
DEBUG 2017-07-14 09:32:50 NAME: getEmployeePurchases() for FISH (2017,7) [{"emloyeePurchaseIncome":0}]
DEBUG 2017-07-14 09:32:50 NAME: getTotSalesIncome() {"lineOfBusinessOid":1,"opsMonthlyCalendarOid":7,"salesIncome":0,"otherIncome":0,"purchases":65750,"otherPurchases":0,"generalExpenses":79300,"elecExpenses":0}
DEBUG 2017-07-14 09:32:50 NAME: getOtherIncome() ["SELECT IF(SUM(incomeAmt)IS NULL,0, SUM(incomeAmt)) AS incomeAmt FROM OtherDeptIncome WHERE lineOfBusinessOid = 1 AND YEAR(date) = 2017 AND MONTH(date) = 7 "]
DEBUG 2017-07-14 09:32:50 NAME: getPurchases() ["SELECT ROUND(IF(SUM(amount)IS NULL,0, SUM(amount)),2) AS purchases FROM Expenses WHERE lineOfBusinessOid = 1 AND categoryOid = 4 AND YEAR(expenseDate) = 2017 AND MONTH(expenseDate) = 7 "]
DEBUG 2017-07-14 09:32:50 NAME: getGeneralExpenses() ["SELECT IF(SUM(amount) IS NULL, 0, SUM(amount)) AS totGeneralExpense FROM expenses WHERE YEAR(expenseDate) = 2017 and MONTH(expenseDate) = 7 AND lineOfBusinessOid = 1 "]
DEBUG 2017-07-14 09:32:50 NAME: getGeneralExpenses() [{"totGeneralExpense":370}]
DEBUG 2017-07-14 09:32:50 NAME: getElecExpenses() ["SELECT lineOfBusinessOid, electricityAccountOid, electricityaccount.accountNbr, allocation, electricityexpense.amount, (allocation\/100)*electricityexpense.amount AS elecExpense, startOpsMonthlyCalendarOid FROM electricityallocation INNER JOIN electricityaccount ON electricityaccount.oid = electricityallocation.electricityAccountOid INNER JOIN electricityexpense ON electricityexpense.electricityAccounOid = electricityallocation.electricityAccountOid WHERE lineOfBusinessOid = 1 AND startOpsMonthlyCalendarOid = 7 "]
DEBUG 2017-07-14 09:32:50 NAME: getElecExpenses() []
DEBUG 2017-07-14 09:32:50 NAME: getFishPandL() {"lineOfBusinessOid":1,"opsMonthlyCalendarOid":7,"salesIncome":0,"otherIncome":0,"purchases":370,"otherPurchases":0,"generalExpenses":370,"elecExpenses":0}
DEBUG 2017-07-14 09:32:50 NAME: getOtherWorkExpensesByRole() ["SELECT empotherworkhrs_vw.eOid ,employeerole.employeeRoleTypeOid AS roleOid, SUM(hours) AS totHrs, salaryAmount, salarytype FROM empotherworkhrs_vw INNER JOIN( employee, employeerole, employeeroletype ) ON ( empotherworkhrs_vw.eOid = employee.oid AND employee.oid = employeerole.employeeOid AND employeerole.employeeRoleTypeOid = employeeroletype.oid ) WHERE ( attendanceDt BETWEEN '2017-07-01' AND '2017-07-31' ) AND lobOid = 1 GROUP BY empotherworkhrs_vw.eOid ,salaryAmount,salarytype, employeerole.employeeRoleTypeOid"]
DEBUG 2017-07-14 09:32:50 NAME: getOtherWorkExpensesByRole() []
DEBUG 2017-07-14 09:32:50 NAME: getOtherWorkExpensesByRole() []
DEBUG 2017-07-14 09:32:50 NAME: getEmployeeRoleTypes() ["SELECT oid, role FROM employeeroletype"]
DEBUG 2017-07-14 09:32:50 NAME: getEmployeeRoleTypes() [{"oid":1,"role":"TEA PICKER"},{"oid":2,"role":"SUPERVISOR"},{"oid":3,"role":"OPS MANAGER"},{"oid":4,"role":"DIRECTOR"},{"oid":5,"role":"HOUSEHELP"},{"oid":6,"role":"GARDENER"},{"oid":7,"role":"SECURITY"},{"oid":8,"role":"FARM HAND"},{"oid":9,"role":"DRIVER"},{"oid":10,"role":"MILK MAN"}]
DEBUG 2017-07-14 09:32:50 NAME: fillEmptyRoleTypes() {"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0}
DEBUG 2017-07-14 09:32:50 NAME: getParttimeExpensesByRole() ["SELECT empparttimehrs_vw.eOid ,employeerole.employeeRoleTypeOid AS roleOid, SUM(hours) AS totHrs, salaryAmount, salarytype FROM empparttimehrs_vw INNER JOIN( employee, employeerole, employeeroletype ) ON ( empparttimehrs_vw.eOid = employee.oid AND employee.oid = employeerole.employeeOid AND employeerole.employeeRoleTypeOid = employeeroletype.oid ) WHERE ( attendanceDt BETWEEN '2017-07-01' AND '2017-07-31' ) AND lobOid = 1 GROUP BY empparttimehrs_vw.eOid ,salaryAmount,salarytype, employeerole.employeeRoleTypeOid"]
DEBUG 2017-07-14 09:32:50 NAME: getParttimeExpensesByRole() [{"eOid":25,"roleOid":7,"totHrs":1,"salaryAmount":280,"salarytype":"D"},{"eOid":75,"roleOid":8,"totHrs":1,"salaryAmount":280,"salarytype":"D"}]
DEBUG 2017-07-14 09:32:50 NAME: getParttimeExpensesByRole() {"7":35,"8":35}
DEBUG 2017-07-14 09:32:50 NAME: getEmployeeRoleTypes() ["SELECT oid, role FROM employeeroletype"]
DEBUG 2017-07-14 09:32:50 NAME: getEmployeeRoleTypes() [{"oid":1,"role":"TEA PICKER"},{"oid":2,"role":"SUPERVISOR"},{"oid":3,"role":"OPS MANAGER"},{"oid":4,"role":"DIRECTOR"},{"oid":5,"role":"HOUSEHELP"},{"oid":6,"role":"GARDENER"},{"oid":7,"role":"SECURITY"},{"oid":8,"role":"FARM HAND"},{"oid":9,"role":"DRIVER"},{"oid":10,"role":"MILK MAN"}]
DEBUG 2017-07-14 09:32:50 NAME: fillEmptyRoleTypes() {"7":35,"8":35,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"9":0,"10":0}
DEBUG 2017-07-14 09:32:50 NAME: getEmployeeRoleTypes() ["SELECT oid, role FROM employeeroletype"]
DEBUG 2017-07-14 09:32:50 NAME: getEmployeeRoleTypes() [{"oid":1,"role":"TEA PICKER"},{"oid":2,"role":"SUPERVISOR"},{"oid":3,"role":"OPS MANAGER"},{"oid":4,"role":"DIRECTOR"},{"oid":5,"role":"HOUSEHELP"},{"oid":6,"role":"GARDENER"},{"oid":7,"role":"SECURITY"},{"oid":8,"role":"FARM HAND"},{"oid":9,"role":"DRIVER"},{"oid":10,"role":"MILK MAN"}]
DEBUG 2017-07-14 09:32:50 NAME: combineExpensesByRole() {"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":35,"8":35,"9":0,"10":0}
DEBUG 2017-07-14 09:32:50 NAME: savePandLexpenseDetails() ["INSERT  INTO FishPandLlabourExpenseDetail (`FishPandLOid`, `employeeRoleOid`, `expenseAmount`)  VALUES ('91', '1', '0')"]
DEBUG 2017-07-14 09:32:50 NAME: savePandLexpenseDetails() ["INSERT  INTO FishPandLlabourExpenseDetail (`FishPandLOid`, `employeeRoleOid`, `expenseAmount`)  VALUES ('91', '2', '0')"]
DEBUG 2017-07-14 09:32:50 NAME: savePandLexpenseDetails() ["INSERT  INTO FishPandLlabourExpenseDetail (`FishPandLOid`, `employeeRoleOid`, `expenseAmount`)  VALUES ('91', '3', '0')"]
DEBUG 2017-07-14 09:32:50 NAME: savePandLexpenseDetails() ["INSERT  INTO FishPandLlabourExpenseDetail (`FishPandLOid`, `employeeRoleOid`, `expenseAmount`)  VALUES ('91', '4', '0')"]
DEBUG 2017-07-14 09:32:50 NAME: savePandLexpenseDetails() ["INSERT  INTO FishPandLlabourExpenseDetail (`FishPandLOid`, `employeeRoleOid`, `expenseAmount`)  VALUES ('91', '5', '0')"]
DEBUG 2017-07-14 09:32:50 NAME: savePandLexpenseDetails() ["INSERT  INTO FishPandLlabourExpenseDetail (`FishPandLOid`, `employeeRoleOid`, `expenseAmount`)  VALUES ('91', '6', '0')"]
DEBUG 2017-07-14 09:32:50 NAME: savePandLexpenseDetails() ["INSERT  INTO FishPandLlabourExpenseDetail (`FishPandLOid`, `employeeRoleOid`, `expenseAmount`)  VALUES ('91', '7', '35')"]
DEBUG 2017-07-14 09:32:50 NAME: savePandLexpenseDetails() ["INSERT  INTO FishPandLlabourExpenseDetail (`FishPandLOid`, `employeeRoleOid`, `expenseAmount`)  VALUES ('91', '8', '35')"]
DEBUG 2017-07-14 09:32:50 NAME: savePandLexpenseDetails() ["INSERT  INTO FishPandLlabourExpenseDetail (`FishPandLOid`, `employeeRoleOid`, `expenseAmount`)  VALUES ('91', '9', '0')"]
DEBUG 2017-07-14 09:32:50 NAME: savePandLexpenseDetails() ["INSERT  INTO FishPandLlabourExpenseDetail (`FishPandLOid`, `employeeRoleOid`, `expenseAmount`)  VALUES ('91', '10', '0')"]
DEBUG 2017-07-14 09:32:50 NAME: getPandLOids() ["SELECT oid FROM fishpandl WHERE opsMonthlyCalendarOid  = 8"]
DEBUG 2017-07-14 09:32:50 NAME: getPandLOids() [{"oid":80}]
DEBUG 2017-07-14 09:32:50 NAME: deletePandLexpenseRecords(PandLoidArray) [{"oid":80}]
DEBUG 2017-07-14 09:32:50 NAME: deletePandLexpenseRecords() ["DELETE FROM FishPandLlabourExpenseDetail WHERE  fishPandLOid  = '80' "]
DEBUG 2017-07-14 09:32:50 NAME: deletePandLexistingrecord() ["DELETE FROM FishPandL WHERE  opsMonthlyCalendarOid = '8' "]
DEBUG 2017-07-14 09:32:50 NAME: getSelectedMonth() ["SELECT year from opsmonthlycalendar WHERE oid = 8"]
DEBUG 2017-07-14 09:32:50 NAME: getRegularSalesIncome() for FISH ["SELECT IF(SUM(weight*pricePerKg)IS NULL,0, SUM(weight*pricePerKg))  AS totSalesIncome FROM fishsales WHERE YEAR(salesDt) = 2017 AND MONTH(salesDt) = 8 "]
DEBUG 2017-07-14 09:32:50 NAME: getRegularSalesIncome() for FISH (2017,8) [{"totSalesIncome":0}]
DEBUG 2017-07-14 09:32:50 NAME: getEmployeePurchases() for FISH ["SELECT IF(SUM(`quantity`*`unitPrice`)IS NULL,0, SUM(`quantity`*`unitPrice`)) AS emloyeePurchaseIncome FROM employeepurchases WHERE YEAR(purchaseDt) = 2017 AND MONTH(purchaseDt) = 8 AND lineOfBusinessOid = 1"]
DEBUG 2017-07-14 09:32:50 NAME: getEmployeePurchases() for FISH (2017,8) [{"emloyeePurchaseIncome":0}]
DEBUG 2017-07-14 09:32:50 NAME: getTotSalesIncome() {"lineOfBusinessOid":1,"opsMonthlyCalendarOid":8,"salesIncome":0,"otherIncome":0,"purchases":370,"otherPurchases":0,"generalExpenses":370,"elecExpenses":0}
DEBUG 2017-07-14 09:32:50 NAME: getOtherIncome() ["SELECT IF(SUM(incomeAmt)IS NULL,0, SUM(incomeAmt)) AS incomeAmt FROM OtherDeptIncome WHERE lineOfBusinessOid = 1 AND YEAR(date) = 2017 AND MONTH(date) = 8 "]
DEBUG 2017-07-14 09:32:50 NAME: getPurchases() ["SELECT ROUND(IF(SUM(amount)IS NULL,0, SUM(amount)),2) AS purchases FROM Expenses WHERE lineOfBusinessOid = 1 AND categoryOid = 4 AND YEAR(expenseDate) = 2017 AND MONTH(expenseDate) = 8 "]
DEBUG 2017-07-14 09:32:50 NAME: getGeneralExpenses() ["SELECT IF(SUM(amount) IS NULL, 0, SUM(amount)) AS totGeneralExpense FROM expenses WHERE YEAR(expenseDate) = 2017 and MONTH(expenseDate) = 8 AND lineOfBusinessOid = 1 "]
DEBUG 2017-07-14 09:32:50 NAME: getGeneralExpenses() [{"totGeneralExpense":0}]
DEBUG 2017-07-14 09:32:50 NAME: getElecExpenses() ["SELECT lineOfBusinessOid, electricityAccountOid, electricityaccount.accountNbr, allocation, electricityexpense.amount, (allocation\/100)*electricityexpense.amount AS elecExpense, startOpsMonthlyCalendarOid FROM electricityallocation INNER JOIN electricityaccount ON electricityaccount.oid = electricityallocation.electricityAccountOid INNER JOIN electricityexpense ON electricityexpense.electricityAccounOid = electricityallocation.electricityAccountOid WHERE lineOfBusinessOid = 1 AND startOpsMonthlyCalendarOid = 8 "]
DEBUG 2017-07-14 09:32:50 NAME: getElecExpenses() []
DEBUG 2017-07-14 09:32:50 NAME: getFishPandL() {"lineOfBusinessOid":1,"opsMonthlyCalendarOid":8,"salesIncome":0,"otherIncome":0,"purchases":0,"otherPurchases":0,"generalExpenses":0,"elecExpenses":0}
DEBUG 2017-07-14 09:32:50 NAME: getOtherWorkExpensesByRole() ["SELECT empotherworkhrs_vw.eOid ,employeerole.employeeRoleTypeOid AS roleOid, SUM(hours) AS totHrs, salaryAmount, salarytype FROM empotherworkhrs_vw INNER JOIN( employee, employeerole, employeeroletype ) ON ( empotherworkhrs_vw.eOid = employee.oid AND employee.oid = employeerole.employeeOid AND employeerole.employeeRoleTypeOid = employeeroletype.oid ) WHERE ( attendanceDt BETWEEN '2017-08-01' AND '2017-08-31' ) AND lobOid = 1 GROUP BY empotherworkhrs_vw.eOid ,salaryAmount,salarytype, employeerole.employeeRoleTypeOid"]
DEBUG 2017-07-14 09:32:50 NAME: getOtherWorkExpensesByRole() []
DEBUG 2017-07-14 09:32:50 NAME: getOtherWorkExpensesByRole() []
DEBUG 2017-07-14 09:32:50 NAME: getEmployeeRoleTypes() ["SELECT oid, role FROM employeeroletype"]
DEBUG 2017-07-14 09:32:50 NAME: getEmployeeRoleTypes() [{"oid":1,"role":"TEA PICKER"},{"oid":2,"role":"SUPERVISOR"},{"oid":3,"role":"OPS MANAGER"},{"oid":4,"role":"DIRECTOR"},{"oid":5,"role":"HOUSEHELP"},{"oid":6,"role":"GARDENER"},{"oid":7,"role":"SECURITY"},{"oid":8,"role":"FARM HAND"},{"oid":9,"role":"DRIVER"},{"oid":10,"role":"MILK MAN"}]
DEBUG 2017-07-14 09:32:50 NAME: fillEmptyRoleTypes() {"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0}
DEBUG 2017-07-14 09:32:50 NAME: getParttimeExpensesByRole() ["SELECT empparttimehrs_vw.eOid ,employeerole.employeeRoleTypeOid AS roleOid, SUM(hours) AS totHrs, salaryAmount, salarytype FROM empparttimehrs_vw INNER JOIN( employee, employeerole, employeeroletype ) ON ( empparttimehrs_vw.eOid = employee.oid AND employee.oid = employeerole.employeeOid AND employeerole.employeeRoleTypeOid = employeeroletype.oid ) WHERE ( attendanceDt BETWEEN '2017-08-01' AND '2017-08-31' ) AND lobOid = 1 GROUP BY empparttimehrs_vw.eOid ,salaryAmount,salarytype, employeerole.employeeRoleTypeOid"]
DEBUG 2017-07-14 09:32:50 NAME: getParttimeExpensesByRole() []
DEBUG 2017-07-14 09:32:50 NAME: getParttimeExpensesByRole() []
DEBUG 2017-07-14 09:32:50 NAME: getEmployeeRoleTypes() ["SELECT oid, role FROM employeeroletype"]
DEBUG 2017-07-14 09:32:50 NAME: getEmployeeRoleTypes() [{"oid":1,"role":"TEA PICKER"},{"oid":2,"role":"SUPERVISOR"},{"oid":3,"role":"OPS MANAGER"},{"oid":4,"role":"DIRECTOR"},{"oid":5,"role":"HOUSEHELP"},{"oid":6,"role":"GARDENER"},{"oid":7,"role":"SECURITY"},{"oid":8,"role":"FARM HAND"},{"oid":9,"role":"DRIVER"},{"oid":10,"role":"MILK MAN"}]
DEBUG 2017-07-14 09:32:50 NAME: fillEmptyRoleTypes() {"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0}
DEBUG 2017-07-14 09:32:50 NAME: getEmployeeRoleTypes() ["SELECT oid, role FROM employeeroletype"]
DEBUG 2017-07-14 09:32:50 NAME: getEmployeeRoleTypes() [{"oid":1,"role":"TEA PICKER"},{"oid":2,"role":"SUPERVISOR"},{"oid":3,"role":"OPS MANAGER"},{"oid":4,"role":"DIRECTOR"},{"oid":5,"role":"HOUSEHELP"},{"oid":6,"role":"GARDENER"},{"oid":7,"role":"SECURITY"},{"oid":8,"role":"FARM HAND"},{"oid":9,"role":"DRIVER"},{"oid":10,"role":"MILK MAN"}]
DEBUG 2017-07-14 09:32:50 NAME: combineExpensesByRole() {"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0}
DEBUG 2017-07-14 09:32:50 NAME: savePandLexpenseDetails() ["INSERT  INTO FishPandLlabourExpenseDetail (`FishPandLOid`, `employeeRoleOid`, `expenseAmount`)  VALUES ('92', '1', '0')"]
DEBUG 2017-07-14 09:32:50 NAME: savePandLexpenseDetails() ["INSERT  INTO FishPandLlabourExpenseDetail (`FishPandLOid`, `employeeRoleOid`, `expenseAmount`)  VALUES ('92', '2', '0')"]
DEBUG 2017-07-14 09:32:50 NAME: savePandLexpenseDetails() ["INSERT  INTO FishPandLlabourExpenseDetail (`FishPandLOid`, `employeeRoleOid`, `expenseAmount`)  VALUES ('92', '3', '0')"]
DEBUG 2017-07-14 09:32:50 NAME: savePandLexpenseDetails() ["INSERT  INTO FishPandLlabourExpenseDetail (`FishPandLOid`, `employeeRoleOid`, `expenseAmount`)  VALUES ('92', '4', '0')"]
DEBUG 2017-07-14 09:32:50 NAME: savePandLexpenseDetails() ["INSERT  INTO FishPandLlabourExpenseDetail (`FishPandLOid`, `employeeRoleOid`, `expenseAmount`)  VALUES ('92', '5', '0')"]
DEBUG 2017-07-14 09:32:50 NAME: savePandLexpenseDetails() ["INSERT  INTO FishPandLlabourExpenseDetail (`FishPandLOid`, `employeeRoleOid`, `expenseAmount`)  VALUES ('92', '6', '0')"]
DEBUG 2017-07-14 09:32:50 NAME: savePandLexpenseDetails() ["INSERT  INTO FishPandLlabourExpenseDetail (`FishPandLOid`, `employeeRoleOid`, `expenseAmount`)  VALUES ('92', '7', '0')"]
DEBUG 2017-07-14 09:32:50 NAME: savePandLexpenseDetails() ["INSERT  INTO FishPandLlabourExpenseDetail (`FishPandLOid`, `employeeRoleOid`, `expenseAmount`)  VALUES ('92', '8', '0')"]
DEBUG 2017-07-14 09:32:50 NAME: savePandLexpenseDetails() ["INSERT  INTO FishPandLlabourExpenseDetail (`FishPandLOid`, `employeeRoleOid`, `expenseAmount`)  VALUES ('92', '9', '0')"]
DEBUG 2017-07-14 09:32:50 NAME: savePandLexpenseDetails() ["INSERT  INTO FishPandLlabourExpenseDetail (`FishPandLOid`, `employeeRoleOid`, `expenseAmount`)  VALUES ('92', '10', '0')"]
DEBUG 2017-07-14 09:32:50 NAME: getPandLOids() ["SELECT oid FROM fishpandl WHERE opsMonthlyCalendarOid  = 9"]
DEBUG 2017-07-14 09:32:50 NAME: getPandLOids() [{"oid":81}]
DEBUG 2017-07-14 09:32:50 NAME: deletePandLexpenseRecords(PandLoidArray) [{"oid":81}]
DEBUG 2017-07-14 09:32:50 NAME: deletePandLexpenseRecords() ["DELETE FROM FishPandLlabourExpenseDetail WHERE  fishPandLOid  = '81' "]
DEBUG 2017-07-14 09:32:50 NAME: deletePandLexistingrecord() ["DELETE FROM FishPandL WHERE  opsMonthlyCalendarOid = '9' "]
DEBUG 2017-07-14 09:32:50 NAME: getSelectedMonth() ["SELECT year from opsmonthlycalendar WHERE oid = 9"]
DEBUG 2017-07-14 09:32:50 NAME: getRegularSalesIncome() for FISH ["SELECT IF(SUM(weight*pricePerKg)IS NULL,0, SUM(weight*pricePerKg))  AS totSalesIncome FROM fishsales WHERE YEAR(salesDt) = 2017 AND MONTH(salesDt) = 9 "]
DEBUG 2017-07-14 09:32:50 NAME: getRegularSalesIncome() for FISH (2017,9) [{"totSalesIncome":0}]
DEBUG 2017-07-14 09:32:50 NAME: getEmployeePurchases() for FISH ["SELECT IF(SUM(`quantity`*`unitPrice`)IS NULL,0, SUM(`quantity`*`unitPrice`)) AS emloyeePurchaseIncome FROM employeepurchases WHERE YEAR(purchaseDt) = 2017 AND MONTH(purchaseDt) = 9 AND lineOfBusinessOid = 1"]
DEBUG 2017-07-14 09:32:50 NAME: getEmployeePurchases() for FISH (2017,9) [{"emloyeePurchaseIncome":0}]
DEBUG 2017-07-14 09:32:50 NAME: getTotSalesIncome() {"lineOfBusinessOid":1,"opsMonthlyCalendarOid":9,"salesIncome":0,"otherIncome":0,"purchases":0,"otherPurchases":0,"generalExpenses":0,"elecExpenses":0}
DEBUG 2017-07-14 09:32:50 NAME: getOtherIncome() ["SELECT IF(SUM(incomeAmt)IS NULL,0, SUM(incomeAmt)) AS incomeAmt FROM OtherDeptIncome WHERE lineOfBusinessOid = 1 AND YEAR(date) = 2017 AND MONTH(date) = 9 "]
DEBUG 2017-07-14 09:32:50 NAME: getPurchases() ["SELECT ROUND(IF(SUM(amount)IS NULL,0, SUM(amount)),2) AS purchases FROM Expenses WHERE lineOfBusinessOid = 1 AND categoryOid = 4 AND YEAR(expenseDate) = 2017 AND MONTH(expenseDate) = 9 "]
DEBUG 2017-07-14 09:32:50 NAME: getGeneralExpenses() ["SELECT IF(SUM(amount) IS NULL, 0, SUM(amount)) AS totGeneralExpense FROM expenses WHERE YEAR(expenseDate) = 2017 and MONTH(expenseDate) = 9 AND lineOfBusinessOid = 1 "]
DEBUG 2017-07-14 09:32:50 NAME: getGeneralExpenses() [{"totGeneralExpense":0}]
DEBUG 2017-07-14 09:32:50 NAME: getElecExpenses() ["SELECT lineOfBusinessOid, electricityAccountOid, electricityaccount.accountNbr, allocation, electricityexpense.amount, (allocation\/100)*electricityexpense.amount AS elecExpense, startOpsMonthlyCalendarOid FROM electricityallocation INNER JOIN electricityaccount ON electricityaccount.oid = electricityallocation.electricityAccountOid INNER JOIN electricityexpense ON electricityexpense.electricityAccounOid = electricityallocation.electricityAccountOid WHERE lineOfBusinessOid = 1 AND startOpsMonthlyCalendarOid = 9 "]
DEBUG 2017-07-14 09:32:50 NAME: getElecExpenses() []
DEBUG 2017-07-14 09:32:50 NAME: getFishPandL() {"lineOfBusinessOid":1,"opsMonthlyCalendarOid":9,"salesIncome":0,"otherIncome":0,"purchases":0,"otherPurchases":0,"generalExpenses":0,"elecExpenses":0}
DEBUG 2017-07-14 09:32:50 NAME: getOtherWorkExpensesByRole() ["SELECT empotherworkhrs_vw.eOid ,employeerole.employeeRoleTypeOid AS roleOid, SUM(hours) AS totHrs, salaryAmount, salarytype FROM empotherworkhrs_vw INNER JOIN( employee, employeerole, employeeroletype ) ON ( empotherworkhrs_vw.eOid = employee.oid AND employee.oid = employeerole.employeeOid AND employeerole.employeeRoleTypeOid = employeeroletype.oid ) WHERE ( attendanceDt BETWEEN '2017-09-01' AND '2017-09-30' ) AND lobOid = 1 GROUP BY empotherworkhrs_vw.eOid ,salaryAmount,salarytype, employeerole.employeeRoleTypeOid"]
DEBUG 2017-07-14 09:32:50 NAME: getOtherWorkExpensesByRole() []
DEBUG 2017-07-14 09:32:50 NAME: getOtherWorkExpensesByRole() []
DEBUG 2017-07-14 09:32:50 NAME: getEmployeeRoleTypes() ["SELECT oid, role FROM employeeroletype"]
DEBUG 2017-07-14 09:32:50 NAME: getEmployeeRoleTypes() [{"oid":1,"role":"TEA PICKER"},{"oid":2,"role":"SUPERVISOR"},{"oid":3,"role":"OPS MANAGER"},{"oid":4,"role":"DIRECTOR"},{"oid":5,"role":"HOUSEHELP"},{"oid":6,"role":"GARDENER"},{"oid":7,"role":"SECURITY"},{"oid":8,"role":"FARM HAND"},{"oid":9,"role":"DRIVER"},{"oid":10,"role":"MILK MAN"}]
DEBUG 2017-07-14 09:32:50 NAME: fillEmptyRoleTypes() {"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0}
DEBUG 2017-07-14 09:32:50 NAME: getParttimeExpensesByRole() ["SELECT empparttimehrs_vw.eOid ,employeerole.employeeRoleTypeOid AS roleOid, SUM(hours) AS totHrs, salaryAmount, salarytype FROM empparttimehrs_vw INNER JOIN( employee, employeerole, employeeroletype ) ON ( empparttimehrs_vw.eOid = employee.oid AND employee.oid = employeerole.employeeOid AND employeerole.employeeRoleTypeOid = employeeroletype.oid ) WHERE ( attendanceDt BETWEEN '2017-09-01' AND '2017-09-30' ) AND lobOid = 1 GROUP BY empparttimehrs_vw.eOid ,salaryAmount,salarytype, employeerole.employeeRoleTypeOid"]
DEBUG 2017-07-14 09:32:50 NAME: getParttimeExpensesByRole() []
DEBUG 2017-07-14 09:32:50 NAME: getParttimeExpensesByRole() []
DEBUG 2017-07-14 09:32:50 NAME: getEmployeeRoleTypes() ["SELECT oid, role FROM employeeroletype"]
DEBUG 2017-07-14 09:32:50 NAME: getEmployeeRoleTypes() [{"oid":1,"role":"TEA PICKER"},{"oid":2,"role":"SUPERVISOR"},{"oid":3,"role":"OPS MANAGER"},{"oid":4,"role":"DIRECTOR"},{"oid":5,"role":"HOUSEHELP"},{"oid":6,"role":"GARDENER"},{"oid":7,"role":"SECURITY"},{"oid":8,"role":"FARM HAND"},{"oid":9,"role":"DRIVER"},{"oid":10,"role":"MILK MAN"}]
DEBUG 2017-07-14 09:32:50 NAME: fillEmptyRoleTypes() {"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0}
DEBUG 2017-07-14 09:32:50 NAME: getEmployeeRoleTypes() ["SELECT oid, role FROM employeeroletype"]
DEBUG 2017-07-14 09:32:50 NAME: getEmployeeRoleTypes() [{"oid":1,"role":"TEA PICKER"},{"oid":2,"role":"SUPERVISOR"},{"oid":3,"role":"OPS MANAGER"},{"oid":4,"role":"DIRECTOR"},{"oid":5,"role":"HOUSEHELP"},{"oid":6,"role":"GARDENER"},{"oid":7,"role":"SECURITY"},{"oid":8,"role":"FARM HAND"},{"oid":9,"role":"DRIVER"},{"oid":10,"role":"MILK MAN"}]
DEBUG 2017-07-14 09:32:50 NAME: combineExpensesByRole() {"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0}
DEBUG 2017-07-14 09:32:50 NAME: savePandLexpenseDetails() ["INSERT  INTO FishPandLlabourExpenseDetail (`FishPandLOid`, `employeeRoleOid`, `expenseAmount`)  VALUES ('93', '1', '0')"]
DEBUG 2017-07-14 09:32:50 NAME: savePandLexpenseDetails() ["INSERT  INTO FishPandLlabourExpenseDetail (`FishPandLOid`, `employeeRoleOid`, `expenseAmount`)  VALUES ('93', '2', '0')"]
DEBUG 2017-07-14 09:32:50 NAME: savePandLexpenseDetails() ["INSERT  INTO FishPandLlabourExpenseDetail (`FishPandLOid`, `employeeRoleOid`, `expenseAmount`)  VALUES ('93', '3', '0')"]
DEBUG 2017-07-14 09:32:50 NAME: savePandLexpenseDetails() ["INSERT  INTO FishPandLlabourExpenseDetail (`FishPandLOid`, `employeeRoleOid`, `expenseAmount`)  VALUES ('93', '4', '0')"]
DEBUG 2017-07-14 09:32:50 NAME: savePandLexpenseDetails() ["INSERT  INTO FishPandLlabourExpenseDetail (`FishPandLOid`, `employeeRoleOid`, `expenseAmount`)  VALUES ('93', '5', '0')"]
DEBUG 2017-07-14 09:32:50 NAME: savePandLexpenseDetails() ["INSERT  INTO FishPandLlabourExpenseDetail (`FishPandLOid`, `employeeRoleOid`, `expenseAmount`)  VALUES ('93', '6', '0')"]
DEBUG 2017-07-14 09:32:50 NAME: savePandLexpenseDetails() ["INSERT  INTO FishPandLlabourExpenseDetail (`FishPandLOid`, `employeeRoleOid`, `expenseAmount`)  VALUES ('93', '7', '0')"]
DEBUG 2017-07-14 09:32:50 NAME: savePandLexpenseDetails() ["INSERT  INTO FishPandLlabourExpenseDetail (`FishPandLOid`, `employeeRoleOid`, `expenseAmount`)  VALUES ('93', '8', '0')"]
DEBUG 2017-07-14 09:32:50 NAME: savePandLexpenseDetails() ["INSERT  INTO FishPandLlabourExpenseDetail (`FishPandLOid`, `employeeRoleOid`, `expenseAmount`)  VALUES ('93', '9', '0')"]
DEBUG 2017-07-14 09:32:50 NAME: savePandLexpenseDetails() ["INSERT  INTO FishPandLlabourExpenseDetail (`FishPandLOid`, `employeeRoleOid`, `expenseAmount`)  VALUES ('93', '10', '0')"]
DEBUG 2017-07-14 09:32:50 NAME: getPandLOids() ["SELECT oid FROM fishpandl WHERE opsMonthlyCalendarOid  = 10"]
DEBUG 2017-07-14 09:32:50 NAME: getPandLOids() [{"oid":82}]
DEBUG 2017-07-14 09:32:50 NAME: deletePandLexpenseRecords(PandLoidArray) [{"oid":82}]
DEBUG 2017-07-14 09:32:50 NAME: deletePandLexpenseRecords() ["DELETE FROM FishPandLlabourExpenseDetail WHERE  fishPandLOid  = '82' "]
DEBUG 2017-07-14 09:32:50 NAME: deletePandLexistingrecord() ["DELETE FROM FishPandL WHERE  opsMonthlyCalendarOid = '10' "]
DEBUG 2017-07-14 09:32:50 NAME: getSelectedMonth() ["SELECT year from opsmonthlycalendar WHERE oid = 10"]
DEBUG 2017-07-14 09:32:50 NAME: getRegularSalesIncome() for FISH ["SELECT IF(SUM(weight*pricePerKg)IS NULL,0, SUM(weight*pricePerKg))  AS totSalesIncome FROM fishsales WHERE YEAR(salesDt) = 2017 AND MONTH(salesDt) = 10 "]
DEBUG 2017-07-14 09:32:50 NAME: getRegularSalesIncome() for FISH (2017,10) [{"totSalesIncome":0}]
DEBUG 2017-07-14 09:32:50 NAME: getEmployeePurchases() for FISH ["SELECT IF(SUM(`quantity`*`unitPrice`)IS NULL,0, SUM(`quantity`*`unitPrice`)) AS emloyeePurchaseIncome FROM employeepurchases WHERE YEAR(purchaseDt) = 2017 AND MONTH(purchaseDt) = 10 AND lineOfBusinessOid = 1"]
DEBUG 2017-07-14 09:32:50 NAME: getEmployeePurchases() for FISH (2017,10) [{"emloyeePurchaseIncome":0}]
DEBUG 2017-07-14 09:32:50 NAME: getTotSalesIncome() {"lineOfBusinessOid":1,"opsMonthlyCalendarOid":10,"salesIncome":0,"otherIncome":0,"purchases":0,"otherPurchases":0,"generalExpenses":0,"elecExpenses":0}
DEBUG 2017-07-14 09:32:50 NAME: getOtherIncome() ["SELECT IF(SUM(incomeAmt)IS NULL,0, SUM(incomeAmt)) AS incomeAmt FROM OtherDeptIncome WHERE lineOfBusinessOid = 1 AND YEAR(date) = 2017 AND MONTH(date) = 10 "]
DEBUG 2017-07-14 09:32:50 NAME: getPurchases() ["SELECT ROUND(IF(SUM(amount)IS NULL,0, SUM(amount)),2) AS purchases FROM Expenses WHERE lineOfBusinessOid = 1 AND categoryOid = 4 AND YEAR(expenseDate) = 2017 AND MONTH(expenseDate) = 10 "]
DEBUG 2017-07-14 09:32:50 NAME: getGeneralExpenses() ["SELECT IF(SUM(amount) IS NULL, 0, SUM(amount)) AS totGeneralExpense FROM expenses WHERE YEAR(expenseDate) = 2017 and MONTH(expenseDate) = 10 AND lineOfBusinessOid = 1 "]
DEBUG 2017-07-14 09:32:50 NAME: getGeneralExpenses() [{"totGeneralExpense":0}]
DEBUG 2017-07-14 09:32:50 NAME: getElecExpenses() ["SELECT lineOfBusinessOid, electricityAccountOid, electricityaccount.accountNbr, allocation, electricityexpense.amount, (allocation\/100)*electricityexpense.amount AS elecExpense, startOpsMonthlyCalendarOid FROM electricityallocation INNER JOIN electricityaccount ON electricityaccount.oid = electricityallocation.electricityAccountOid INNER JOIN electricityexpense ON electricityexpense.electricityAccounOid = electricityallocation.electricityAccountOid WHERE lineOfBusinessOid = 1 AND startOpsMonthlyCalendarOid = 10 "]
DEBUG 2017-07-14 09:32:50 NAME: getElecExpenses() []
DEBUG 2017-07-14 09:32:50 NAME: getFishPandL() {"lineOfBusinessOid":1,"opsMonthlyCalendarOid":10,"salesIncome":0,"otherIncome":0,"purchases":0,"otherPurchases":0,"generalExpenses":0,"elecExpenses":0}
DEBUG 2017-07-14 09:32:50 NAME: getOtherWorkExpensesByRole() ["SELECT empotherworkhrs_vw.eOid ,employeerole.employeeRoleTypeOid AS roleOid, SUM(hours) AS totHrs, salaryAmount, salarytype FROM empotherworkhrs_vw INNER JOIN( employee, employeerole, employeeroletype ) ON ( empotherworkhrs_vw.eOid = employee.oid AND employee.oid = employeerole.employeeOid AND employeerole.employeeRoleTypeOid = employeeroletype.oid ) WHERE ( attendanceDt BETWEEN '2017-10-01' AND '2017-10-31' ) AND lobOid = 1 GROUP BY empotherworkhrs_vw.eOid ,salaryAmount,salarytype, employeerole.employeeRoleTypeOid"]
DEBUG 2017-07-14 09:32:50 NAME: getOtherWorkExpensesByRole() []
DEBUG 2017-07-14 09:32:50 NAME: getOtherWorkExpensesByRole() []
DEBUG 2017-07-14 09:32:50 NAME: getEmployeeRoleTypes() ["SELECT oid, role FROM employeeroletype"]
DEBUG 2017-07-14 09:32:50 NAME: getEmployeeRoleTypes() [{"oid":1,"role":"TEA PICKER"},{"oid":2,"role":"SUPERVISOR"},{"oid":3,"role":"OPS MANAGER"},{"oid":4,"role":"DIRECTOR"},{"oid":5,"role":"HOUSEHELP"},{"oid":6,"role":"GARDENER"},{"oid":7,"role":"SECURITY"},{"oid":8,"role":"FARM HAND"},{"oid":9,"role":"DRIVER"},{"oid":10,"role":"MILK MAN"}]
DEBUG 2017-07-14 09:32:50 NAME: fillEmptyRoleTypes() {"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0}
DEBUG 2017-07-14 09:32:50 NAME: getParttimeExpensesByRole() ["SELECT empparttimehrs_vw.eOid ,employeerole.employeeRoleTypeOid AS roleOid, SUM(hours) AS totHrs, salaryAmount, salarytype FROM empparttimehrs_vw INNER JOIN( employee, employeerole, employeeroletype ) ON ( empparttimehrs_vw.eOid = employee.oid AND employee.oid = employeerole.employeeOid AND employeerole.employeeRoleTypeOid = employeeroletype.oid ) WHERE ( attendanceDt BETWEEN '2017-10-01' AND '2017-10-31' ) AND lobOid = 1 GROUP BY empparttimehrs_vw.eOid ,salaryAmount,salarytype, employeerole.employeeRoleTypeOid"]
DEBUG 2017-07-14 09:32:50 NAME: getParttimeExpensesByRole() []
DEBUG 2017-07-14 09:32:50 NAME: getParttimeExpensesByRole() []
DEBUG 2017-07-14 09:32:50 NAME: getEmployeeRoleTypes() ["SELECT oid, role FROM employeeroletype"]
DEBUG 2017-07-14 09:32:50 NAME: getEmployeeRoleTypes() [{"oid":1,"role":"TEA PICKER"},{"oid":2,"role":"SUPERVISOR"},{"oid":3,"role":"OPS MANAGER"},{"oid":4,"role":"DIRECTOR"},{"oid":5,"role":"HOUSEHELP"},{"oid":6,"role":"GARDENER"},{"oid":7,"role":"SECURITY"},{"oid":8,"role":"FARM HAND"},{"oid":9,"role":"DRIVER"},{"oid":10,"role":"MILK MAN"}]
DEBUG 2017-07-14 09:32:50 NAME: fillEmptyRoleTypes() {"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0}
DEBUG 2017-07-14 09:32:50 NAME: getEmployeeRoleTypes() ["SELECT oid, role FROM employeeroletype"]
DEBUG 2017-07-14 09:32:50 NAME: getEmployeeRoleTypes() [{"oid":1,"role":"TEA PICKER"},{"oid":2,"role":"SUPERVISOR"},{"oid":3,"role":"OPS MANAGER"},{"oid":4,"role":"DIRECTOR"},{"oid":5,"role":"HOUSEHELP"},{"oid":6,"role":"GARDENER"},{"oid":7,"role":"SECURITY"},{"oid":8,"role":"FARM HAND"},{"oid":9,"role":"DRIVER"},{"oid":10,"role":"MILK MAN"}]
DEBUG 2017-07-14 09:32:50 NAME: combineExpensesByRole() {"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0}
DEBUG 2017-07-14 09:32:50 NAME: savePandLexpenseDetails() ["INSERT  INTO FishPandLlabourExpenseDetail (`FishPandLOid`, `employeeRoleOid`, `expenseAmount`)  VALUES ('94', '1', '0')"]
DEBUG 2017-07-14 09:32:50 NAME: savePandLexpenseDetails() ["INSERT  INTO FishPandLlabourExpenseDetail (`FishPandLOid`, `employeeRoleOid`, `expenseAmount`)  VALUES ('94', '2', '0')"]
DEBUG 2017-07-14 09:32:50 NAME: savePandLexpenseDetails() ["INSERT  INTO FishPandLlabourExpenseDetail (`FishPandLOid`, `employeeRoleOid`, `expenseAmount`)  VALUES ('94', '3', '0')"]
DEBUG 2017-07-14 09:32:50 NAME: savePandLexpenseDetails() ["INSERT  INTO FishPandLlabourExpenseDetail (`FishPandLOid`, `employeeRoleOid`, `expenseAmount`)  VALUES ('94', '4', '0')"]
DEBUG 2017-07-14 09:32:50 NAME: savePandLexpenseDetails() ["INSERT  INTO FishPandLlabourExpenseDetail (`FishPandLOid`, `employeeRoleOid`, `expenseAmount`)  VALUES ('94', '5', '0')"]
DEBUG 2017-07-14 09:32:50 NAME: savePandLexpenseDetails() ["INSERT  INTO FishPandLlabourExpenseDetail (`FishPandLOid`, `employeeRoleOid`, `expenseAmount`)  VALUES ('94', '6', '0')"]
DEBUG 2017-07-14 09:32:50 NAME: savePandLexpenseDetails() ["INSERT  INTO FishPandLlabourExpenseDetail (`FishPandLOid`, `employeeRoleOid`, `expenseAmount`)  VALUES ('94', '7', '0')"]
DEBUG 2017-07-14 09:32:50 NAME: savePandLexpenseDetails() ["INSERT  INTO FishPandLlabourExpenseDetail (`FishPandLOid`, `employeeRoleOid`, `expenseAmount`)  VALUES ('94', '8', '0')"]
DEBUG 2017-07-14 09:32:50 NAME: savePandLexpenseDetails() ["INSERT  INTO FishPandLlabourExpenseDetail (`FishPandLOid`, `employeeRoleOid`, `expenseAmount`)  VALUES ('94', '9', '0')"]
DEBUG 2017-07-14 09:32:50 NAME: savePandLexpenseDetails() ["INSERT  INTO FishPandLlabourExpenseDetail (`FishPandLOid`, `employeeRoleOid`, `expenseAmount`)  VALUES ('94', '10', '0')"]
DEBUG 2017-07-14 09:32:50 NAME: getPandLOids() ["SELECT oid FROM fishpandl WHERE opsMonthlyCalendarOid  = 11"]
DEBUG 2017-07-14 09:32:50 NAME: getPandLOids() [{"oid":83}]
DEBUG 2017-07-14 09:32:50 NAME: deletePandLexpenseRecords(PandLoidArray) [{"oid":83}]
DEBUG 2017-07-14 09:32:50 NAME: deletePandLexpenseRecords() ["DELETE FROM FishPandLlabourExpenseDetail WHERE  fishPandLOid  = '83' "]
DEBUG 2017-07-14 09:32:50 NAME: deletePandLexistingrecord() ["DELETE FROM FishPandL WHERE  opsMonthlyCalendarOid = '11' "]
DEBUG 2017-07-14 09:32:50 NAME: getSelectedMonth() ["SELECT year from opsmonthlycalendar WHERE oid = 11"]
DEBUG 2017-07-14 09:32:50 NAME: getRegularSalesIncome() for FISH ["SELECT IF(SUM(weight*pricePerKg)IS NULL,0, SUM(weight*pricePerKg))  AS totSalesIncome FROM fishsales WHERE YEAR(salesDt) = 2017 AND MONTH(salesDt) = 11 "]
DEBUG 2017-07-14 09:32:50 NAME: getRegularSalesIncome() for FISH (2017,11) [{"totSalesIncome":0}]
DEBUG 2017-07-14 09:32:50 NAME: getEmployeePurchases() for FISH ["SELECT IF(SUM(`quantity`*`unitPrice`)IS NULL,0, SUM(`quantity`*`unitPrice`)) AS emloyeePurchaseIncome FROM employeepurchases WHERE YEAR(purchaseDt) = 2017 AND MONTH(purchaseDt) = 11 AND lineOfBusinessOid = 1"]
DEBUG 2017-07-14 09:32:50 NAME: getEmployeePurchases() for FISH (2017,11) [{"emloyeePurchaseIncome":0}]
DEBUG 2017-07-14 09:32:50 NAME: getTotSalesIncome() {"lineOfBusinessOid":1,"opsMonthlyCalendarOid":11,"salesIncome":0,"otherIncome":0,"purchases":0,"otherPurchases":0,"generalExpenses":0,"elecExpenses":0}
DEBUG 2017-07-14 09:32:50 NAME: getOtherIncome() ["SELECT IF(SUM(incomeAmt)IS NULL,0, SUM(incomeAmt)) AS incomeAmt FROM OtherDeptIncome WHERE lineOfBusinessOid = 1 AND YEAR(date) = 2017 AND MONTH(date) = 11 "]
DEBUG 2017-07-14 09:32:50 NAME: getPurchases() ["SELECT ROUND(IF(SUM(amount)IS NULL,0, SUM(amount)),2) AS purchases FROM Expenses WHERE lineOfBusinessOid = 1 AND categoryOid = 4 AND YEAR(expenseDate) = 2017 AND MONTH(expenseDate) = 11 "]
DEBUG 2017-07-14 09:32:50 NAME: getGeneralExpenses() ["SELECT IF(SUM(amount) IS NULL, 0, SUM(amount)) AS totGeneralExpense FROM expenses WHERE YEAR(expenseDate) = 2017 and MONTH(expenseDate) = 11 AND lineOfBusinessOid = 1 "]
DEBUG 2017-07-14 09:32:50 NAME: getGeneralExpenses() [{"totGeneralExpense":0}]
DEBUG 2017-07-14 09:32:50 NAME: getElecExpenses() ["SELECT lineOfBusinessOid, electricityAccountOid, electricityaccount.accountNbr, allocation, electricityexpense.amount, (allocation\/100)*electricityexpense.amount AS elecExpense, startOpsMonthlyCalendarOid FROM electricityallocation INNER JOIN electricityaccount ON electricityaccount.oid = electricityallocation.electricityAccountOid INNER JOIN electricityexpense ON electricityexpense.electricityAccounOid = electricityallocation.electricityAccountOid WHERE lineOfBusinessOid = 1 AND startOpsMonthlyCalendarOid = 11 "]
DEBUG 2017-07-14 09:32:50 NAME: getElecExpenses() []
DEBUG 2017-07-14 09:32:50 NAME: getFishPandL() {"lineOfBusinessOid":1,"opsMonthlyCalendarOid":11,"salesIncome":0,"otherIncome":0,"purchases":0,"otherPurchases":0,"generalExpenses":0,"elecExpenses":0}
DEBUG 2017-07-14 09:32:50 NAME: getOtherWorkExpensesByRole() ["SELECT empotherworkhrs_vw.eOid ,employeerole.employeeRoleTypeOid AS roleOid, SUM(hours) AS totHrs, salaryAmount, salarytype FROM empotherworkhrs_vw INNER JOIN( employee, employeerole, employeeroletype ) ON ( empotherworkhrs_vw.eOid = employee.oid AND employee.oid = employeerole.employeeOid AND employeerole.employeeRoleTypeOid = employeeroletype.oid ) WHERE ( attendanceDt BETWEEN '2017-11-01' AND '2017-11-30' ) AND lobOid = 1 GROUP BY empotherworkhrs_vw.eOid ,salaryAmount,salarytype, employeerole.employeeRoleTypeOid"]
DEBUG 2017-07-14 09:32:50 NAME: getOtherWorkExpensesByRole() []
DEBUG 2017-07-14 09:32:50 NAME: getOtherWorkExpensesByRole() []
DEBUG 2017-07-14 09:32:50 NAME: getEmployeeRoleTypes() ["SELECT oid, role FROM employeeroletype"]
DEBUG 2017-07-14 09:32:50 NAME: getEmployeeRoleTypes() [{"oid":1,"role":"TEA PICKER"},{"oid":2,"role":"SUPERVISOR"},{"oid":3,"role":"OPS MANAGER"},{"oid":4,"role":"DIRECTOR"},{"oid":5,"role":"HOUSEHELP"},{"oid":6,"role":"GARDENER"},{"oid":7,"role":"SECURITY"},{"oid":8,"role":"FARM HAND"},{"oid":9,"role":"DRIVER"},{"oid":10,"role":"MILK MAN"}]
DEBUG 2017-07-14 09:32:50 NAME: fillEmptyRoleTypes() {"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0}
DEBUG 2017-07-14 09:32:50 NAME: getParttimeExpensesByRole() ["SELECT empparttimehrs_vw.eOid ,employeerole.employeeRoleTypeOid AS roleOid, SUM(hours) AS totHrs, salaryAmount, salarytype FROM empparttimehrs_vw INNER JOIN( employee, employeerole, employeeroletype ) ON ( empparttimehrs_vw.eOid = employee.oid AND employee.oid = employeerole.employeeOid AND employeerole.employeeRoleTypeOid = employeeroletype.oid ) WHERE ( attendanceDt BETWEEN '2017-11-01' AND '2017-11-30' ) AND lobOid = 1 GROUP BY empparttimehrs_vw.eOid ,salaryAmount,salarytype, employeerole.employeeRoleTypeOid"]
DEBUG 2017-07-14 09:32:50 NAME: getParttimeExpensesByRole() []
DEBUG 2017-07-14 09:32:50 NAME: getParttimeExpensesByRole() []
DEBUG 2017-07-14 09:32:50 NAME: getEmployeeRoleTypes() ["SELECT oid, role FROM employeeroletype"]
DEBUG 2017-07-14 09:32:50 NAME: getEmployeeRoleTypes() [{"oid":1,"role":"TEA PICKER"},{"oid":2,"role":"SUPERVISOR"},{"oid":3,"role":"OPS MANAGER"},{"oid":4,"role":"DIRECTOR"},{"oid":5,"role":"HOUSEHELP"},{"oid":6,"role":"GARDENER"},{"oid":7,"role":"SECURITY"},{"oid":8,"role":"FARM HAND"},{"oid":9,"role":"DRIVER"},{"oid":10,"role":"MILK MAN"}]
DEBUG 2017-07-14 09:32:50 NAME: fillEmptyRoleTypes() {"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0}
DEBUG 2017-07-14 09:32:50 NAME: getEmployeeRoleTypes() ["SELECT oid, role FROM employeeroletype"]
DEBUG 2017-07-14 09:32:50 NAME: getEmployeeRoleTypes() [{"oid":1,"role":"TEA PICKER"},{"oid":2,"role":"SUPERVISOR"},{"oid":3,"role":"OPS MANAGER"},{"oid":4,"role":"DIRECTOR"},{"oid":5,"role":"HOUSEHELP"},{"oid":6,"role":"GARDENER"},{"oid":7,"role":"SECURITY"},{"oid":8,"role":"FARM HAND"},{"oid":9,"role":"DRIVER"},{"oid":10,"role":"MILK MAN"}]
DEBUG 2017-07-14 09:32:50 NAME: combineExpensesByRole() {"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0}
DEBUG 2017-07-14 09:32:50 NAME: savePandLexpenseDetails() ["INSERT  INTO FishPandLlabourExpenseDetail (`FishPandLOid`, `employeeRoleOid`, `expenseAmount`)  VALUES ('95', '1', '0')"]
DEBUG 2017-07-14 09:32:50 NAME: savePandLexpenseDetails() ["INSERT  INTO FishPandLlabourExpenseDetail (`FishPandLOid`, `employeeRoleOid`, `expenseAmount`)  VALUES ('95', '2', '0')"]
DEBUG 2017-07-14 09:32:50 NAME: savePandLexpenseDetails() ["INSERT  INTO FishPandLlabourExpenseDetail (`FishPandLOid`, `employeeRoleOid`, `expenseAmount`)  VALUES ('95', '3', '0')"]
DEBUG 2017-07-14 09:32:50 NAME: savePandLexpenseDetails() ["INSERT  INTO FishPandLlabourExpenseDetail (`FishPandLOid`, `employeeRoleOid`, `expenseAmount`)  VALUES ('95', '4', '0')"]
DEBUG 2017-07-14 09:32:50 NAME: savePandLexpenseDetails() ["INSERT  INTO FishPandLlabourExpenseDetail (`FishPandLOid`, `employeeRoleOid`, `expenseAmount`)  VALUES ('95', '5', '0')"]
DEBUG 2017-07-14 09:32:50 NAME: savePandLexpenseDetails() ["INSERT  INTO FishPandLlabourExpenseDetail (`FishPandLOid`, `employeeRoleOid`, `expenseAmount`)  VALUES ('95', '6', '0')"]
DEBUG 2017-07-14 09:32:50 NAME: savePandLexpenseDetails() ["INSERT  INTO FishPandLlabourExpenseDetail (`FishPandLOid`, `employeeRoleOid`, `expenseAmount`)  VALUES ('95', '7', '0')"]
DEBUG 2017-07-14 09:32:50 NAME: savePandLexpenseDetails() ["INSERT  INTO FishPandLlabourExpenseDetail (`FishPandLOid`, `employeeRoleOid`, `expenseAmount`)  VALUES ('95', '8', '0')"]
DEBUG 2017-07-14 09:32:50 NAME: savePandLexpenseDetails() ["INSERT  INTO FishPandLlabourExpenseDetail (`FishPandLOid`, `employeeRoleOid`, `expenseAmount`)  VALUES ('95', '9', '0')"]
DEBUG 2017-07-14 09:32:50 NAME: savePandLexpenseDetails() ["INSERT  INTO FishPandLlabourExpenseDetail (`FishPandLOid`, `employeeRoleOid`, `expenseAmount`)  VALUES ('95', '10', '0')"]
DEBUG 2017-07-14 09:32:50 NAME: getPandLOids() ["SELECT oid FROM fishpandl WHERE opsMonthlyCalendarOid  = 12"]
DEBUG 2017-07-14 09:32:50 NAME: getPandLOids() [{"oid":84}]
DEBUG 2017-07-14 09:32:50 NAME: deletePandLexpenseRecords(PandLoidArray) [{"oid":84}]
DEBUG 2017-07-14 09:32:50 NAME: deletePandLexpenseRecords() ["DELETE FROM FishPandLlabourExpenseDetail WHERE  fishPandLOid  = '84' "]
DEBUG 2017-07-14 09:32:50 NAME: deletePandLexistingrecord() ["DELETE FROM FishPandL WHERE  opsMonthlyCalendarOid = '12' "]
DEBUG 2017-07-14 09:32:50 NAME: getSelectedMonth() ["SELECT year from opsmonthlycalendar WHERE oid = 12"]
DEBUG 2017-07-14 09:32:50 NAME: getRegularSalesIncome() for FISH ["SELECT IF(SUM(weight*pricePerKg)IS NULL,0, SUM(weight*pricePerKg))  AS totSalesIncome FROM fishsales WHERE YEAR(salesDt) = 2017 AND MONTH(salesDt) = 12 "]
DEBUG 2017-07-14 09:32:50 NAME: getRegularSalesIncome() for FISH (2017,12) [{"totSalesIncome":0}]
DEBUG 2017-07-14 09:32:50 NAME: getEmployeePurchases() for FISH ["SELECT IF(SUM(`quantity`*`unitPrice`)IS NULL,0, SUM(`quantity`*`unitPrice`)) AS emloyeePurchaseIncome FROM employeepurchases WHERE YEAR(purchaseDt) = 2017 AND MONTH(purchaseDt) = 12 AND lineOfBusinessOid = 1"]
DEBUG 2017-07-14 09:32:50 NAME: getEmployeePurchases() for FISH (2017,12) [{"emloyeePurchaseIncome":0}]
DEBUG 2017-07-14 09:32:50 NAME: getTotSalesIncome() {"lineOfBusinessOid":1,"opsMonthlyCalendarOid":12,"salesIncome":0,"otherIncome":0,"purchases":0,"otherPurchases":0,"generalExpenses":0,"elecExpenses":0}
DEBUG 2017-07-14 09:32:50 NAME: getOtherIncome() ["SELECT IF(SUM(incomeAmt)IS NULL,0, SUM(incomeAmt)) AS incomeAmt FROM OtherDeptIncome WHERE lineOfBusinessOid = 1 AND YEAR(date) = 2017 AND MONTH(date) = 12 "]
DEBUG 2017-07-14 09:32:50 NAME: getPurchases() ["SELECT ROUND(IF(SUM(amount)IS NULL,0, SUM(amount)),2) AS purchases FROM Expenses WHERE lineOfBusinessOid = 1 AND categoryOid = 4 AND YEAR(expenseDate) = 2017 AND MONTH(expenseDate) = 12 "]
DEBUG 2017-07-14 09:32:50 NAME: getGeneralExpenses() ["SELECT IF(SUM(amount) IS NULL, 0, SUM(amount)) AS totGeneralExpense FROM expenses WHERE YEAR(expenseDate) = 2017 and MONTH(expenseDate) = 12 AND lineOfBusinessOid = 1 "]
DEBUG 2017-07-14 09:32:50 NAME: getGeneralExpenses() [{"totGeneralExpense":0}]
DEBUG 2017-07-14 09:32:50 NAME: getElecExpenses() ["SELECT lineOfBusinessOid, electricityAccountOid, electricityaccount.accountNbr, allocation, electricityexpense.amount, (allocation\/100)*electricityexpense.amount AS elecExpense, startOpsMonthlyCalendarOid FROM electricityallocation INNER JOIN electricityaccount ON electricityaccount.oid = electricityallocation.electricityAccountOid INNER JOIN electricityexpense ON electricityexpense.electricityAccounOid = electricityallocation.electricityAccountOid WHERE lineOfBusinessOid = 1 AND startOpsMonthlyCalendarOid = 12 "]
DEBUG 2017-07-14 09:32:50 NAME: getElecExpenses() []
DEBUG 2017-07-14 09:32:50 NAME: getFishPandL() {"lineOfBusinessOid":1,"opsMonthlyCalendarOid":12,"salesIncome":0,"otherIncome":0,"purchases":0,"otherPurchases":0,"generalExpenses":0,"elecExpenses":0}
DEBUG 2017-07-14 09:32:50 NAME: getOtherWorkExpensesByRole() ["SELECT empotherworkhrs_vw.eOid ,employeerole.employeeRoleTypeOid AS roleOid, SUM(hours) AS totHrs, salaryAmount, salarytype FROM empotherworkhrs_vw INNER JOIN( employee, employeerole, employeeroletype ) ON ( empotherworkhrs_vw.eOid = employee.oid AND employee.oid = employeerole.employeeOid AND employeerole.employeeRoleTypeOid = employeeroletype.oid ) WHERE ( attendanceDt BETWEEN '2017-12-01' AND '2017-12-31' ) AND lobOid = 1 GROUP BY empotherworkhrs_vw.eOid ,salaryAmount,salarytype, employeerole.employeeRoleTypeOid"]
DEBUG 2017-07-14 09:32:50 NAME: getOtherWorkExpensesByRole() []
DEBUG 2017-07-14 09:32:50 NAME: getOtherWorkExpensesByRole() []
DEBUG 2017-07-14 09:32:50 NAME: getEmployeeRoleTypes() ["SELECT oid, role FROM employeeroletype"]
DEBUG 2017-07-14 09:32:50 NAME: getEmployeeRoleTypes() [{"oid":1,"role":"TEA PICKER"},{"oid":2,"role":"SUPERVISOR"},{"oid":3,"role":"OPS MANAGER"},{"oid":4,"role":"DIRECTOR"},{"oid":5,"role":"HOUSEHELP"},{"oid":6,"role":"GARDENER"},{"oid":7,"role":"SECURITY"},{"oid":8,"role":"FARM HAND"},{"oid":9,"role":"DRIVER"},{"oid":10,"role":"MILK MAN"}]
DEBUG 2017-07-14 09:32:50 NAME: fillEmptyRoleTypes() {"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0}
DEBUG 2017-07-14 09:32:50 NAME: getParttimeExpensesByRole() ["SELECT empparttimehrs_vw.eOid ,employeerole.employeeRoleTypeOid AS roleOid, SUM(hours) AS totHrs, salaryAmount, salarytype FROM empparttimehrs_vw INNER JOIN( employee, employeerole, employeeroletype ) ON ( empparttimehrs_vw.eOid = employee.oid AND employee.oid = employeerole.employeeOid AND employeerole.employeeRoleTypeOid = employeeroletype.oid ) WHERE ( attendanceDt BETWEEN '2017-12-01' AND '2017-12-31' ) AND lobOid = 1 GROUP BY empparttimehrs_vw.eOid ,salaryAmount,salarytype, employeerole.employeeRoleTypeOid"]
DEBUG 2017-07-14 09:32:50 NAME: getParttimeExpensesByRole() []
DEBUG 2017-07-14 09:32:50 NAME: getParttimeExpensesByRole() []
DEBUG 2017-07-14 09:32:50 NAME: getEmployeeRoleTypes() ["SELECT oid, role FROM employeeroletype"]
DEBUG 2017-07-14 09:32:50 NAME: getEmployeeRoleTypes() [{"oid":1,"role":"TEA PICKER"},{"oid":2,"role":"SUPERVISOR"},{"oid":3,"role":"OPS MANAGER"},{"oid":4,"role":"DIRECTOR"},{"oid":5,"role":"HOUSEHELP"},{"oid":6,"role":"GARDENER"},{"oid":7,"role":"SECURITY"},{"oid":8,"role":"FARM HAND"},{"oid":9,"role":"DRIVER"},{"oid":10,"role":"MILK MAN"}]
DEBUG 2017-07-14 09:32:50 NAME: fillEmptyRoleTypes() {"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0}
DEBUG 2017-07-14 09:32:50 NAME: getEmployeeRoleTypes() ["SELECT oid, role FROM employeeroletype"]
DEBUG 2017-07-14 09:32:50 NAME: getEmployeeRoleTypes() [{"oid":1,"role":"TEA PICKER"},{"oid":2,"role":"SUPERVISOR"},{"oid":3,"role":"OPS MANAGER"},{"oid":4,"role":"DIRECTOR"},{"oid":5,"role":"HOUSEHELP"},{"oid":6,"role":"GARDENER"},{"oid":7,"role":"SECURITY"},{"oid":8,"role":"FARM HAND"},{"oid":9,"role":"DRIVER"},{"oid":10,"role":"MILK MAN"}]
DEBUG 2017-07-14 09:32:50 NAME: combineExpensesByRole() {"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0}
DEBUG 2017-07-14 09:32:50 NAME: savePandLexpenseDetails() ["INSERT  INTO FishPandLlabourExpenseDetail (`FishPandLOid`, `employeeRoleOid`, `expenseAmount`)  VALUES ('96', '1', '0')"]
DEBUG 2017-07-14 09:32:50 NAME: savePandLexpenseDetails() ["INSERT  INTO FishPandLlabourExpenseDetail (`FishPandLOid`, `employeeRoleOid`, `expenseAmount`)  VALUES ('96', '2', '0')"]
DEBUG 2017-07-14 09:32:50 NAME: savePandLexpenseDetails() ["INSERT  INTO FishPandLlabourExpenseDetail (`FishPandLOid`, `employeeRoleOid`, `expenseAmount`)  VALUES ('96', '3', '0')"]
DEBUG 2017-07-14 09:32:50 NAME: savePandLexpenseDetails() ["INSERT  INTO FishPandLlabourExpenseDetail (`FishPandLOid`, `employeeRoleOid`, `expenseAmount`)  VALUES ('96', '4', '0')"]
DEBUG 2017-07-14 09:32:50 NAME: savePandLexpenseDetails() ["INSERT  INTO FishPandLlabourExpenseDetail (`FishPandLOid`, `employeeRoleOid`, `expenseAmount`)  VALUES ('96', '5', '0')"]
DEBUG 2017-07-14 09:32:50 NAME: savePandLexpenseDetails() ["INSERT  INTO FishPandLlabourExpenseDetail (`FishPandLOid`, `employeeRoleOid`, `expenseAmount`)  VALUES ('96', '6', '0')"]
DEBUG 2017-07-14 09:32:50 NAME: savePandLexpenseDetails() ["INSERT  INTO FishPandLlabourExpenseDetail (`FishPandLOid`, `employeeRoleOid`, `expenseAmount`)  VALUES ('96', '7', '0')"]
DEBUG 2017-07-14 09:32:50 NAME: savePandLexpenseDetails() ["INSERT  INTO FishPandLlabourExpenseDetail (`FishPandLOid`, `employeeRoleOid`, `expenseAmount`)  VALUES ('96', '8', '0')"]
DEBUG 2017-07-14 09:32:50 NAME: savePandLexpenseDetails() ["INSERT  INTO FishPandLlabourExpenseDetail (`FishPandLOid`, `employeeRoleOid`, `expenseAmount`)  VALUES ('96', '9', '0')"]
DEBUG 2017-07-14 09:32:50 NAME: savePandLexpenseDetails() ["INSERT  INTO FishPandLlabourExpenseDetail (`FishPandLOid`, `employeeRoleOid`, `expenseAmount`)  VALUES ('96', '10', '0')"]
DEBUG 2017-07-14 09:32:50 NAME: get_fish_PandL_pivot_data_xml {"":""}
DEBUG 2017-07-14 09:32:50 NAME: get_fish_PandL_pivot_data_xml {"START":"---------------------------------------[get_fish_PandL_pivot_data_xml]---------------------------------------------------"}
DEBUG 2017-07-14 09:32:50 NAME: insertRowDetailIntoPivotTable() ["SELECT oid, lineOfBusinessOid, opsMonthlyCalendarOid, salesIncome, otherIncome, purchases, (salesIncome+otherIncome-purchases) AS grossProfit,  generalExpenses, elecExpenses, (generalExpenses+elecExpenses) AS totGeneralExpenses, ( (salesIncome+otherIncome-purchases) - (generalExpenses+elecExpenses)) AS netProfit FROM fishpandl WHERE opsMonthlyCalendarOid IN (1,2,3,4,5,6,7,8,9,10,11,12)"]
DEBUG 2017-07-14 09:32:50 NAME: insertRowDetail() ["INSERT  INTO pandlpivot (`lineOfBusinessOid`, `header`, `m1`, `m2`, `m3`, `m4`, `m5`, `m6`, `m7`, `m8`, `m9`, `m10`, `m11`, `m12`)  VALUES ('1', 'INCOME - Sales', '22840', '14000', '42500', '10000', '700', '880', '0', '0', '0', '0', '0', '0')"]
DEBUG 2017-07-14 09:32:50 NAME: insertRowDetail() ["INSERT  INTO pandlpivot (`lineOfBusinessOid`, `header`, `m1`, `m2`, `m3`, `m4`, `m5`, `m6`, `m7`, `m8`, `m9`, `m10`, `m11`, `m12`)  VALUES ('1', 'INCOME - Other', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0')"]
DEBUG 2017-07-14 09:32:50 NAME: insertRowDetail() ["INSERT  INTO pandlpivot (`lineOfBusinessOid`, `header`, `m1`, `m2`, `m3`, `m4`, `m5`, `m6`, `m7`, `m8`, `m9`, `m10`, `m11`, `m12`)  VALUES ('1', 'PURCHASES', '11160', '0', '0', '13695', '38700', '65750', '370', '0', '0', '0', '0', '0')"]
DEBUG 2017-07-14 09:32:50 NAME: insertRowDetail() ["INSERT  INTO pandlpivot (`lineOfBusinessOid`, `header`, `m1`, `m2`, `m3`, `m4`, `m5`, `m6`, `m7`, `m8`, `m9`, `m10`, `m11`, `m12`)  VALUES ('1', 'GROSS PROFIT', '11680', '14000', '42500', '-3695', '-38000', '-64870', '-370', '0', '0', '0', '0', '0')"]
DEBUG 2017-07-14 09:32:50 NAME: getOids() ["SELECT oid FROM fishPandL WHERE opsMonthlyCalendarOid IN (1,2,3,4,5,6,7,8,9,10,11,12)"]
DEBUG 2017-07-14 09:32:50 NAME: getOids() {"D":"85,86,87,88,89,90,91,92,93,94,95,96,"}
DEBUG 2017-07-14 09:32:50 NAME: insertLaborExpenseDetail() ["SELECT employeeroletype.role,expenseAmount FROM fishpandllabourexpensedetail INNER JOIN employeeroletype ON employeeroletype.oid = fishpandllabourexpensedetail.EmployeeRoleOid WHERE FishPandLOid IN (85,86,87,88,89,90,91,92,93,94,95,96) ORDER BY role "]
DEBUG 2017-07-14 09:32:50 NAME: insertLaborExpenseDetail() ["INSERT  INTO pandlpivot (`lineOfBusinessOid`, `header`, `m1`, `m2`, `m3`, `m4`, `m5`, `m6`, `m7`, `m8`, `m9`, `m10`, `m11`, `m12`)  VALUES ('1', 'DIRECTOR', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0')"]
DEBUG 2017-07-14 09:32:50 NAME: insertLaborExpenseDetail() ["INSERT  INTO pandlpivot (`lineOfBusinessOid`, `header`, `m1`, `m2`, `m3`, `m4`, `m5`, `m6`, `m7`, `m8`, `m9`, `m10`, `m11`, `m12`)  VALUES ('1', 'DRIVER', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0')"]
DEBUG 2017-07-14 09:32:50 NAME: insertLaborExpenseDetail() ["INSERT  INTO pandlpivot (`lineOfBusinessOid`, `header`, `m1`, `m2`, `m3`, `m4`, `m5`, `m6`, `m7`, `m8`, `m9`, `m10`, `m11`, `m12`)  VALUES ('1', 'FARM HAND', '0', '140', '0', '105', '385', '350', '35', '0', '0', '0', '0', '0')"]
DEBUG 2017-07-14 09:32:50 NAME: insertLaborExpenseDetail() ["INSERT  INTO pandlpivot (`lineOfBusinessOid`, `header`, `m1`, `m2`, `m3`, `m4`, `m5`, `m6`, `m7`, `m8`, `m9`, `m10`, `m11`, `m12`)  VALUES ('1', 'GARDENER', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0')"]
DEBUG 2017-07-14 09:32:50 NAME: insertLaborExpenseDetail() ["INSERT  INTO pandlpivot (`lineOfBusinessOid`, `header`, `m1`, `m2`, `m3`, `m4`, `m5`, `m6`, `m7`, `m8`, `m9`, `m10`, `m11`, `m12`)  VALUES ('1', 'HOUSEHELP', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0')"]
DEBUG 2017-07-14 09:32:50 NAME: insertLaborExpenseDetail() ["INSERT  INTO pandlpivot (`lineOfBusinessOid`, `header`, `m1`, `m2`, `m3`, `m4`, `m5`, `m6`, `m7`, `m8`, `m9`, `m10`, `m11`, `m12`)  VALUES ('1', 'MILK MAN', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0')"]
DEBUG 2017-07-14 09:32:50 NAME: insertLaborExpenseDetail() ["INSERT  INTO pandlpivot (`lineOfBusinessOid`, `header`, `m1`, `m2`, `m3`, `m4`, `m5`, `m6`, `m7`, `m8`, `m9`, `m10`, `m11`, `m12`)  VALUES ('1', 'OPS MANAGER', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0')"]
DEBUG 2017-07-14 09:32:50 NAME: insertLaborExpenseDetail() ["INSERT  INTO pandlpivot (`lineOfBusinessOid`, `header`, `m1`, `m2`, `m3`, `m4`, `m5`, `m6`, `m7`, `m8`, `m9`, `m10`, `m11`, `m12`)  VALUES ('1', 'SECURITY', '210', '140', '385', '1015', '525', '105', '35', '0', '0', '0', '0', '0')"]
DEBUG 2017-07-14 09:32:50 NAME: insertLaborExpenseDetail() ["INSERT  INTO pandlpivot (`lineOfBusinessOid`, `header`, `m1`, `m2`, `m3`, `m4`, `m5`, `m6`, `m7`, `m8`, `m9`, `m10`, `m11`, `m12`)  VALUES ('1', 'SUPERVISOR', '508.065', '338.71', '508.065', '508.065', '338.71', '395.161', '0', '0', '0', '0', '0', '0')"]
DEBUG 2017-07-14 09:32:51 NAME: insertLaborExpenseDetail() ["INSERT  INTO pandlpivot (`lineOfBusinessOid`, `header`, `m1`, `m2`, `m3`, `m4`, `m5`, `m6`, `m7`, `m8`, `m9`, `m10`, `m11`, `m12`)  VALUES ('1', 'TEA PICKER', '0', '0', '0', '35', '0', '0', '0', '0', '0', '0', '0', '0')"]
DEBUG 2017-07-14 09:32:51 NAME: getOids() ["SELECT oid FROM fishpandl WHERE opsMonthlyCalendarOid IN (1,2,3,4,5,6,7,8,9,10,11,12)"]
DEBUG 2017-07-14 09:32:51 NAME: getOids() {"D":"85,86,87,88,89,90,91,92,93,94,95,96,"}
DEBUG 2017-07-14 09:32:51 NAME: insertLaborExpenseDetail() ["SELECT 'TOTAL LABOUR EXPENSES' AS role, SUM(expenseAmount) AS expenseAmount FROM fishpandllabourexpensedetail WHERE fishpandllabourexpensedetail.FishPandLOid IN (85,86,87,88,89,90,91,92,93,94,95,96) GROUP BY FishPandLOid"]
DEBUG 2017-07-14 09:32:51 NAME: insertLaborExpenseDetail() ["INSERT  INTO pandlpivot (`lineOfBusinessOid`, `header`, `m1`, `m2`, `m3`, `m4`, `m5`, `m6`, `m7`, `m8`, `m9`, `m10`, `m11`, `m12`)  VALUES ('1', 'TOTAL LABOUR EXPENSES', '718.06451416016', '618.7096862793', '893.06451416016', '1663.0645141602', '1248.7096862793', '850.16128540039', '70', '0', '0', '0', '0', '0')"]
DEBUG 2017-07-14 09:32:51 NAME: insertFishGeneralExpensesDetail() ["SELECT oid, lineOfBusinessOid, opsMonthlyCalendarOid, salesIncome, otherIncome, purchases, (salesIncome+otherIncome-purchases) AS grossProfit,  generalExpenses, elecExpenses, (generalExpenses+elecExpenses) AS totGeneralExpenses, ( (salesIncome+otherIncome-purchases) - (generalExpenses+elecExpenses)) AS netProfit FROM fishpandl WHERE opsMonthlyCalendarOid IN (1,2,3,4,5,6,7,8,9,10,11,12)"]
DEBUG 2017-07-14 09:32:51 NAME: insertRowDetail() ["INSERT  INTO pandlpivot (`lineOfBusinessOid`, `header`, `m1`, `m2`, `m3`, `m4`, `m5`, `m6`, `m7`, `m8`, `m9`, `m10`, `m11`, `m12`)  VALUES ('1', 'GENERAL - Expenses', '13760', '51776', '13710', '53195', '46195', '79300', '370', '0', '0', '0', '0', '0')"]
DEBUG 2017-07-14 09:32:51 NAME: insertRowDetail() ["INSERT  INTO pandlpivot (`lineOfBusinessOid`, `header`, `m1`, `m2`, `m3`, `m4`, `m5`, `m6`, `m7`, `m8`, `m9`, `m10`, `m11`, `m12`)  VALUES ('1', 'GENERAL - Electricity', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0')"]
DEBUG 2017-07-14 09:32:51 NAME: insertRowDetail() ["INSERT  INTO pandlpivot (`lineOfBusinessOid`, `header`, `m1`, `m2`, `m3`, `m4`, `m5`, `m6`, `m7`, `m8`, `m9`, `m10`, `m11`, `m12`)  VALUES ('1', 'TOTAL GENERAL EXPENSES', '13760', '51776.03125', '13710', '53195', '46195', '79300', '370', '0', '0', '0', '0', '0')"]
DEBUG 2017-07-14 09:32:51 NAME: getOids() ["SELECT oid FROM fishpandl WHERE opsMonthlyCalendarOid IN (1,2,3,4,5,6,7,8,9,10,11,12)"]
DEBUG 2017-07-14 09:32:51 NAME: getOids() {"D":"85,86,87,88,89,90,91,92,93,94,95,96,"}
DEBUG 2017-07-14 09:32:51 NAME: insertFishNetProfit() ["SELECT fishpandl.oid, ((salesIncome + otherIncome - purchases) - (generalExpenses + elecExpenses) -(SUM(expenseAmount))) AS netProfit FROM fishpandl INNER JOIN fishpandllabourexpensedetail ON fishpandllabourexpensedetail.FishPandLOid = fishpandl.oid WHERE fishpandl.oid IN (85,86,87,88,89,90,91,92,93,94,95,96) GROUP BY fishpandl.oid"]
DEBUG 2017-07-14 09:32:51 NAME: insertRowDetail() ["INSERT  INTO pandlpivot (`lineOfBusinessOid`, `header`, `m1`, `m2`, `m3`, `m4`, `m5`, `m6`, `m7`, `m8`, `m9`, `m10`, `m11`, `m12`)  VALUES ('1', 'NET PROFIT', '-2798.0645141602', '-38394.740936279', '27896.93548584', '-58553.06451416', '-85443.709686279', '-145020.1612854', '-810', '0', '0', '0', '0', '0')"]
DEBUG 2017-07-14 09:32:51 NAME: loadPandLpivotGridHeader() ["SELECT CONCAT( opsmonthlycalendar.month, ' ', opsmonthlycalendar.year ) AS aMonth FROM opsmonthlycalendar WHERE year = YEAR(CURRENT_DATE) ORDER BY year ASC,monthNbr ASC "]
DEBUG 2017-07-14 09:32:51 NAME: loadPandLpivotGridDetail() ["SELECT `oid`,`header`, `m1`, `m2`, `m3`, `m4`, `m5`, `m6`, `m7`, `m8`, `m9`, `m10`, `m11`, `m12` FROM `pandlpivot` WHERE lineOfBusinessOid = 1"]
DEBUG 2017-07-14 09:32:51 NAME: loadPandLpivotGridDetail() [{"oid":706,"header":"INCOME - Sales","m1":22840,"m2":14000,"m3":42500,"m4":10000,"m5":700,"m6":880,"m7":0,"m8":0,"m9":0,"m10":0,"m11":0,"m12":0},{"oid":707,"header":"INCOME - Other","m1":0,"m2":0,"m3":0,"m4":0,"m5":0,"m6":0,"m7":0,"m8":0,"m9":0,"m10":0,"m11":0,"m12":0},{"oid":708,"header":"PURCHASES","m1":11160,"m2":0,"m3":0,"m4":13695,"m5":38700,"m6":65750,"m7":370,"m8":0,"m9":0,"m10":0,"m11":0,"m12":0},{"oid":709,"header":"GROSS PROFIT","m1":11680,"m2":14000,"m3":42500,"m4":-3695,"m5":-38000,"m6":-64870,"m7":-370,"m8":0,"m9":0,"m10":0,"m11":0,"m12":0},{"oid":710,"header":"DIRECTOR","m1":0,"m2":0,"m3":0,"m4":0,"m5":0,"m6":0,"m7":0,"m8":0,"m9":0,"m10":0,"m11":0,"m12":0},{"oid":711,"header":"DRIVER","m1":0,"m2":0,"m3":0,"m4":0,"m5":0,"m6":0,"m7":0,"m8":0,"m9":0,"m10":0,"m11":0,"m12":0},{"oid":712,"header":"FARM HAND","m1":0,"m2":140,"m3":0,"m4":105,"m5":385,"m6":350,"m7":35,"m8":0,"m9":0,"m10":0,"m11":0,"m12":0},{"oid":713,"header":"GARDENER","m1":0,"m2":0,"m3":0,"m4":0,"m5":0,"m6":0,"m7":0,"m8":0,"m9":0,"m10":0,"m11":0,"m12":0},{"oid":714,"header":"HOUSEHELP","m1":0,"m2":0,"m3":0,"m4":0,"m5":0,"m6":0,"m7":0,"m8":0,"m9":0,"m10":0,"m11":0,"m12":0},{"oid":715,"header":"MILK MAN","m1":0,"m2":0,"m3":0,"m4":0,"m5":0,"m6":0,"m7":0,"m8":0,"m9":0,"m10":0,"m11":0,"m12":0},{"oid":716,"header":"OPS MANAGER","m1":0,"m2":0,"m3":0,"m4":0,"m5":0,"m6":0,"m7":0,"m8":0,"m9":0,"m10":0,"m11":0,"m12":0},{"oid":717,"header":"SECURITY","m1":210,"m2":140,"m3":385,"m4":1015,"m5":525,"m6":105,"m7":35,"m8":0,"m9":0,"m10":0,"m11":0,"m12":0},{"oid":718,"header":"SUPERVISOR","m1":508.065,"m2":338.71,"m3":508.065,"m4":508.065,"m5":338.71,"m6":395.161,"m7":0,"m8":0,"m9":0,"m10":0,"m11":0,"m12":0},{"oid":719,"header":"TEA PICKER","m1":0,"m2":0,"m3":0,"m4":35,"m5":0,"m6":0,"m7":0,"m8":0,"m9":0,"m10":0,"m11":0,"m12":0},{"oid":720,"header":"TOTAL LABOUR EXPENSES","m1":718.065,"m2":618.71,"m3":893.065,"m4":1663.06,"m5":1248.71,"m6":850.161,"m7":70,"m8":0,"m9":0,"m10":0,"m11":0,"m12":0},{"oid":721,"header":"GENERAL - Expenses","m1":13760,"m2":51776,"m3":13710,"m4":53195,"m5":46195,"m6":79300,"m7":370,"m8":0,"m9":0,"m10":0,"m11":0,"m12":0},{"oid":722,"header":"GENERAL - Electricity","m1":0,"m2":0,"m3":0,"m4":0,"m5":0,"m6":0,"m7":0,"m8":0,"m9":0,"m10":0,"m11":0,"m12":0},{"oid":723,"header":"TOTAL GENERAL EXPENSES","m1":13760,"m2":51776,"m3":13710,"m4":53195,"m5":46195,"m6":79300,"m7":370,"m8":0,"m9":0,"m10":0,"m11":0,"m12":0},{"oid":724,"header":"NET PROFIT","m1":-2798.06,"m2":-38394.7,"m3":27896.9,"m4":-58553.1,"m5":-85443.7,"m6":-145020,"m7":-810,"m8":0,"m9":0,"m10":0,"m11":0,"m12":0}]
DEBUG 2017-07-14 09:32:51 NAME: get_fish_PandL_pivot_data_xml {"END":"---------------------------------------[get_fish_PandL_pivot_data_xml]---------------------------------------------------"}
DEBUG 2017-07-14 09:32:51 NAME: get_PandL_income_data_xml {"END":"---------------------------------------[get_PandL_income_data_xml]---------------------------------------------------"}
DEBUG 2017-07-14 09:34:42 NAME: get_emp_data_xml {"":""}
DEBUG 2017-07-14 09:34:42 NAME: get_emp_data_xml {"START":"---------------------------------------[get_emp_data_xml]---------------------------------------------------"}
DEBUG 2017-07-14 09:34:43 NAME: loadEmployeeMasterRollGrid() ["SELECT employee.oid, firstName, middleInitial, lastName, role, nationalID, mobileNbr, resident, elecDeduction, ePayment, active, startDt, `terminated`, gender, salary.employeetype AS empType FROM employee INNER JOIN employeerole ON employeerole.employeeOid = employee.oid INNER JOIN employeeroletype ON employeeroletype.oid = employeerole.employeeRoleTypeOid INNER JOIN salary on salary.employeeOid = employee.oid ORDER BY firstName, lastName, nationalID "]
DEBUG 2017-07-14 09:34:43 NAME: get_emp_data_xml {"END":"---------------------------------------[get_emp_data_xml]---------------------------------------------------"}
DEBUG 2017-07-14 09:35:01 NAME: get_emp_termination_reasons_options {"":""}
DEBUG 2017-07-14 09:35:01 NAME: get_emp_termination_reasons_options {"START":"---------------------------------------[get_emp_termination_reasons_options]---------------------------------------------------"}
DEBUG 2017-07-14 09:35:01 NAME: loadTerminationReasons() ["SELECT oid, type, description FROM EmployeeTerminationType"]
DEBUG 2017-07-14 09:35:01 NAME: loadTerminationReasons() [{"oid":1,"type":"FIRED","description":"Employee fired for valid reasons"},{"oid":2,"type":"QUIT","description":"Employee quit of own accord"},{"oid":3,"type":"ROLE CHANGE","description":"Employee changed role"}]
DEBUG 2017-07-14 09:35:01 NAME: get_emp_termination_reasons_options {"END":"---------------------------------------[get_emp_termination_reasons_options]---------------------------------------------------"}
DEBUG 2017-07-14 09:35:01 NAME: load_emp_termination_data_xml {"":""}
DEBUG 2017-07-14 09:35:01 NAME: load_emp_termination_data_xml {"START":"---------------------------------------[load_emp_termination_data_xml]---------------------------------------------------"}
DEBUG 2017-07-14 09:35:01 NAME: _GET {"empOid":"52","empType":"C","dhxr1500017701761":"1"}
DEBUG 2017-07-14 09:35:01 NAME: getBasicTerminationEmployeeData() ["SELECT oid, firstName, middleInitial, lastName, nationalID, mobileNbr, resident, elecDeduction, ePayment, active, startDt, gender, comment FROM employee WHERE oid = 52 "]
DEBUG 2017-07-14 09:35:01 NAME: getBasicTerminationEmployeeData() [{"oid":52,"firstName":"Joseph","middleInitial":"X","lastName":"Onyango","nationalID":"111111111","mobileNbr":"0720000000","resident":1,"elecDeduction":1,"ePayment":0,"active":1,"startDt":"2017-01-01","gender":"M","comment":null}]
DEBUG 2017-07-14 09:35:01 NAME: load_emp_termination_data_xml {"END":"---------------------------------------[load_emp_termination_data_xml]---------------------------------------------------"}
DEBUG 2017-07-14 09:35:27 NAME: load_emp_termination_data_xml {"":""}
DEBUG 2017-07-14 09:35:27 NAME: load_emp_termination_data_xml {"START":"---------------------------------------[load_emp_termination_data_xml]---------------------------------------------------"}
DEBUG 2017-07-14 09:35:27 NAME: _GET {"empOid":"52","generatePayslip":"1","validateTerminationDt":"1","tDate":"2017-02-02","empType":"C","gratuityAmt":"0","terminationComments":"Changed role from Milk Man to tea picker","gratuityComments":""}
DEBUG 2017-07-14 09:35:27 NAME: validateTerminationDate() ["SELECT COUNT(*) AS count FROM attendance WHERE employeeOid = 52 AND attendanceDt > '2017-02-02' AND attendance_in = 1 "]
DEBUG 2017-07-14 09:35:27 NAME: validateTerminationDate() [{"count":100}]
DEBUG 2017-07-14 09:35:27 NAME: load_emp_termination_data_xml {"ERROR THROWN: ":"Attendance records exist post termination date [- 2017-02-02 -]"}
DEBUG 2017-07-14 09:35:27 NAME: loadErrorPopup() {"FORM ERROR: ":"Attendance records exist post termination date [- 2017-02-02 -]"}
DEBUG 2017-07-14 09:35:41 NAME: get_attendance_data_xml {"":""}
DEBUG 2017-07-14 09:35:41 NAME: get_attendance_data_xml {"START":"---------------------------------------[get_attendance_data_xml]---------------------------------------------------"}
DEBUG 2017-07-14 09:35:41 NAME: $date {"date":null}
DEBUG 2017-07-14 09:35:41 NAME: getMaxAttendanceDt() ["SELECT DATE(MAX(attendanceDt)) AS maxDate, DATE_ADD(DATE(MAX(attendanceDt)), INTERVAL 1 DAY) AS nextDate FROM attendance "]
DEBUG 2017-07-14 09:35:41 NAME: getMaxAttendanceDt() [{"maxDate":"2017-07-09","nextDate":"2017-07-10"}]
DEBUG 2017-07-14 09:35:41 NAME: DATE {"date":"2017-07-09"}
DEBUG 2017-07-14 09:35:41 NAME: loadAttendanceGrid() ["SELECT CONCAT(firstName, ' ', middleInitial, ' ', lastName) AS employeeName, attendanceDt, attendance_in, attendance.oid as aid FROM attendance LEFT JOIN employee ON employee.oid = attendance.employeeOid WHERE attendanceDt = '2017-07-09' AND employee.active='1' ORDER BY firstName ASC, middleInitial ASC, lastName ASC"]
DEBUG 2017-07-14 09:35:41 NAME: get_attendance_data_xml {"END":"---------------------------------------[get_attendance_data_xml]---------------------------------------------------"}
DEBUG 2017-07-14 09:35:56 NAME: get_attendance_data_xml {"":""}
DEBUG 2017-07-14 09:35:56 NAME: get_attendance_data_xml {"START":"---------------------------------------[get_attendance_data_xml]---------------------------------------------------"}
DEBUG 2017-07-14 09:35:56 NAME: $date {"date":"2017\/07\/01"}
DEBUG 2017-07-14 09:35:56 NAME: loadAttendanceGrid() ["SELECT CONCAT(firstName, ' ', middleInitial, ' ', lastName) AS employeeName, attendanceDt, attendance_in, attendance.oid as aid FROM attendance LEFT JOIN employee ON employee.oid = attendance.employeeOid WHERE attendanceDt = '2017-07-01' AND employee.active='1' ORDER BY firstName ASC, middleInitial ASC, lastName ASC"]
DEBUG 2017-07-14 09:35:56 NAME: get_attendance_data_xml {"END":"---------------------------------------[get_attendance_data_xml]---------------------------------------------------"}
DEBUG 2017-07-14 09:36:04 NAME: update_attendance_row()  {"editing":"true","gr_id":"12377","c0":"Joseph X Onyango","c1":"0","!nativeeditor_status":"updated","dhxr1500017764248":"1"}
DEBUG 2017-07-14 09:36:04 NAME: update_attendance_row()  ["UPDATE attendance SET `attendance_in` = '0' WHERE  oid = '12377' "]
DEBUG 2017-07-14 09:36:04 NAME: update_attendance== ["error","12377","12377","Employee has TEA PICKING Records for this day. You MUST set weight = o before setting attendance to absent"]
DEBUG 2017-07-14 09:36:04 NAME: get_attendance_data_xml {"":""}
DEBUG 2017-07-14 09:36:04 NAME: get_attendance_data_xml {"START":"---------------------------------------[get_attendance_data_xml]---------------------------------------------------"}
DEBUG 2017-07-14 09:36:04 NAME: $date {"date":null}
DEBUG 2017-07-14 09:36:04 NAME: getMaxAttendanceDt() ["SELECT DATE(MAX(attendanceDt)) AS maxDate, DATE_ADD(DATE(MAX(attendanceDt)), INTERVAL 1 DAY) AS nextDate FROM attendance "]
DEBUG 2017-07-14 09:36:04 NAME: getMaxAttendanceDt() [{"maxDate":"2017-07-09","nextDate":"2017-07-10"}]
DEBUG 2017-07-14 09:36:04 NAME: DATE {"date":"2017-07-09"}
DEBUG 2017-07-14 09:36:04 NAME: loadAttendanceGrid() ["SELECT CONCAT(firstName, ' ', middleInitial, ' ', lastName) AS employeeName, attendanceDt, attendance_in, attendance.oid as aid FROM attendance LEFT JOIN employee ON employee.oid = attendance.employeeOid WHERE attendanceDt = '2017-07-09' AND employee.active='1' ORDER BY firstName ASC, middleInitial ASC, lastName ASC"]
DEBUG 2017-07-14 09:36:04 NAME: get_attendance_data_xml {"END":"---------------------------------------[get_attendance_data_xml]---------------------------------------------------"}
DEBUG 2017-07-14 09:36:56 NAME: get_teapickinggrid_data_xml {"":""}
DEBUG 2017-07-14 09:36:56 NAME: get_teapickinggrid_data_xml {"START":"---------------------------------------[get_teapickinggrid_data_xml]---------------------------------------------------"}
DEBUG 2017-07-14 09:36:56 NAME: getTeaPickingData() ["SELECT teapicking.oid AS tpOid, CONCAT(employee.firstName,' ', employee.middleInitial, ' ', employee.lastName) AS employeeName, attendanceDt, attendance.oid as aOid, weight, name AS blockNm, teaBlock_oid FROM employee  INNER JOIN attendance ON employee.oid = attendance.employeeOid INNER JOIN teapicking ON teapicking.attendanceOid = attendance.oid  INNER JOIN teaBlock ON teablock.oid = teapicking.teaBlock_oid INNER JOIN (employeerole, employeeroletype) ON (employee.oid = employeerole.employeeOid AND employeerole.employeeRoleTypeOid = employeeroletype.oid) WHERE attendanceDt = '2017-07-14' AND employeeroletype.role = 'TEA PICKER' ORDER BY firstName, lastName"]
DEBUG 2017-07-14 09:36:56 NAME: getTeaBlocksList() ["SELECT * FROM teablock"]
DEBUG 2017-07-14 09:36:56 NAME: get_teapickinggrid_data_xml {"ERROR THROWN: ":"Employee attendance for selected date missing"}
DEBUG 2017-07-14 09:36:56 NAME: loadErrorGrid() {"ERROR THROWN 3: ":"Employee attendance for selected date missing"}
DEBUG 2017-07-14 09:36:59 NAME: get_teapickinggrid_data_xml {"":""}
DEBUG 2017-07-14 09:36:59 NAME: get_teapickinggrid_data_xml {"START":"---------------------------------------[get_teapickinggrid_data_xml]---------------------------------------------------"}
DEBUG 2017-07-14 09:36:59 NAME: getTeaPickingData() ["SELECT teapicking.oid AS tpOid, CONCAT(employee.firstName,' ', employee.middleInitial, ' ', employee.lastName) AS employeeName, attendanceDt, attendance.oid as aOid, weight, name AS blockNm, teaBlock_oid FROM employee  INNER JOIN attendance ON employee.oid = attendance.employeeOid INNER JOIN teapicking ON teapicking.attendanceOid = attendance.oid  INNER JOIN teaBlock ON teablock.oid = teapicking.teaBlock_oid INNER JOIN (employeerole, employeeroletype) ON (employee.oid = employeerole.employeeOid AND employeerole.employeeRoleTypeOid = employeeroletype.oid) WHERE attendanceDt = '2017-07-01' AND employeeroletype.role = 'TEA PICKER' ORDER BY firstName, lastName"]
DEBUG 2017-07-14 09:36:59 NAME: getTeaBlocksList() ["SELECT * FROM teablock"]
DEBUG 2017-07-14 09:36:59 NAME: get_teapickinggrid_data_xml {"END":"---------------------------------------[get_teapickinggrid_data_xml]---------------------------------------------------"}
DEBUG 2017-07-14 09:37:20 NAME: get_attendance_data_xml {"":""}
DEBUG 2017-07-14 09:37:20 NAME: get_attendance_data_xml {"START":"---------------------------------------[get_attendance_data_xml]---------------------------------------------------"}
DEBUG 2017-07-14 09:37:20 NAME: $date {"date":null}
DEBUG 2017-07-14 09:37:20 NAME: getMaxAttendanceDt() ["SELECT DATE(MAX(attendanceDt)) AS maxDate, DATE_ADD(DATE(MAX(attendanceDt)), INTERVAL 1 DAY) AS nextDate FROM attendance "]
DEBUG 2017-07-14 09:37:20 NAME: getMaxAttendanceDt() [{"maxDate":"2017-07-09","nextDate":"2017-07-10"}]
DEBUG 2017-07-14 09:37:20 NAME: DATE {"date":"2017-07-09"}
DEBUG 2017-07-14 09:37:20 NAME: loadAttendanceGrid() ["SELECT CONCAT(firstName, ' ', middleInitial, ' ', lastName) AS employeeName, attendanceDt, attendance_in, attendance.oid as aid FROM attendance LEFT JOIN employee ON employee.oid = attendance.employeeOid WHERE attendanceDt = '2017-07-09' AND employee.active='1' ORDER BY firstName ASC, middleInitial ASC, lastName ASC"]
DEBUG 2017-07-14 09:37:20 NAME: get_attendance_data_xml {"END":"---------------------------------------[get_attendance_data_xml]---------------------------------------------------"}
DEBUG 2017-07-14 09:37:23 NAME: get_attendance_data_xml {"":""}
DEBUG 2017-07-14 09:37:23 NAME: get_attendance_data_xml {"START":"---------------------------------------[get_attendance_data_xml]---------------------------------------------------"}
DEBUG 2017-07-14 09:37:23 NAME: $date {"date":"2017\/07\/01"}
DEBUG 2017-07-14 09:37:23 NAME: loadAttendanceGrid() ["SELECT CONCAT(firstName, ' ', middleInitial, ' ', lastName) AS employeeName, attendanceDt, attendance_in, attendance.oid as aid FROM attendance LEFT JOIN employee ON employee.oid = attendance.employeeOid WHERE attendanceDt = '2017-07-01' AND employee.active='1' ORDER BY firstName ASC, middleInitial ASC, lastName ASC"]
DEBUG 2017-07-14 09:37:23 NAME: get_attendance_data_xml {"END":"---------------------------------------[get_attendance_data_xml]---------------------------------------------------"}
DEBUG 2017-07-14 09:37:31 NAME: update_attendance_row()  {"editing":"true","gr_id":"12377","c0":"Joseph X Onyango","c1":"0","!nativeeditor_status":"updated","dhxr1500017851162":"1"}
DEBUG 2017-07-14 09:37:31 NAME: update_attendance_row()  ["UPDATE attendance SET `attendance_in` = '0' WHERE  oid = '12377' "]
DEBUG 2017-07-14 09:37:31 NAME: update_attendance== ["error","12377","12377","Employee has TEA PICKING Records for this day. You MUST set weight = o before setting attendance to absent"]
DEBUG 2017-07-14 09:37:31 NAME: get_attendance_data_xml {"":""}
DEBUG 2017-07-14 09:37:31 NAME: get_attendance_data_xml {"START":"---------------------------------------[get_attendance_data_xml]---------------------------------------------------"}
DEBUG 2017-07-14 09:37:31 NAME: $date {"date":null}
DEBUG 2017-07-14 09:37:31 NAME: getMaxAttendanceDt() ["SELECT DATE(MAX(attendanceDt)) AS maxDate, DATE_ADD(DATE(MAX(attendanceDt)), INTERVAL 1 DAY) AS nextDate FROM attendance "]
DEBUG 2017-07-14 09:37:31 NAME: getMaxAttendanceDt() [{"maxDate":"2017-07-09","nextDate":"2017-07-10"}]
DEBUG 2017-07-14 09:37:31 NAME: DATE {"date":"2017-07-09"}
DEBUG 2017-07-14 09:37:31 NAME: loadAttendanceGrid() ["SELECT CONCAT(firstName, ' ', middleInitial, ' ', lastName) AS employeeName, attendanceDt, attendance_in, attendance.oid as aid FROM attendance LEFT JOIN employee ON employee.oid = attendance.employeeOid WHERE attendanceDt = '2017-07-09' AND employee.active='1' ORDER BY firstName ASC, middleInitial ASC, lastName ASC"]
DEBUG 2017-07-14 09:37:31 NAME: get_attendance_data_xml {"END":"---------------------------------------[get_attendance_data_xml]---------------------------------------------------"}
DEBUG 2017-07-14 09:37:35 NAME: get_teapickinggrid_data_xml {"":""}
DEBUG 2017-07-14 09:37:35 NAME: get_teapickinggrid_data_xml {"START":"---------------------------------------[get_teapickinggrid_data_xml]---------------------------------------------------"}
DEBUG 2017-07-14 09:37:35 NAME: getTeaPickingData() ["SELECT teapicking.oid AS tpOid, CONCAT(employee.firstName,' ', employee.middleInitial, ' ', employee.lastName) AS employeeName, attendanceDt, attendance.oid as aOid, weight, name AS blockNm, teaBlock_oid FROM employee  INNER JOIN attendance ON employee.oid = attendance.employeeOid INNER JOIN teapicking ON teapicking.attendanceOid = attendance.oid  INNER JOIN teaBlock ON teablock.oid = teapicking.teaBlock_oid INNER JOIN (employeerole, employeeroletype) ON (employee.oid = employeerole.employeeOid AND employeerole.employeeRoleTypeOid = employeeroletype.oid) WHERE attendanceDt = '2017-07-14' AND employeeroletype.role = 'TEA PICKER' ORDER BY firstName, lastName"]
DEBUG 2017-07-14 09:37:35 NAME: getTeaBlocksList() ["SELECT * FROM teablock"]
DEBUG 2017-07-14 09:37:35 NAME: get_teapickinggrid_data_xml {"ERROR THROWN: ":"Employee attendance for selected date missing"}
DEBUG 2017-07-14 09:37:35 NAME: loadErrorGrid() {"ERROR THROWN 3: ":"Employee attendance for selected date missing"}
DEBUG 2017-07-14 09:37:37 NAME: get_teapickinggrid_data_xml {"":""}
DEBUG 2017-07-14 09:37:37 NAME: get_teapickinggrid_data_xml {"START":"---------------------------------------[get_teapickinggrid_data_xml]---------------------------------------------------"}
DEBUG 2017-07-14 09:37:37 NAME: getTeaPickingData() ["SELECT teapicking.oid AS tpOid, CONCAT(employee.firstName,' ', employee.middleInitial, ' ', employee.lastName) AS employeeName, attendanceDt, attendance.oid as aOid, weight, name AS blockNm, teaBlock_oid FROM employee  INNER JOIN attendance ON employee.oid = attendance.employeeOid INNER JOIN teapicking ON teapicking.attendanceOid = attendance.oid  INNER JOIN teaBlock ON teablock.oid = teapicking.teaBlock_oid INNER JOIN (employeerole, employeeroletype) ON (employee.oid = employeerole.employeeOid AND employeerole.employeeRoleTypeOid = employeeroletype.oid) WHERE attendanceDt = '2017-07-01' AND employeeroletype.role = 'TEA PICKER' ORDER BY firstName, lastName"]
DEBUG 2017-07-14 09:37:37 NAME: getTeaBlocksList() ["SELECT * FROM teablock"]
DEBUG 2017-07-14 09:37:37 NAME: get_teapickinggrid_data_xml {"END":"---------------------------------------[get_teapickinggrid_data_xml]---------------------------------------------------"}
DEBUG 2017-07-14 09:38:11 NAME: get_attendance_data_xml {"":""}
DEBUG 2017-07-14 09:38:11 NAME: get_attendance_data_xml {"START":"---------------------------------------[get_attendance_data_xml]---------------------------------------------------"}
DEBUG 2017-07-14 09:38:11 NAME: $date {"date":null}
DEBUG 2017-07-14 09:38:11 NAME: getMaxAttendanceDt() ["SELECT DATE(MAX(attendanceDt)) AS maxDate, DATE_ADD(DATE(MAX(attendanceDt)), INTERVAL 1 DAY) AS nextDate FROM attendance "]
DEBUG 2017-07-14 09:38:11 NAME: getMaxAttendanceDt() [{"maxDate":"2017-07-09","nextDate":"2017-07-10"}]
DEBUG 2017-07-14 09:38:11 NAME: DATE {"date":"2017-07-09"}
DEBUG 2017-07-14 09:38:11 NAME: loadAttendanceGrid() ["SELECT CONCAT(firstName, ' ', middleInitial, ' ', lastName) AS employeeName, attendanceDt, attendance_in, attendance.oid as aid FROM attendance LEFT JOIN employee ON employee.oid = attendance.employeeOid WHERE attendanceDt = '2017-07-09' AND employee.active='1' ORDER BY firstName ASC, middleInitial ASC, lastName ASC"]
DEBUG 2017-07-14 09:38:11 NAME: get_attendance_data_xml {"END":"---------------------------------------[get_attendance_data_xml]---------------------------------------------------"}
DEBUG 2017-07-14 09:38:13 NAME: get_attendance_data_xml {"":""}
DEBUG 2017-07-14 09:38:13 NAME: get_attendance_data_xml {"START":"---------------------------------------[get_attendance_data_xml]---------------------------------------------------"}
DEBUG 2017-07-14 09:38:13 NAME: $date {"date":"2017\/07\/01"}
DEBUG 2017-07-14 09:38:13 NAME: loadAttendanceGrid() ["SELECT CONCAT(firstName, ' ', middleInitial, ' ', lastName) AS employeeName, attendanceDt, attendance_in, attendance.oid as aid FROM attendance LEFT JOIN employee ON employee.oid = attendance.employeeOid WHERE attendanceDt = '2017-07-01' AND employee.active='1' ORDER BY firstName ASC, middleInitial ASC, lastName ASC"]
DEBUG 2017-07-14 09:38:13 NAME: get_attendance_data_xml {"END":"---------------------------------------[get_attendance_data_xml]---------------------------------------------------"}
DEBUG 2017-07-14 09:38:21 NAME: update_attendance_row()  {"editing":"true","gr_id":"12377","c0":"Joseph X Onyango","c1":"0","!nativeeditor_status":"updated","dhxr1500017901202":"1"}
DEBUG 2017-07-14 09:38:21 NAME: update_attendance_row()  ["UPDATE attendance SET `attendance_in` = '0' WHERE  oid = '12377' "]
DEBUG 2017-07-14 09:38:21 NAME: update_attendance== ["error","12377","12377","Employee has TEA PICKING Records for this day. You MUST set weight = o before setting attendance to absent"]
DEBUG 2017-07-14 09:38:21 NAME: get_attendance_data_xml {"":""}
DEBUG 2017-07-14 09:38:21 NAME: get_attendance_data_xml {"START":"---------------------------------------[get_attendance_data_xml]---------------------------------------------------"}
DEBUG 2017-07-14 09:38:21 NAME: $date {"date":null}
DEBUG 2017-07-14 09:38:21 NAME: getMaxAttendanceDt() ["SELECT DATE(MAX(attendanceDt)) AS maxDate, DATE_ADD(DATE(MAX(attendanceDt)), INTERVAL 1 DAY) AS nextDate FROM attendance "]
DEBUG 2017-07-14 09:38:21 NAME: getMaxAttendanceDt() [{"maxDate":"2017-07-09","nextDate":"2017-07-10"}]
DEBUG 2017-07-14 09:38:21 NAME: DATE {"date":"2017-07-09"}
DEBUG 2017-07-14 09:38:21 NAME: loadAttendanceGrid() ["SELECT CONCAT(firstName, ' ', middleInitial, ' ', lastName) AS employeeName, attendanceDt, attendance_in, attendance.oid as aid FROM attendance LEFT JOIN employee ON employee.oid = attendance.employeeOid WHERE attendanceDt = '2017-07-09' AND employee.active='1' ORDER BY firstName ASC, middleInitial ASC, lastName ASC"]
DEBUG 2017-07-14 09:38:21 NAME: get_attendance_data_xml {"END":"---------------------------------------[get_attendance_data_xml]---------------------------------------------------"}
DEBUG 2017-07-14 14:05:08 NAME: get_emp_employement_role_options {"":""}
DEBUG 2017-07-14 14:05:08 NAME: get_emp_employement_role_options {"START":"---------------------------------------[get_emp_employement_role_options]---------------------------------------------------"}
DEBUG 2017-07-14 14:05:08 NAME: get_lineOfBusiness_options {"":""}
DEBUG 2017-07-14 14:05:08 NAME: get_lineOfBusiness_options {"START":"---------------------------------------[get_lineOfBusiness_options]---------------------------------------------------"}
DEBUG 2017-07-14 14:05:08 NAME: get_salary_freq_type_options {"":""}
"}
DEBUG 2017-07-14 14:05:08 NAME: get_emp_employement_type_options {"START":"---------------------------------------[get_emp_employement_type_options]---------------------------------------------------"}
DEBUG 2017-07-14 14:05:08 NAME: get_salary_freq_type_options {"START":"---------------------------------------[get_salary_freq_type_options]---------------------------------------------------"}
DEBUG 2017-07-14 14:05:08 NAME: loadEmpRoleOptiions() ["SELECT oid, role, description FROM employeeroletype ORDER BY role"]
DEBUG 2017-07-14 14:05:08 NAME: loadEmpRoleOptiions() [{"oid":4,"role":"DIRECTOR","description":"Director"},{"oid":9,"role":"DRIVER","description":"Driver"},{"oid":8,"role":"FARM HAND","description":"General worker. Works on the farm at various chores other than those specified by roles"},{"oid":6,"role":"GARDENER","description":"Compound gardener"},{"oid":5,"role":"HOUSEHELP","description":"Househelp"},{"oid":10,"role":"MILK MAN","description":"Dairy section labourer"},{"oid":3,"role":"OPS MANAGER","description":"Manages other workers"},{"oid":7,"role":"SECURITY","description":"All round security"},{"oid":2,"role":"SUPERVISOR","description":"Supervises other workers"},{"oid":1,"role":"TEA PICKER","description":"Picks Tea"}]
DEBUG 2017-07-14 14:05:08 NAME: get_emp_employement_role_options {"END":"---------------------------------------[get_emp_employement_role_options]---------------------------------------------------"}
DEBUG 2017-07-14 14:05:08 NAME: loadEmpTypeOptions() ["SELECT type, description FROM EmployeeType"]
DEBUG 2017-07-14 14:05:08 NAME: loadEmpTypeOptions() [{"type":"C","description":"CASUAL LABOURER"},{"type":"F","description":"CONTRACT LABOURER"},{"type":"S","description":"SALARIED LABOURER"}]
DEBUG 2017-07-14 14:05:08 NAME: get_emp_employement_type_options {"END":"---------------------------------------[get_emp_employement_type_options]---------------------------------------------------"}
DEBUG 2017-07-14 14:05:08 NAME: getSalaryFrequency() ["SELECT type, description FROM SalaryType"]
DEBUG 2017-07-14 14:05:08 NAME: getSalaryFrequency() [{"type":"C","description":"CONTRACT\/FIXED"},{"type":"D","description":"DAILY"},{"type":"H","description":"HOURLY"},{"type":"M","description":"MONTHLY"},{"type":"W","description":"WEEKLY"}]
DEBUG 2017-07-14 14:05:08 NAME: get_salary_freq_type_options {"END":"---------------------------------------[get_salary_freq_type_options]---------------------------------------------------"}
DEBUG 2017-07-14 14:05:08 NAME: getLOBoptions() ["SELECT oid, department FROM LineOfBusiness ORDER BY department"]
DEBUG 2017-07-14 14:05:08 NAME: getLOBoptions() [{"oid":5,"department":"CONSTRUCTION"},{"oid":4,"department":"DAIRY"},{"oid":8,"department":"DSQ"},{"oid":1,"department":"FISH"},{"oid":6,"department":"GENERAL"},{"oid":3,"department":"HORTICULTURE"},{"oid":9,"department":"HORTICULTURE-GREENHOUSE"},{"oid":7,"department":"HORTICULTURE-KARANJA"},{"oid":12,"department":"HORTICULTURE-NJOGU"},{"oid":2,"department":"MUSHROOM"},{"oid":11,"department":"OTHER"},{"oid":10,"department":"TEA"}]
DEBUG 2017-07-14 14:05:08 NAME: get_lineOfBusiness_options {"END":"---------------------------------------[get_lineOfBusiness_options]---------------------------------------------------"}
DEBUG 2017-07-14 14:06:04 NAME: get_emp_data_xml {"":""}
DEBUG 2017-07-14 14:06:04 NAME: get_emp_data_xml {"START":"---------------------------------------[get_emp_data_xml]---------------------------------------------------"}
DEBUG 2017-07-14 14:06:04 NAME: loadEmployeeMasterRollGrid() ["SELECT employee.oid, firstName, middleInitial, lastName, role, nationalID, mobileNbr, resident, elecDeduction, ePayment, active, startDt, `terminated`, gender, salary.employeetype AS empType FROM employee INNER JOIN employeerole ON employeerole.employeeOid = employee.oid INNER JOIN employeeroletype ON employeeroletype.oid = employeerole.employeeRoleTypeOid INNER JOIN salary on salary.employeeOid = employee.oid ORDER BY firstName, lastName, nationalID "]
DEBUG 2017-07-14 14:06:04 NAME: get_emp_data_xml {"END":"---------------------------------------[get_emp_data_xml]---------------------------------------------------"}
DEBUG 2017-07-14 14:10:11 NAME: get_emp_data_xml {"":""}
DEBUG 2017-07-14 14:10:11 NAME: get_emp_data_xml {"START":"---------------------------------------[get_emp_data_xml]---------------------------------------------------"}
DEBUG 2017-07-14 14:10:11 NAME: loadEmployeeMasterRollGrid() ["SELECT employee.oid, firstName, middleInitial, lastName, role, nationalID, mobileNbr, resident, elecDeduction, ePayment, active, startDt, `terminated`, gender, salary.employeetype AS empType FROM employee INNER JOIN employeerole ON employeerole.employeeOid = employee.oid INNER JOIN employeeroletype ON employeeroletype.oid = employeerole.employeeRoleTypeOid INNER JOIN salary on salary.employeeOid = employee.oid ORDER BY firstName, lastName, nationalID "]
DEBUG 2017-07-14 14:10:11 NAME: get_emp_data_xml {"END":"---------------------------------------[get_emp_data_xml]---------------------------------------------------"}
DEBUG 2017-07-14 14:15:44 NAME: get_emp_data_xml {"":""}
DEBUG 2017-07-14 14:15:44 NAME: get_emp_data_xml {"START":"---------------------------------------[get_emp_data_xml]---------------------------------------------------"}
DEBUG 2017-07-14 14:15:44 NAME: loadEmployeeMasterRollGrid() ["SELECT employee.oid, firstName, middleInitial, lastName, role, nationalID, mobileNbr, resident, elecDeduction, ePayment, active, startDt, `terminated`, gender, salary.employeetype AS empType FROM employee INNER JOIN employeerole ON employeerole.employeeOid = employee.oid INNER JOIN employeeroletype ON employeeroletype.oid = employeerole.employeeRoleTypeOid INNER JOIN salary on salary.employeeOid = employee.oid ORDER BY firstName, lastName, nationalID "]
DEBUG 2017-07-14 14:15:44 NAME: get_emp_data_xml {"END":"---------------------------------------[get_emp_data_xml]---------------------------------------------------"}
