<?php
if (! defined('DIRECTACESS')) exit('No direct script access allowed');
$log = "";
if(!isset($allowLog))
	$allowLog = true;

function is_clean($str, $no_space = false, $only_alphanumeric = true) {
    //No attacks and No special characters and No spaces
    logging("check variable : $str, check include spaces : $no_space, check only alphanumeric : $only_alphanumeric ");
    $str = strtolower($str);
    // dangrous special characters

    $specials = array("\x00", '\\', "\0", "\n", "\r", "'", '"', "\x1a", "<", ">");
    foreach ($specials as $val) {
        if (strstr($str, $val)) {
            logging("result Invalid reason : string $str includs harmful special chracters");
            return false;
        }
    }

    //No speacial chracters except the members existed in the $allowed array
    if ($only_alphanumeric == true) {
        $edited_str = $str;
        $allowed = array("-", "_", "@", ".", ",", "#", " ", "-", "/", "|c");
        foreach ($allowed as $v) {
            $edited_str = str_replace($v, "", $edited_str);
        }

        if (ctype_alnum($edited_str) != true) {
            logging("result Invalid reason :  string $str includes special characters");
            return false;
        }
    }

    // No spaces
    if (strstr($str, " ") && $no_space == true) {
        logging("result Invalid reason : string $str contains spaces");
        return false;
    }
    logging("string $str valid");
    return true;
}

function is_exist($var) {
    if (isset($var) && !empty($var))
        return true;
    else
        return false;
}

function array_row_count($arr) {
    if (function_exists(array_column)) {
        return array_column($arr);
    } else {
        return count($arr[0]);
    }
}

function is_date($str) {
    $stamp = strtotime($str);
    if (!is_numeric($stamp))
        return FALSE;
    $month = date('m', $stamp);
    $day = date('d', $stamp);
    $year = date('Y', $stamp);
    if (checkdate($month, $day, $year))
        return TRUE;
    return FALSE;
}

function logging($str) {
    global $log, $allowLog;
    $Request_date = date('D, d M Y H:i:s');
	if($allowLog){
		$log .= $str ."---------". $Request_date."\r\n";
        }
}

function send_log_info()
{
    global $log, $allowLog, $maintainance_email;
    $version = phpversion();
	if($allowLog && isset($_GET["debug_mode_6"]) && $_GET["debug_mode_6"] == "1701" &&!empty($maintainance_email)&&  filter_var($maintainance_email,FILTER_VALIDATE_EMAIL))
	{
		$message = '';
		
		$message .= "Hello,\n \n";
		$message .= "This message is sent automatically from your own server (based on your request) for troubleshooting a problem in a pivot table generated by a full version of MySQL Pivot table generator installed on your own server. \n \n";
		$message .= "The following is a log of all processes done for generating the pivot table, please send this log via our support system to help our team understanding the problem(s) correctly.\n\n";
                $message .= "PHP Version : $version ****\n\n";
		$message .= "\n ****** The start  of the log  *****\n\n$log\n*** The End of the log ****\n\n";
		$message .= "\n\n\nPlease note that :\n\nIn order to stop receiving the same message again please open the config file of the generated pivot table and remove this email address  from the maintainance_email by making it like the following :\n";
		$message .= 'maintainance_email = "";';
		
		@mail($maintainance_email, "Pivot table Generator Troubleshooting", $message);
		
			/*if(file_exists("mail.txt")) 
				unlink("mail.txt");
			$fp = fopen("mail.txt", "a+");
			fwrite($fp, $message . " \n");
			fclose($fp);*/
		
	}
}